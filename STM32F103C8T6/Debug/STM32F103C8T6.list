
STM32F103C8T6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002b30  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000038  08002c3c  08002c3c  00003c3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002c74  08002c74  0000403c  2**0
                  CONTENTS
  4 .ARM          00000000  08002c74  08002c74  0000403c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002c74  08002c74  0000403c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002c74  08002c74  00003c74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08002c78  08002c78  00003c78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000003c  20000000  08002c7c  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000018c  2000003c  08002cb8  0000403c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08002cb8  000041c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000403c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000a57b  00000000  00000000  00004065  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001e2c  00000000  00000000  0000e5e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000bd8  00000000  00000000  00010410  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000918  00000000  00000000  00010fe8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017ade  00000000  00000000  00011900  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000ced8  00000000  00000000  000293de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000898f5  00000000  00000000  000362b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000bfbab  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000302c  00000000  00000000  000bfbf0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007f  00000000  00000000  000c2c1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000003c 	.word	0x2000003c
 8000128:	00000000 	.word	0x00000000
 800012c:	08002c24 	.word	0x08002c24

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000040 	.word	0x20000040
 8000148:	08002c24 	.word	0x08002c24

0800014c <KeyPad_Scan>:
    /* Set all rows to high */
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_SET);
}

/* Scan the 4x5 keypad and return the pressed key value */
uint8_t KeyPad_Scan(void) {
 800014c:	b580      	push	{r7, lr}
 800014e:	b082      	sub	sp, #8
 8000150:	af00      	add	r7, sp, #0
    uint32_t currentMillis = HAL_GetTick();
 8000152:	f001 f825 	bl	80011a0 <HAL_GetTick>
 8000156:	6038      	str	r0, [r7, #0]

    if (currentMillis - lastDebounceTime < DEBOUNCE_DELAY) {
 8000158:	4b24      	ldr	r3, [pc, #144]	@ (80001ec <KeyPad_Scan+0xa0>)
 800015a:	681b      	ldr	r3, [r3, #0]
 800015c:	683a      	ldr	r2, [r7, #0]
 800015e:	1ad3      	subs	r3, r2, r3
 8000160:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8000164:	d201      	bcs.n	800016a <KeyPad_Scan+0x1e>
        return 0xFF;
 8000166:	23ff      	movs	r3, #255	@ 0xff
 8000168:	e03b      	b.n	80001e2 <KeyPad_Scan+0x96>
    }

    for (uint8_t row = 0; row < 4; row++) {
 800016a:	2300      	movs	r3, #0
 800016c:	71fb      	strb	r3, [r7, #7]
 800016e:	e034      	b.n	80001da <KeyPad_Scan+0x8e>
        /* Set all rows low */
        HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
 8000170:	2200      	movs	r2, #0
 8000172:	f44f 7170 	mov.w	r1, #960	@ 0x3c0
 8000176:	481e      	ldr	r0, [pc, #120]	@ (80001f0 <KeyPad_Scan+0xa4>)
 8000178:	f001 fac5 	bl	8001706 <HAL_GPIO_WritePin>

        /* Set the current row high */
        HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6 << row, GPIO_PIN_SET);
 800017c:	79fb      	ldrb	r3, [r7, #7]
 800017e:	2240      	movs	r2, #64	@ 0x40
 8000180:	fa02 f303 	lsl.w	r3, r2, r3
 8000184:	b29b      	uxth	r3, r3
 8000186:	2201      	movs	r2, #1
 8000188:	4619      	mov	r1, r3
 800018a:	4819      	ldr	r0, [pc, #100]	@ (80001f0 <KeyPad_Scan+0xa4>)
 800018c:	f001 fabb 	bl	8001706 <HAL_GPIO_WritePin>

        /* Read each column */
        for (uint8_t col = 0; col < 5; col++) {
 8000190:	2300      	movs	r3, #0
 8000192:	71bb      	strb	r3, [r7, #6]
 8000194:	e01b      	b.n	80001ce <KeyPad_Scan+0x82>
            if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0 << col) == GPIO_PIN_SET) {
 8000196:	79bb      	ldrb	r3, [r7, #6]
 8000198:	2201      	movs	r2, #1
 800019a:	fa02 f303 	lsl.w	r3, r2, r3
 800019e:	b29b      	uxth	r3, r3
 80001a0:	4619      	mov	r1, r3
 80001a2:	4813      	ldr	r0, [pc, #76]	@ (80001f0 <KeyPad_Scan+0xa4>)
 80001a4:	f001 fa98 	bl	80016d8 <HAL_GPIO_ReadPin>
 80001a8:	4603      	mov	r3, r0
 80001aa:	2b01      	cmp	r3, #1
 80001ac:	d10c      	bne.n	80001c8 <KeyPad_Scan+0x7c>
                lastDebounceTime = currentMillis;
 80001ae:	4a0f      	ldr	r2, [pc, #60]	@ (80001ec <KeyPad_Scan+0xa0>)
 80001b0:	683b      	ldr	r3, [r7, #0]
 80001b2:	6013      	str	r3, [r2, #0]
                return keyMap[row][col];
 80001b4:	79fa      	ldrb	r2, [r7, #7]
 80001b6:	79b9      	ldrb	r1, [r7, #6]
 80001b8:	480e      	ldr	r0, [pc, #56]	@ (80001f4 <KeyPad_Scan+0xa8>)
 80001ba:	4613      	mov	r3, r2
 80001bc:	009b      	lsls	r3, r3, #2
 80001be:	4413      	add	r3, r2
 80001c0:	4403      	add	r3, r0
 80001c2:	440b      	add	r3, r1
 80001c4:	781b      	ldrb	r3, [r3, #0]
 80001c6:	e00c      	b.n	80001e2 <KeyPad_Scan+0x96>
        for (uint8_t col = 0; col < 5; col++) {
 80001c8:	79bb      	ldrb	r3, [r7, #6]
 80001ca:	3301      	adds	r3, #1
 80001cc:	71bb      	strb	r3, [r7, #6]
 80001ce:	79bb      	ldrb	r3, [r7, #6]
 80001d0:	2b04      	cmp	r3, #4
 80001d2:	d9e0      	bls.n	8000196 <KeyPad_Scan+0x4a>
    for (uint8_t row = 0; row < 4; row++) {
 80001d4:	79fb      	ldrb	r3, [r7, #7]
 80001d6:	3301      	adds	r3, #1
 80001d8:	71fb      	strb	r3, [r7, #7]
 80001da:	79fb      	ldrb	r3, [r7, #7]
 80001dc:	2b03      	cmp	r3, #3
 80001de:	d9c7      	bls.n	8000170 <KeyPad_Scan+0x24>
            }
        }
    }

    return 0xFF;
 80001e0:	23ff      	movs	r3, #255	@ 0xff
}
 80001e2:	4618      	mov	r0, r3
 80001e4:	3708      	adds	r7, #8
 80001e6:	46bd      	mov	sp, r7
 80001e8:	bd80      	pop	{r7, pc}
 80001ea:	bf00      	nop
 80001ec:	20000058 	.word	0x20000058
 80001f0:	40010c00 	.word	0x40010c00
 80001f4:	08002c3c 	.word	0x08002c3c

080001f8 <formatTotalLiters>:

void formatTotalLiters(uint32_t total, uint32_t* buffer1, uint32_t* buffer2)
{
 80001f8:	b480      	push	{r7}
 80001fa:	b085      	sub	sp, #20
 80001fc:	af00      	add	r7, sp, #0
 80001fe:	60f8      	str	r0, [r7, #12]
 8000200:	60b9      	str	r1, [r7, #8]
 8000202:	607a      	str	r2, [r7, #4]
	if (total < 100000000) {
 8000204:	68fb      	ldr	r3, [r7, #12]
 8000206:	4a15      	ldr	r2, [pc, #84]	@ (800025c <formatTotalLiters+0x64>)
 8000208:	4293      	cmp	r3, r2
 800020a:	d815      	bhi.n	8000238 <formatTotalLiters+0x40>
		* buffer1 = total / 1000000;
 800020c:	68fb      	ldr	r3, [r7, #12]
 800020e:	4a14      	ldr	r2, [pc, #80]	@ (8000260 <formatTotalLiters+0x68>)
 8000210:	fba2 2303 	umull	r2, r3, r2, r3
 8000214:	0c9a      	lsrs	r2, r3, #18
 8000216:	68bb      	ldr	r3, [r7, #8]
 8000218:	601a      	str	r2, [r3, #0]
		* buffer2 = total % 1000000;
 800021a:	68fa      	ldr	r2, [r7, #12]
 800021c:	4b10      	ldr	r3, [pc, #64]	@ (8000260 <formatTotalLiters+0x68>)
 800021e:	fba3 1302 	umull	r1, r3, r3, r2
 8000222:	0c9b      	lsrs	r3, r3, #18
 8000224:	490f      	ldr	r1, [pc, #60]	@ (8000264 <formatTotalLiters+0x6c>)
 8000226:	fb01 f303 	mul.w	r3, r1, r3
 800022a:	1ad3      	subs	r3, r2, r3
 800022c:	687a      	ldr	r2, [r7, #4]
 800022e:	6013      	str	r3, [r2, #0]
		LEDPointFlag = 3;
 8000230:	4b0d      	ldr	r3, [pc, #52]	@ (8000268 <formatTotalLiters+0x70>)
 8000232:	2203      	movs	r2, #3
 8000234:	601a      	str	r2, [r3, #0]
	} else {
		* buffer1 = total / 100000000;
		* buffer2 = 0;
		LEDPointFlag = 2;
	}
}
 8000236:	e00c      	b.n	8000252 <formatTotalLiters+0x5a>
		* buffer1 = total / 100000000;
 8000238:	68fb      	ldr	r3, [r7, #12]
 800023a:	4a0c      	ldr	r2, [pc, #48]	@ (800026c <formatTotalLiters+0x74>)
 800023c:	fba2 2303 	umull	r2, r3, r2, r3
 8000240:	0e5a      	lsrs	r2, r3, #25
 8000242:	68bb      	ldr	r3, [r7, #8]
 8000244:	601a      	str	r2, [r3, #0]
		* buffer2 = 0;
 8000246:	687b      	ldr	r3, [r7, #4]
 8000248:	2200      	movs	r2, #0
 800024a:	601a      	str	r2, [r3, #0]
		LEDPointFlag = 2;
 800024c:	4b06      	ldr	r3, [pc, #24]	@ (8000268 <formatTotalLiters+0x70>)
 800024e:	2202      	movs	r2, #2
 8000250:	601a      	str	r2, [r3, #0]
}
 8000252:	bf00      	nop
 8000254:	3714      	adds	r7, #20
 8000256:	46bd      	mov	sp, r7
 8000258:	bc80      	pop	{r7}
 800025a:	4770      	bx	lr
 800025c:	05f5e0ff 	.word	0x05f5e0ff
 8000260:	431bde83 	.word	0x431bde83
 8000264:	000f4240 	.word	0x000f4240
 8000268:	2000002c 	.word	0x2000002c
 800026c:	55e63b89 	.word	0x55e63b89

08000270 <KeyLogic>:

void KeyLogic() {
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0
	keyPressed = KeyPad_Scan();
 8000274:	f7ff ff6a 	bl	800014c <KeyPad_Scan>
 8000278:	4603      	mov	r3, r0
 800027a:	461a      	mov	r2, r3
 800027c:	4b92      	ldr	r3, [pc, #584]	@ (80004c8 <KeyLogic+0x258>)
 800027e:	701a      	strb	r2, [r3, #0]
	if (keyPressed != 0xFF) {
 8000280:	4b91      	ldr	r3, [pc, #580]	@ (80004c8 <KeyLogic+0x258>)
 8000282:	781b      	ldrb	r3, [r3, #0]
 8000284:	2bff      	cmp	r3, #255	@ 0xff
 8000286:	f000 811c 	beq.w	80004c2 <KeyLogic+0x252>
		if (seqState == SEQ_NUMBER) {
 800028a:	4b90      	ldr	r3, [pc, #576]	@ (80004cc <KeyLogic+0x25c>)
 800028c:	781b      	ldrb	r3, [r3, #0]
 800028e:	2b06      	cmp	r3, #6
 8000290:	d12a      	bne.n	80002e8 <KeyLogic+0x78>
			if (keyPressed >= '0' && keyPressed <= '9') {
 8000292:	4b8d      	ldr	r3, [pc, #564]	@ (80004c8 <KeyLogic+0x258>)
 8000294:	781b      	ldrb	r3, [r3, #0]
 8000296:	2b2f      	cmp	r3, #47	@ 0x2f
 8000298:	d91c      	bls.n	80002d4 <KeyLogic+0x64>
 800029a:	4b8b      	ldr	r3, [pc, #556]	@ (80004c8 <KeyLogic+0x258>)
 800029c:	781b      	ldrb	r3, [r3, #0]
 800029e:	2b39      	cmp	r3, #57	@ 0x39
 80002a0:	d818      	bhi.n	80002d4 <KeyLogic+0x64>
				if (numberOfDigits < 6) {
 80002a2:	4b8b      	ldr	r3, [pc, #556]	@ (80004d0 <KeyLogic+0x260>)
 80002a4:	781b      	ldrb	r3, [r3, #0]
 80002a6:	2b05      	cmp	r3, #5
 80002a8:	f200 8108 	bhi.w	80004bc <KeyLogic+0x24c>
					accumulatedNumber = accumulatedNumber * 10 + (keyPressed - '0');
 80002ac:	4b89      	ldr	r3, [pc, #548]	@ (80004d4 <KeyLogic+0x264>)
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	4613      	mov	r3, r2
 80002b2:	009b      	lsls	r3, r3, #2
 80002b4:	4413      	add	r3, r2
 80002b6:	005b      	lsls	r3, r3, #1
 80002b8:	461a      	mov	r2, r3
 80002ba:	4b83      	ldr	r3, [pc, #524]	@ (80004c8 <KeyLogic+0x258>)
 80002bc:	781b      	ldrb	r3, [r3, #0]
 80002be:	4413      	add	r3, r2
 80002c0:	3b30      	subs	r3, #48	@ 0x30
 80002c2:	4a84      	ldr	r2, [pc, #528]	@ (80004d4 <KeyLogic+0x264>)
 80002c4:	6013      	str	r3, [r2, #0]
					numberOfDigits++;
 80002c6:	4b82      	ldr	r3, [pc, #520]	@ (80004d0 <KeyLogic+0x260>)
 80002c8:	781b      	ldrb	r3, [r3, #0]
 80002ca:	3301      	adds	r3, #1
 80002cc:	b2da      	uxtb	r2, r3
 80002ce:	4b80      	ldr	r3, [pc, #512]	@ (80004d0 <KeyLogic+0x260>)
 80002d0:	701a      	strb	r2, [r3, #0]
				if (numberOfDigits < 6) {
 80002d2:	e0f3      	b.n	80004bc <KeyLogic+0x24c>
				}
			} else {
				seqState = SEQ_IDLE;
 80002d4:	4b7d      	ldr	r3, [pc, #500]	@ (80004cc <KeyLogic+0x25c>)
 80002d6:	2200      	movs	r2, #0
 80002d8:	701a      	strb	r2, [r3, #0]
				numberOfDigits = 0;
 80002da:	4b7d      	ldr	r3, [pc, #500]	@ (80004d0 <KeyLogic+0x260>)
 80002dc:	2200      	movs	r2, #0
 80002de:	701a      	strb	r2, [r3, #0]
				accumulatedNumber = 0;
 80002e0:	4b7c      	ldr	r3, [pc, #496]	@ (80004d4 <KeyLogic+0x264>)
 80002e2:	2200      	movs	r2, #0
 80002e4:	601a      	str	r2, [r3, #0]
 80002e6:	e0e9      	b.n	80004bc <KeyLogic+0x24c>
			}
		} else {
			switch (keyPressed) {
 80002e8:	4b77      	ldr	r3, [pc, #476]	@ (80004c8 <KeyLogic+0x258>)
 80002ea:	781b      	ldrb	r3, [r3, #0]
 80002ec:	3b24      	subs	r3, #36	@ 0x24
 80002ee:	2b30      	cmp	r3, #48	@ 0x30
 80002f0:	f200 80cb 	bhi.w	800048a <KeyLogic+0x21a>
 80002f4:	a201      	add	r2, pc, #4	@ (adr r2, 80002fc <KeyLogic+0x8c>)
 80002f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80002fa:	bf00      	nop
 80002fc:	0800042b 	.word	0x0800042b
 8000300:	0800048b 	.word	0x0800048b
 8000304:	0800048b 	.word	0x0800048b
 8000308:	0800048b 	.word	0x0800048b
 800030c:	0800048b 	.word	0x0800048b
 8000310:	0800048b 	.word	0x0800048b
 8000314:	0800048b 	.word	0x0800048b
 8000318:	0800048b 	.word	0x0800048b
 800031c:	0800048b 	.word	0x0800048b
 8000320:	0800048b 	.word	0x0800048b
 8000324:	0800048b 	.word	0x0800048b
 8000328:	0800048b 	.word	0x0800048b
 800032c:	0800048b 	.word	0x0800048b
 8000330:	0800048b 	.word	0x0800048b
 8000334:	0800048b 	.word	0x0800048b
 8000338:	0800048b 	.word	0x0800048b
 800033c:	0800048b 	.word	0x0800048b
 8000340:	0800048b 	.word	0x0800048b
 8000344:	0800048b 	.word	0x0800048b
 8000348:	0800048b 	.word	0x0800048b
 800034c:	0800048b 	.word	0x0800048b
 8000350:	0800048b 	.word	0x0800048b
 8000354:	0800048b 	.word	0x0800048b
 8000358:	0800048b 	.word	0x0800048b
 800035c:	0800048b 	.word	0x0800048b
 8000360:	0800048b 	.word	0x0800048b
 8000364:	0800048b 	.word	0x0800048b
 8000368:	0800048b 	.word	0x0800048b
 800036c:	0800048b 	.word	0x0800048b
 8000370:	080003c1 	.word	0x080003c1
 8000374:	080003d7 	.word	0x080003d7
 8000378:	080003eb 	.word	0x080003eb
 800037c:	0800045b 	.word	0x0800045b
 8000380:	080003ff 	.word	0x080003ff
 8000384:	08000473 	.word	0x08000473
 8000388:	0800048b 	.word	0x0800048b
 800038c:	0800048b 	.word	0x0800048b
 8000390:	0800048b 	.word	0x0800048b
 8000394:	0800048b 	.word	0x0800048b
 8000398:	0800048b 	.word	0x0800048b
 800039c:	08000443 	.word	0x08000443
 80003a0:	0800048b 	.word	0x0800048b
 80003a4:	0800048b 	.word	0x0800048b
 80003a8:	0800048b 	.word	0x0800048b
 80003ac:	0800048b 	.word	0x0800048b
 80003b0:	0800048b 	.word	0x0800048b
 80003b4:	0800048b 	.word	0x0800048b
 80003b8:	0800048b 	.word	0x0800048b
 80003bc:	08000413 	.word	0x08000413
				case 'A':
					SevenSegBuffer[0] = 0;
 80003c0:	4b45      	ldr	r3, [pc, #276]	@ (80004d8 <KeyLogic+0x268>)
 80003c2:	2200      	movs	r2, #0
 80003c4:	601a      	str	r2, [r3, #0]
					SevenSegBuffer[1] = 10000;
 80003c6:	4b44      	ldr	r3, [pc, #272]	@ (80004d8 <KeyLogic+0x268>)
 80003c8:	f242 7210 	movw	r2, #10000	@ 0x2710
 80003cc:	605a      	str	r2, [r3, #4]
					SevenSegBuffer[2] = 0;
 80003ce:	4b42      	ldr	r3, [pc, #264]	@ (80004d8 <KeyLogic+0x268>)
 80003d0:	2200      	movs	r2, #0
 80003d2:	609a      	str	r2, [r3, #8]
					break;
 80003d4:	e072      	b.n	80004bc <KeyLogic+0x24c>
				case 'B':
					SevenSegBuffer[0] = 0;
 80003d6:	4b40      	ldr	r3, [pc, #256]	@ (80004d8 <KeyLogic+0x268>)
 80003d8:	2200      	movs	r2, #0
 80003da:	601a      	str	r2, [r3, #0]
					SevenSegBuffer[1] = 100000;
 80003dc:	4b3e      	ldr	r3, [pc, #248]	@ (80004d8 <KeyLogic+0x268>)
 80003de:	4a3f      	ldr	r2, [pc, #252]	@ (80004dc <KeyLogic+0x26c>)
 80003e0:	605a      	str	r2, [r3, #4]
					SevenSegBuffer[2] = 0;
 80003e2:	4b3d      	ldr	r3, [pc, #244]	@ (80004d8 <KeyLogic+0x268>)
 80003e4:	2200      	movs	r2, #0
 80003e6:	609a      	str	r2, [r3, #8]
					break;
 80003e8:	e068      	b.n	80004bc <KeyLogic+0x24c>
				case 'C':
					SevenSegBuffer[0] = 0;
 80003ea:	4b3b      	ldr	r3, [pc, #236]	@ (80004d8 <KeyLogic+0x268>)
 80003ec:	2200      	movs	r2, #0
 80003ee:	601a      	str	r2, [r3, #0]
					SevenSegBuffer[1] = 0;
 80003f0:	4b39      	ldr	r3, [pc, #228]	@ (80004d8 <KeyLogic+0x268>)
 80003f2:	2200      	movs	r2, #0
 80003f4:	605a      	str	r2, [r3, #4]
					SevenSegBuffer[2] = 1;
 80003f6:	4b38      	ldr	r3, [pc, #224]	@ (80004d8 <KeyLogic+0x268>)
 80003f8:	2201      	movs	r2, #1
 80003fa:	609a      	str	r2, [r3, #8]
					break;
 80003fc:	e05e      	b.n	80004bc <KeyLogic+0x24c>
				case 'E':
					SevenSegBuffer[0] = 0;
 80003fe:	4b36      	ldr	r3, [pc, #216]	@ (80004d8 <KeyLogic+0x268>)
 8000400:	2200      	movs	r2, #0
 8000402:	601a      	str	r2, [r3, #0]
					SevenSegBuffer[1] = 0;
 8000404:	4b34      	ldr	r3, [pc, #208]	@ (80004d8 <KeyLogic+0x268>)
 8000406:	2200      	movs	r2, #0
 8000408:	605a      	str	r2, [r3, #4]
					SevenSegBuffer[2] = 100;
 800040a:	4b33      	ldr	r3, [pc, #204]	@ (80004d8 <KeyLogic+0x268>)
 800040c:	2264      	movs	r2, #100	@ 0x64
 800040e:	609a      	str	r2, [r3, #8]
					break;
 8000410:	e054      	b.n	80004bc <KeyLogic+0x24c>
				case 'T':
					if (seqState == SEQ_IDLE) {
 8000412:	4b2e      	ldr	r3, [pc, #184]	@ (80004cc <KeyLogic+0x25c>)
 8000414:	781b      	ldrb	r3, [r3, #0]
 8000416:	2b00      	cmp	r3, #0
 8000418:	d103      	bne.n	8000422 <KeyLogic+0x1b2>
						seqState = SEQ_PRESSED_T;
 800041a:	4b2c      	ldr	r3, [pc, #176]	@ (80004cc <KeyLogic+0x25c>)
 800041c:	2201      	movs	r2, #1
 800041e:	701a      	strb	r2, [r3, #0]
					} else {
						seqState = SEQ_IDLE;
					}
					break;
 8000420:	e04c      	b.n	80004bc <KeyLogic+0x24c>
						seqState = SEQ_IDLE;
 8000422:	4b2a      	ldr	r3, [pc, #168]	@ (80004cc <KeyLogic+0x25c>)
 8000424:	2200      	movs	r2, #0
 8000426:	701a      	strb	r2, [r3, #0]
					break;
 8000428:	e048      	b.n	80004bc <KeyLogic+0x24c>
				case '$':
					if (seqState == SEQ_PRESSED_T) {
 800042a:	4b28      	ldr	r3, [pc, #160]	@ (80004cc <KeyLogic+0x25c>)
 800042c:	781b      	ldrb	r3, [r3, #0]
 800042e:	2b01      	cmp	r3, #1
 8000430:	d103      	bne.n	800043a <KeyLogic+0x1ca>
						seqState = SEQ_PRESSED_T_$;
 8000432:	4b26      	ldr	r3, [pc, #152]	@ (80004cc <KeyLogic+0x25c>)
 8000434:	2203      	movs	r2, #3
 8000436:	701a      	strb	r2, [r3, #0]
					} else {
						seqState = SEQ_IDLE;
					}
					break;
 8000438:	e040      	b.n	80004bc <KeyLogic+0x24c>
						seqState = SEQ_IDLE;
 800043a:	4b24      	ldr	r3, [pc, #144]	@ (80004cc <KeyLogic+0x25c>)
 800043c:	2200      	movs	r2, #0
 800043e:	701a      	strb	r2, [r3, #0]
					break;
 8000440:	e03c      	b.n	80004bc <KeyLogic+0x24c>
				case 'L':
					if (seqState == SEQ_PRESSED_T) {
 8000442:	4b22      	ldr	r3, [pc, #136]	@ (80004cc <KeyLogic+0x25c>)
 8000444:	781b      	ldrb	r3, [r3, #0]
 8000446:	2b01      	cmp	r3, #1
 8000448:	d103      	bne.n	8000452 <KeyLogic+0x1e2>
						seqState = SEQ_PRESSED_T_L;
 800044a:	4b20      	ldr	r3, [pc, #128]	@ (80004cc <KeyLogic+0x25c>)
 800044c:	2202      	movs	r2, #2
 800044e:	701a      	strb	r2, [r3, #0]
					} else {
						seqState = SEQ_IDLE;
					}
					break;
 8000450:	e034      	b.n	80004bc <KeyLogic+0x24c>
						seqState = SEQ_IDLE;
 8000452:	4b1e      	ldr	r3, [pc, #120]	@ (80004cc <KeyLogic+0x25c>)
 8000454:	2200      	movs	r2, #0
 8000456:	701a      	strb	r2, [r3, #0]
					break;
 8000458:	e030      	b.n	80004bc <KeyLogic+0x24c>
				case 'D':
					if (seqState == SEQ_PRESSED_T) {
 800045a:	4b1c      	ldr	r3, [pc, #112]	@ (80004cc <KeyLogic+0x25c>)
 800045c:	781b      	ldrb	r3, [r3, #0]
 800045e:	2b01      	cmp	r3, #1
 8000460:	d103      	bne.n	800046a <KeyLogic+0x1fa>
						seqState = SEQ_PRESSED_T_F3;
 8000462:	4b1a      	ldr	r3, [pc, #104]	@ (80004cc <KeyLogic+0x25c>)
 8000464:	2204      	movs	r2, #4
 8000466:	701a      	strb	r2, [r3, #0]
					} else {
						seqState = SEQ_IDLE;
					}
					break;
 8000468:	e028      	b.n	80004bc <KeyLogic+0x24c>
						seqState = SEQ_IDLE;
 800046a:	4b18      	ldr	r3, [pc, #96]	@ (80004cc <KeyLogic+0x25c>)
 800046c:	2200      	movs	r2, #0
 800046e:	701a      	strb	r2, [r3, #0]
					break;
 8000470:	e024      	b.n	80004bc <KeyLogic+0x24c>
				case 'F':
					if (seqState == SEQ_PRESSED_T) {
 8000472:	4b16      	ldr	r3, [pc, #88]	@ (80004cc <KeyLogic+0x25c>)
 8000474:	781b      	ldrb	r3, [r3, #0]
 8000476:	2b01      	cmp	r3, #1
 8000478:	d103      	bne.n	8000482 <KeyLogic+0x212>
						seqState = SEQ_PRESSED_T_F4;
 800047a:	4b14      	ldr	r3, [pc, #80]	@ (80004cc <KeyLogic+0x25c>)
 800047c:	2205      	movs	r2, #5
 800047e:	701a      	strb	r2, [r3, #0]
					} else {
						seqState = SEQ_IDLE;
					}
					break;
 8000480:	e01c      	b.n	80004bc <KeyLogic+0x24c>
						seqState = SEQ_IDLE;
 8000482:	4b12      	ldr	r3, [pc, #72]	@ (80004cc <KeyLogic+0x25c>)
 8000484:	2200      	movs	r2, #0
 8000486:	701a      	strb	r2, [r3, #0]
					break;
 8000488:	e018      	b.n	80004bc <KeyLogic+0x24c>
				default:
					if (keyPressed >= '0' && keyPressed <= '9') {
 800048a:	4b0f      	ldr	r3, [pc, #60]	@ (80004c8 <KeyLogic+0x258>)
 800048c:	781b      	ldrb	r3, [r3, #0]
 800048e:	2b2f      	cmp	r3, #47	@ 0x2f
 8000490:	d910      	bls.n	80004b4 <KeyLogic+0x244>
 8000492:	4b0d      	ldr	r3, [pc, #52]	@ (80004c8 <KeyLogic+0x258>)
 8000494:	781b      	ldrb	r3, [r3, #0]
 8000496:	2b39      	cmp	r3, #57	@ 0x39
 8000498:	d80c      	bhi.n	80004b4 <KeyLogic+0x244>
						seqState = SEQ_NUMBER;
 800049a:	4b0c      	ldr	r3, [pc, #48]	@ (80004cc <KeyLogic+0x25c>)
 800049c:	2206      	movs	r2, #6
 800049e:	701a      	strb	r2, [r3, #0]
						accumulatedNumber = keyPressed - '0';
 80004a0:	4b09      	ldr	r3, [pc, #36]	@ (80004c8 <KeyLogic+0x258>)
 80004a2:	781b      	ldrb	r3, [r3, #0]
 80004a4:	3b30      	subs	r3, #48	@ 0x30
 80004a6:	461a      	mov	r2, r3
 80004a8:	4b0a      	ldr	r3, [pc, #40]	@ (80004d4 <KeyLogic+0x264>)
 80004aa:	601a      	str	r2, [r3, #0]
						numberOfDigits = 1;
 80004ac:	4b08      	ldr	r3, [pc, #32]	@ (80004d0 <KeyLogic+0x260>)
 80004ae:	2201      	movs	r2, #1
 80004b0:	701a      	strb	r2, [r3, #0]
					} else {
						seqState = SEQ_IDLE;
					}
					break;
 80004b2:	e002      	b.n	80004ba <KeyLogic+0x24a>
						seqState = SEQ_IDLE;
 80004b4:	4b05      	ldr	r3, [pc, #20]	@ (80004cc <KeyLogic+0x25c>)
 80004b6:	2200      	movs	r2, #0
 80004b8:	701a      	strb	r2, [r3, #0]
					break;
 80004ba:	bf00      	nop
			}
		}
		keyPressed = 0xFF;
 80004bc:	4b02      	ldr	r3, [pc, #8]	@ (80004c8 <KeyLogic+0x258>)
 80004be:	22ff      	movs	r2, #255	@ 0xff
 80004c0:	701a      	strb	r2, [r3, #0]
	}
}
 80004c2:	bf00      	nop
 80004c4:	bd80      	pop	{r7, pc}
 80004c6:	bf00      	nop
 80004c8:	20000024 	.word	0x20000024
 80004cc:	2000006c 	.word	0x2000006c
 80004d0:	20000060 	.word	0x20000060
 80004d4:	2000005c 	.word	0x2000005c
 80004d8:	20000018 	.word	0x20000018
 80004dc:	000186a0 	.word	0x000186a0

080004e0 <KeyLogic_Action>:

void KeyLogic_Action() {
 80004e0:	b580      	push	{r7, lr}
 80004e2:	af00      	add	r7, sp, #0
    switch (seqState) {
 80004e4:	4b3a      	ldr	r3, [pc, #232]	@ (80005d0 <KeyLogic_Action+0xf0>)
 80004e6:	781b      	ldrb	r3, [r3, #0]
 80004e8:	2b06      	cmp	r3, #6
 80004ea:	d864      	bhi.n	80005b6 <KeyLogic_Action+0xd6>
 80004ec:	a201      	add	r2, pc, #4	@ (adr r2, 80004f4 <KeyLogic_Action+0x14>)
 80004ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004f2:	bf00      	nop
 80004f4:	08000511 	.word	0x08000511
 80004f8:	08000525 	.word	0x08000525
 80004fc:	0800054d 	.word	0x0800054d
 8000500:	08000539 	.word	0x08000539
 8000504:	08000573 	.word	0x08000573
 8000508:	08000587 	.word	0x08000587
 800050c:	0800059b 	.word	0x0800059b
        case SEQ_IDLE:
            SevenSegBuffer[0] = 0;
 8000510:	4b30      	ldr	r3, [pc, #192]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000512:	2200      	movs	r2, #0
 8000514:	601a      	str	r2, [r3, #0]
            SevenSegBuffer[1] = 0;
 8000516:	4b2f      	ldr	r3, [pc, #188]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000518:	2200      	movs	r2, #0
 800051a:	605a      	str	r2, [r3, #4]
            SevenSegBuffer[2] = 0;
 800051c:	4b2d      	ldr	r3, [pc, #180]	@ (80005d4 <KeyLogic_Action+0xf4>)
 800051e:	2200      	movs	r2, #0
 8000520:	609a      	str	r2, [r3, #8]
            break;
 8000522:	e052      	b.n	80005ca <KeyLogic_Action+0xea>
        case SEQ_PRESSED_T:
            SevenSegBuffer[0] = 0;
 8000524:	4b2b      	ldr	r3, [pc, #172]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000526:	2200      	movs	r2, #0
 8000528:	601a      	str	r2, [r3, #0]
            SevenSegBuffer[1] = 0;
 800052a:	4b2a      	ldr	r3, [pc, #168]	@ (80005d4 <KeyLogic_Action+0xf4>)
 800052c:	2200      	movs	r2, #0
 800052e:	605a      	str	r2, [r3, #4]
            SevenSegBuffer[2] = 999999;
 8000530:	4b28      	ldr	r3, [pc, #160]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000532:	4a29      	ldr	r2, [pc, #164]	@ (80005d8 <KeyLogic_Action+0xf8>)
 8000534:	609a      	str	r2, [r3, #8]
            break;
 8000536:	e048      	b.n	80005ca <KeyLogic_Action+0xea>
        case SEQ_PRESSED_T_$:
            SevenSegBuffer[0] = 0;
 8000538:	4b26      	ldr	r3, [pc, #152]	@ (80005d4 <KeyLogic_Action+0xf4>)
 800053a:	2200      	movs	r2, #0
 800053c:	601a      	str	r2, [r3, #0]
            SevenSegBuffer[1] = 0;
 800053e:	4b25      	ldr	r3, [pc, #148]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000540:	2200      	movs	r2, #0
 8000542:	605a      	str	r2, [r3, #4]
            SevenSegBuffer[2] = 111111;
 8000544:	4b23      	ldr	r3, [pc, #140]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000546:	4a25      	ldr	r2, [pc, #148]	@ (80005dc <KeyLogic_Action+0xfc>)
 8000548:	609a      	str	r2, [r3, #8]
            break;
 800054a:	e03e      	b.n	80005ca <KeyLogic_Action+0xea>
        case SEQ_PRESSED_T_L:
        	formatTotalLiters(totalLiters, &row1, &row2);
 800054c:	4b24      	ldr	r3, [pc, #144]	@ (80005e0 <KeyLogic_Action+0x100>)
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	4a24      	ldr	r2, [pc, #144]	@ (80005e4 <KeyLogic_Action+0x104>)
 8000552:	4925      	ldr	r1, [pc, #148]	@ (80005e8 <KeyLogic_Action+0x108>)
 8000554:	4618      	mov	r0, r3
 8000556:	f7ff fe4f 	bl	80001f8 <formatTotalLiters>
            SevenSegBuffer[0] = row1;
 800055a:	4b23      	ldr	r3, [pc, #140]	@ (80005e8 <KeyLogic_Action+0x108>)
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	4a1d      	ldr	r2, [pc, #116]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000560:	6013      	str	r3, [r2, #0]
            SevenSegBuffer[1] = row2;
 8000562:	4b20      	ldr	r3, [pc, #128]	@ (80005e4 <KeyLogic_Action+0x104>)
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	4a1b      	ldr	r2, [pc, #108]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000568:	6053      	str	r3, [r2, #4]
            SevenSegBuffer[2] = 0;
 800056a:	4b1a      	ldr	r3, [pc, #104]	@ (80005d4 <KeyLogic_Action+0xf4>)
 800056c:	2200      	movs	r2, #0
 800056e:	609a      	str	r2, [r3, #8]
            break;
 8000570:	e02b      	b.n	80005ca <KeyLogic_Action+0xea>
        case SEQ_PRESSED_T_F3:
            SevenSegBuffer[0] = 333333;
 8000572:	4b18      	ldr	r3, [pc, #96]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000574:	4a1d      	ldr	r2, [pc, #116]	@ (80005ec <KeyLogic_Action+0x10c>)
 8000576:	601a      	str	r2, [r3, #0]
            SevenSegBuffer[1] = 0;
 8000578:	4b16      	ldr	r3, [pc, #88]	@ (80005d4 <KeyLogic_Action+0xf4>)
 800057a:	2200      	movs	r2, #0
 800057c:	605a      	str	r2, [r3, #4]
            SevenSegBuffer[2] = 0;
 800057e:	4b15      	ldr	r3, [pc, #84]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000580:	2200      	movs	r2, #0
 8000582:	609a      	str	r2, [r3, #8]
            break;
 8000584:	e021      	b.n	80005ca <KeyLogic_Action+0xea>
        case SEQ_PRESSED_T_F4:
            SevenSegBuffer[0] = 444444;
 8000586:	4b13      	ldr	r3, [pc, #76]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000588:	4a19      	ldr	r2, [pc, #100]	@ (80005f0 <KeyLogic_Action+0x110>)
 800058a:	601a      	str	r2, [r3, #0]
            SevenSegBuffer[1] = 0;
 800058c:	4b11      	ldr	r3, [pc, #68]	@ (80005d4 <KeyLogic_Action+0xf4>)
 800058e:	2200      	movs	r2, #0
 8000590:	605a      	str	r2, [r3, #4]
            SevenSegBuffer[2] = 0;
 8000592:	4b10      	ldr	r3, [pc, #64]	@ (80005d4 <KeyLogic_Action+0xf4>)
 8000594:	2200      	movs	r2, #0
 8000596:	609a      	str	r2, [r3, #8]
            break;
 8000598:	e017      	b.n	80005ca <KeyLogic_Action+0xea>
        case SEQ_NUMBER:
			SevenSegBuffer[0] = accumulatedNumber;
 800059a:	4b16      	ldr	r3, [pc, #88]	@ (80005f4 <KeyLogic_Action+0x114>)
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	4a0d      	ldr	r2, [pc, #52]	@ (80005d4 <KeyLogic_Action+0xf4>)
 80005a0:	6013      	str	r3, [r2, #0]
			SevenSegBuffer[1] = 0;
 80005a2:	4b0c      	ldr	r3, [pc, #48]	@ (80005d4 <KeyLogic_Action+0xf4>)
 80005a4:	2200      	movs	r2, #0
 80005a6:	605a      	str	r2, [r3, #4]
			SevenSegBuffer[2] = 0;
 80005a8:	4b0a      	ldr	r3, [pc, #40]	@ (80005d4 <KeyLogic_Action+0xf4>)
 80005aa:	2200      	movs	r2, #0
 80005ac:	609a      	str	r2, [r3, #8]
        	LEDPointFlag = 6;
 80005ae:	4b12      	ldr	r3, [pc, #72]	@ (80005f8 <KeyLogic_Action+0x118>)
 80005b0:	2206      	movs	r2, #6
 80005b2:	601a      	str	r2, [r3, #0]
			break;
 80005b4:	e009      	b.n	80005ca <KeyLogic_Action+0xea>
        default:
            SevenSegBuffer[0] = 0;
 80005b6:	4b07      	ldr	r3, [pc, #28]	@ (80005d4 <KeyLogic_Action+0xf4>)
 80005b8:	2200      	movs	r2, #0
 80005ba:	601a      	str	r2, [r3, #0]
            SevenSegBuffer[1] = 0;
 80005bc:	4b05      	ldr	r3, [pc, #20]	@ (80005d4 <KeyLogic_Action+0xf4>)
 80005be:	2200      	movs	r2, #0
 80005c0:	605a      	str	r2, [r3, #4]
            SevenSegBuffer[2] = 0;
 80005c2:	4b04      	ldr	r3, [pc, #16]	@ (80005d4 <KeyLogic_Action+0xf4>)
 80005c4:	2200      	movs	r2, #0
 80005c6:	609a      	str	r2, [r3, #8]
            break;
 80005c8:	bf00      	nop
    }
}
 80005ca:	bf00      	nop
 80005cc:	bd80      	pop	{r7, pc}
 80005ce:	bf00      	nop
 80005d0:	2000006c 	.word	0x2000006c
 80005d4:	20000018 	.word	0x20000018
 80005d8:	000f423f 	.word	0x000f423f
 80005dc:	0001b207 	.word	0x0001b207
 80005e0:	20000028 	.word	0x20000028
 80005e4:	20000068 	.word	0x20000068
 80005e8:	20000064 	.word	0x20000064
 80005ec:	00051615 	.word	0x00051615
 80005f0:	0006c81c 	.word	0x0006c81c
 80005f4:	2000005c 	.word	0x2000005c
 80005f8:	2000002c 	.word	0x2000002c

080005fc <SevenSegLEDsHandler>:
uint8_t SevenSegScanState=0;
uint32_t SevenSegBuffer[3]={123456, 654321, 987654};
uint8_t displayBuffer[5];  // Double buffer
volatile uint8_t currentBufferIndex = 0;

uint8_t* SevenSegLEDsHandler(uint32_t* buffer, uint8_t scan_state) {
 80005fc:	b480      	push	{r7}
 80005fe:	b083      	sub	sp, #12
 8000600:	af00      	add	r7, sp, #0
 8000602:	6078      	str	r0, [r7, #4]
 8000604:	460b      	mov	r3, r1
 8000606:	70fb      	strb	r3, [r7, #3]
    static uint8_t output[3];
    switch (scan_state) {
 8000608:	78fb      	ldrb	r3, [r7, #3]
 800060a:	2b05      	cmp	r3, #5
 800060c:	f200 815d 	bhi.w	80008ca <SevenSegLEDsHandler+0x2ce>
 8000610:	a201      	add	r2, pc, #4	@ (adr r2, 8000618 <SevenSegLEDsHandler+0x1c>)
 8000612:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000616:	bf00      	nop
 8000618:	08000631 	.word	0x08000631
 800061c:	0800068b 	.word	0x0800068b
 8000620:	080006fd 	.word	0x080006fd
 8000624:	0800076f 	.word	0x0800076f
 8000628:	080007e1 	.word	0x080007e1
 800062c:	08000853 	.word	0x08000853
        case 0:
            output[0] = buffer[0] % 10;
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	6819      	ldr	r1, [r3, #0]
 8000634:	4ba8      	ldr	r3, [pc, #672]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 8000636:	fba3 2301 	umull	r2, r3, r3, r1
 800063a:	08da      	lsrs	r2, r3, #3
 800063c:	4613      	mov	r3, r2
 800063e:	009b      	lsls	r3, r3, #2
 8000640:	4413      	add	r3, r2
 8000642:	005b      	lsls	r3, r3, #1
 8000644:	1aca      	subs	r2, r1, r3
 8000646:	b2d2      	uxtb	r2, r2
 8000648:	4ba4      	ldr	r3, [pc, #656]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 800064a:	701a      	strb	r2, [r3, #0]
            output[1] = buffer[1] % 10;
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	3304      	adds	r3, #4
 8000650:	6819      	ldr	r1, [r3, #0]
 8000652:	4ba1      	ldr	r3, [pc, #644]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 8000654:	fba3 2301 	umull	r2, r3, r3, r1
 8000658:	08da      	lsrs	r2, r3, #3
 800065a:	4613      	mov	r3, r2
 800065c:	009b      	lsls	r3, r3, #2
 800065e:	4413      	add	r3, r2
 8000660:	005b      	lsls	r3, r3, #1
 8000662:	1aca      	subs	r2, r1, r3
 8000664:	b2d2      	uxtb	r2, r2
 8000666:	4b9d      	ldr	r3, [pc, #628]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 8000668:	705a      	strb	r2, [r3, #1]
            output[2] = buffer[2] % 10;
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	3308      	adds	r3, #8
 800066e:	6819      	ldr	r1, [r3, #0]
 8000670:	4b99      	ldr	r3, [pc, #612]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 8000672:	fba3 2301 	umull	r2, r3, r3, r1
 8000676:	08da      	lsrs	r2, r3, #3
 8000678:	4613      	mov	r3, r2
 800067a:	009b      	lsls	r3, r3, #2
 800067c:	4413      	add	r3, r2
 800067e:	005b      	lsls	r3, r3, #1
 8000680:	1aca      	subs	r2, r1, r3
 8000682:	b2d2      	uxtb	r2, r2
 8000684:	4b95      	ldr	r3, [pc, #596]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 8000686:	709a      	strb	r2, [r3, #2]
            break;
 8000688:	e11f      	b.n	80008ca <SevenSegLEDsHandler+0x2ce>
        case 1:
            output[0] = (buffer[0] / 10) % 10;
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	681b      	ldr	r3, [r3, #0]
 800068e:	4a92      	ldr	r2, [pc, #584]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 8000690:	fba2 2303 	umull	r2, r3, r2, r3
 8000694:	08d9      	lsrs	r1, r3, #3
 8000696:	4b90      	ldr	r3, [pc, #576]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 8000698:	fba3 2301 	umull	r2, r3, r3, r1
 800069c:	08da      	lsrs	r2, r3, #3
 800069e:	4613      	mov	r3, r2
 80006a0:	009b      	lsls	r3, r3, #2
 80006a2:	4413      	add	r3, r2
 80006a4:	005b      	lsls	r3, r3, #1
 80006a6:	1aca      	subs	r2, r1, r3
 80006a8:	b2d2      	uxtb	r2, r2
 80006aa:	4b8c      	ldr	r3, [pc, #560]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 80006ac:	701a      	strb	r2, [r3, #0]
            output[1] = (buffer[1] / 10) % 10;
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	3304      	adds	r3, #4
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	4a88      	ldr	r2, [pc, #544]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 80006b6:	fba2 2303 	umull	r2, r3, r2, r3
 80006ba:	08d9      	lsrs	r1, r3, #3
 80006bc:	4b86      	ldr	r3, [pc, #536]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 80006be:	fba3 2301 	umull	r2, r3, r3, r1
 80006c2:	08da      	lsrs	r2, r3, #3
 80006c4:	4613      	mov	r3, r2
 80006c6:	009b      	lsls	r3, r3, #2
 80006c8:	4413      	add	r3, r2
 80006ca:	005b      	lsls	r3, r3, #1
 80006cc:	1aca      	subs	r2, r1, r3
 80006ce:	b2d2      	uxtb	r2, r2
 80006d0:	4b82      	ldr	r3, [pc, #520]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 80006d2:	705a      	strb	r2, [r3, #1]
            output[2] = (buffer[2] / 10) % 10;
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	3308      	adds	r3, #8
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	4a7f      	ldr	r2, [pc, #508]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 80006dc:	fba2 2303 	umull	r2, r3, r2, r3
 80006e0:	08d9      	lsrs	r1, r3, #3
 80006e2:	4b7d      	ldr	r3, [pc, #500]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 80006e4:	fba3 2301 	umull	r2, r3, r3, r1
 80006e8:	08da      	lsrs	r2, r3, #3
 80006ea:	4613      	mov	r3, r2
 80006ec:	009b      	lsls	r3, r3, #2
 80006ee:	4413      	add	r3, r2
 80006f0:	005b      	lsls	r3, r3, #1
 80006f2:	1aca      	subs	r2, r1, r3
 80006f4:	b2d2      	uxtb	r2, r2
 80006f6:	4b79      	ldr	r3, [pc, #484]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 80006f8:	709a      	strb	r2, [r3, #2]
            break;
 80006fa:	e0e6      	b.n	80008ca <SevenSegLEDsHandler+0x2ce>
        case 2:
            output[0] = (buffer[0] / 100) % 10;
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	4a77      	ldr	r2, [pc, #476]	@ (80008e0 <SevenSegLEDsHandler+0x2e4>)
 8000702:	fba2 2303 	umull	r2, r3, r2, r3
 8000706:	0959      	lsrs	r1, r3, #5
 8000708:	4b73      	ldr	r3, [pc, #460]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 800070a:	fba3 2301 	umull	r2, r3, r3, r1
 800070e:	08da      	lsrs	r2, r3, #3
 8000710:	4613      	mov	r3, r2
 8000712:	009b      	lsls	r3, r3, #2
 8000714:	4413      	add	r3, r2
 8000716:	005b      	lsls	r3, r3, #1
 8000718:	1aca      	subs	r2, r1, r3
 800071a:	b2d2      	uxtb	r2, r2
 800071c:	4b6f      	ldr	r3, [pc, #444]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 800071e:	701a      	strb	r2, [r3, #0]
            output[1] = (buffer[1] / 100) % 10;
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	3304      	adds	r3, #4
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	4a6e      	ldr	r2, [pc, #440]	@ (80008e0 <SevenSegLEDsHandler+0x2e4>)
 8000728:	fba2 2303 	umull	r2, r3, r2, r3
 800072c:	0959      	lsrs	r1, r3, #5
 800072e:	4b6a      	ldr	r3, [pc, #424]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 8000730:	fba3 2301 	umull	r2, r3, r3, r1
 8000734:	08da      	lsrs	r2, r3, #3
 8000736:	4613      	mov	r3, r2
 8000738:	009b      	lsls	r3, r3, #2
 800073a:	4413      	add	r3, r2
 800073c:	005b      	lsls	r3, r3, #1
 800073e:	1aca      	subs	r2, r1, r3
 8000740:	b2d2      	uxtb	r2, r2
 8000742:	4b66      	ldr	r3, [pc, #408]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 8000744:	705a      	strb	r2, [r3, #1]
            output[2] = (buffer[2] / 100) % 10;
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	3308      	adds	r3, #8
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	4a64      	ldr	r2, [pc, #400]	@ (80008e0 <SevenSegLEDsHandler+0x2e4>)
 800074e:	fba2 2303 	umull	r2, r3, r2, r3
 8000752:	0959      	lsrs	r1, r3, #5
 8000754:	4b60      	ldr	r3, [pc, #384]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 8000756:	fba3 2301 	umull	r2, r3, r3, r1
 800075a:	08da      	lsrs	r2, r3, #3
 800075c:	4613      	mov	r3, r2
 800075e:	009b      	lsls	r3, r3, #2
 8000760:	4413      	add	r3, r2
 8000762:	005b      	lsls	r3, r3, #1
 8000764:	1aca      	subs	r2, r1, r3
 8000766:	b2d2      	uxtb	r2, r2
 8000768:	4b5c      	ldr	r3, [pc, #368]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 800076a:	709a      	strb	r2, [r3, #2]
            break;
 800076c:	e0ad      	b.n	80008ca <SevenSegLEDsHandler+0x2ce>
        case 3:
            output[0] = (buffer[0] / 1000) % 10;
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	4a5c      	ldr	r2, [pc, #368]	@ (80008e4 <SevenSegLEDsHandler+0x2e8>)
 8000774:	fba2 2303 	umull	r2, r3, r2, r3
 8000778:	0999      	lsrs	r1, r3, #6
 800077a:	4b57      	ldr	r3, [pc, #348]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 800077c:	fba3 2301 	umull	r2, r3, r3, r1
 8000780:	08da      	lsrs	r2, r3, #3
 8000782:	4613      	mov	r3, r2
 8000784:	009b      	lsls	r3, r3, #2
 8000786:	4413      	add	r3, r2
 8000788:	005b      	lsls	r3, r3, #1
 800078a:	1aca      	subs	r2, r1, r3
 800078c:	b2d2      	uxtb	r2, r2
 800078e:	4b53      	ldr	r3, [pc, #332]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 8000790:	701a      	strb	r2, [r3, #0]
            output[1] = (buffer[1] / 1000) % 10;
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	3304      	adds	r3, #4
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	4a52      	ldr	r2, [pc, #328]	@ (80008e4 <SevenSegLEDsHandler+0x2e8>)
 800079a:	fba2 2303 	umull	r2, r3, r2, r3
 800079e:	0999      	lsrs	r1, r3, #6
 80007a0:	4b4d      	ldr	r3, [pc, #308]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 80007a2:	fba3 2301 	umull	r2, r3, r3, r1
 80007a6:	08da      	lsrs	r2, r3, #3
 80007a8:	4613      	mov	r3, r2
 80007aa:	009b      	lsls	r3, r3, #2
 80007ac:	4413      	add	r3, r2
 80007ae:	005b      	lsls	r3, r3, #1
 80007b0:	1aca      	subs	r2, r1, r3
 80007b2:	b2d2      	uxtb	r2, r2
 80007b4:	4b49      	ldr	r3, [pc, #292]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 80007b6:	705a      	strb	r2, [r3, #1]
            output[2] = (buffer[2] / 1000) % 10;
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	3308      	adds	r3, #8
 80007bc:	681b      	ldr	r3, [r3, #0]
 80007be:	4a49      	ldr	r2, [pc, #292]	@ (80008e4 <SevenSegLEDsHandler+0x2e8>)
 80007c0:	fba2 2303 	umull	r2, r3, r2, r3
 80007c4:	0999      	lsrs	r1, r3, #6
 80007c6:	4b44      	ldr	r3, [pc, #272]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 80007c8:	fba3 2301 	umull	r2, r3, r3, r1
 80007cc:	08da      	lsrs	r2, r3, #3
 80007ce:	4613      	mov	r3, r2
 80007d0:	009b      	lsls	r3, r3, #2
 80007d2:	4413      	add	r3, r2
 80007d4:	005b      	lsls	r3, r3, #1
 80007d6:	1aca      	subs	r2, r1, r3
 80007d8:	b2d2      	uxtb	r2, r2
 80007da:	4b40      	ldr	r3, [pc, #256]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 80007dc:	709a      	strb	r2, [r3, #2]
            break;
 80007de:	e074      	b.n	80008ca <SevenSegLEDsHandler+0x2ce>
        case 4:
            output[0] = (buffer[0] / 10000) % 10;
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	4a40      	ldr	r2, [pc, #256]	@ (80008e8 <SevenSegLEDsHandler+0x2ec>)
 80007e6:	fba2 2303 	umull	r2, r3, r2, r3
 80007ea:	0b59      	lsrs	r1, r3, #13
 80007ec:	4b3a      	ldr	r3, [pc, #232]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 80007ee:	fba3 2301 	umull	r2, r3, r3, r1
 80007f2:	08da      	lsrs	r2, r3, #3
 80007f4:	4613      	mov	r3, r2
 80007f6:	009b      	lsls	r3, r3, #2
 80007f8:	4413      	add	r3, r2
 80007fa:	005b      	lsls	r3, r3, #1
 80007fc:	1aca      	subs	r2, r1, r3
 80007fe:	b2d2      	uxtb	r2, r2
 8000800:	4b36      	ldr	r3, [pc, #216]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 8000802:	701a      	strb	r2, [r3, #0]
            output[1] = (buffer[1] / 10000) % 10;
 8000804:	687b      	ldr	r3, [r7, #4]
 8000806:	3304      	adds	r3, #4
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	4a37      	ldr	r2, [pc, #220]	@ (80008e8 <SevenSegLEDsHandler+0x2ec>)
 800080c:	fba2 2303 	umull	r2, r3, r2, r3
 8000810:	0b59      	lsrs	r1, r3, #13
 8000812:	4b31      	ldr	r3, [pc, #196]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 8000814:	fba3 2301 	umull	r2, r3, r3, r1
 8000818:	08da      	lsrs	r2, r3, #3
 800081a:	4613      	mov	r3, r2
 800081c:	009b      	lsls	r3, r3, #2
 800081e:	4413      	add	r3, r2
 8000820:	005b      	lsls	r3, r3, #1
 8000822:	1aca      	subs	r2, r1, r3
 8000824:	b2d2      	uxtb	r2, r2
 8000826:	4b2d      	ldr	r3, [pc, #180]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 8000828:	705a      	strb	r2, [r3, #1]
            output[2] = (buffer[2] / 10000) % 10;
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	3308      	adds	r3, #8
 800082e:	681b      	ldr	r3, [r3, #0]
 8000830:	4a2d      	ldr	r2, [pc, #180]	@ (80008e8 <SevenSegLEDsHandler+0x2ec>)
 8000832:	fba2 2303 	umull	r2, r3, r2, r3
 8000836:	0b59      	lsrs	r1, r3, #13
 8000838:	4b27      	ldr	r3, [pc, #156]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 800083a:	fba3 2301 	umull	r2, r3, r3, r1
 800083e:	08da      	lsrs	r2, r3, #3
 8000840:	4613      	mov	r3, r2
 8000842:	009b      	lsls	r3, r3, #2
 8000844:	4413      	add	r3, r2
 8000846:	005b      	lsls	r3, r3, #1
 8000848:	1aca      	subs	r2, r1, r3
 800084a:	b2d2      	uxtb	r2, r2
 800084c:	4b23      	ldr	r3, [pc, #140]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 800084e:	709a      	strb	r2, [r3, #2]
            break;
 8000850:	e03b      	b.n	80008ca <SevenSegLEDsHandler+0x2ce>
        case 5:
            output[0] = (buffer[0] / 100000) % 10;
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	681b      	ldr	r3, [r3, #0]
 8000856:	095b      	lsrs	r3, r3, #5
 8000858:	4a24      	ldr	r2, [pc, #144]	@ (80008ec <SevenSegLEDsHandler+0x2f0>)
 800085a:	fba2 2303 	umull	r2, r3, r2, r3
 800085e:	09d9      	lsrs	r1, r3, #7
 8000860:	4b1d      	ldr	r3, [pc, #116]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 8000862:	fba3 2301 	umull	r2, r3, r3, r1
 8000866:	08da      	lsrs	r2, r3, #3
 8000868:	4613      	mov	r3, r2
 800086a:	009b      	lsls	r3, r3, #2
 800086c:	4413      	add	r3, r2
 800086e:	005b      	lsls	r3, r3, #1
 8000870:	1aca      	subs	r2, r1, r3
 8000872:	b2d2      	uxtb	r2, r2
 8000874:	4b19      	ldr	r3, [pc, #100]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 8000876:	701a      	strb	r2, [r3, #0]
            output[1] = (buffer[1] / 100000) % 10;
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	3304      	adds	r3, #4
 800087c:	681b      	ldr	r3, [r3, #0]
 800087e:	095b      	lsrs	r3, r3, #5
 8000880:	4a1a      	ldr	r2, [pc, #104]	@ (80008ec <SevenSegLEDsHandler+0x2f0>)
 8000882:	fba2 2303 	umull	r2, r3, r2, r3
 8000886:	09d9      	lsrs	r1, r3, #7
 8000888:	4b13      	ldr	r3, [pc, #76]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 800088a:	fba3 2301 	umull	r2, r3, r3, r1
 800088e:	08da      	lsrs	r2, r3, #3
 8000890:	4613      	mov	r3, r2
 8000892:	009b      	lsls	r3, r3, #2
 8000894:	4413      	add	r3, r2
 8000896:	005b      	lsls	r3, r3, #1
 8000898:	1aca      	subs	r2, r1, r3
 800089a:	b2d2      	uxtb	r2, r2
 800089c:	4b0f      	ldr	r3, [pc, #60]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 800089e:	705a      	strb	r2, [r3, #1]
            output[2] = (buffer[2] / 100000) % 10;
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	3308      	adds	r3, #8
 80008a4:	681b      	ldr	r3, [r3, #0]
 80008a6:	095b      	lsrs	r3, r3, #5
 80008a8:	4a10      	ldr	r2, [pc, #64]	@ (80008ec <SevenSegLEDsHandler+0x2f0>)
 80008aa:	fba2 2303 	umull	r2, r3, r2, r3
 80008ae:	09d9      	lsrs	r1, r3, #7
 80008b0:	4b09      	ldr	r3, [pc, #36]	@ (80008d8 <SevenSegLEDsHandler+0x2dc>)
 80008b2:	fba3 2301 	umull	r2, r3, r3, r1
 80008b6:	08da      	lsrs	r2, r3, #3
 80008b8:	4613      	mov	r3, r2
 80008ba:	009b      	lsls	r3, r3, #2
 80008bc:	4413      	add	r3, r2
 80008be:	005b      	lsls	r3, r3, #1
 80008c0:	1aca      	subs	r2, r1, r3
 80008c2:	b2d2      	uxtb	r2, r2
 80008c4:	4b05      	ldr	r3, [pc, #20]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
 80008c6:	709a      	strb	r2, [r3, #2]
            break;
 80008c8:	bf00      	nop
    }
    return output;
 80008ca:	4b04      	ldr	r3, [pc, #16]	@ (80008dc <SevenSegLEDsHandler+0x2e0>)
}
 80008cc:	4618      	mov	r0, r3
 80008ce:	370c      	adds	r7, #12
 80008d0:	46bd      	mov	sp, r7
 80008d2:	bc80      	pop	{r7}
 80008d4:	4770      	bx	lr
 80008d6:	bf00      	nop
 80008d8:	cccccccd 	.word	0xcccccccd
 80008dc:	20000078 	.word	0x20000078
 80008e0:	51eb851f 	.word	0x51eb851f
 80008e4:	10624dd3 	.word	0x10624dd3
 80008e8:	d1b71759 	.word	0xd1b71759
 80008ec:	0a7c5ac5 	.word	0x0a7c5ac5

080008f0 <UpdateDisplayBuffer>:

void UpdateDisplayBuffer(uint32_t* buffer, uint8_t scan_state ) {
 80008f0:	b580      	push	{r7, lr}
 80008f2:	b084      	sub	sp, #16
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	6078      	str	r0, [r7, #4]
 80008f8:	460b      	mov	r3, r1
 80008fa:	70fb      	strb	r3, [r7, #3]
	uint8_t* curr_digit=SevenSegLEDsHandler(buffer,scan_state);
 80008fc:	78fb      	ldrb	r3, [r7, #3]
 80008fe:	4619      	mov	r1, r3
 8000900:	6878      	ldr	r0, [r7, #4]
 8000902:	f7ff fe7b 	bl	80005fc <SevenSegLEDsHandler>
 8000906:	60b8      	str	r0, [r7, #8]
	uint8_t curr_scan;
	switch (scan_state) {
 8000908:	78fb      	ldrb	r3, [r7, #3]
 800090a:	2b05      	cmp	r3, #5
 800090c:	d820      	bhi.n	8000950 <UpdateDisplayBuffer+0x60>
 800090e:	a201      	add	r2, pc, #4	@ (adr r2, 8000914 <UpdateDisplayBuffer+0x24>)
 8000910:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000914:	0800092d 	.word	0x0800092d
 8000918:	08000933 	.word	0x08000933
 800091c:	08000939 	.word	0x08000939
 8000920:	0800093f 	.word	0x0800093f
 8000924:	08000945 	.word	0x08000945
 8000928:	0800094b 	.word	0x0800094b
		case 0:
			curr_scan=0b00100000;
 800092c:	2320      	movs	r3, #32
 800092e:	73fb      	strb	r3, [r7, #15]
			break;
 8000930:	e011      	b.n	8000956 <UpdateDisplayBuffer+0x66>
		case 1:
			curr_scan=0b00010000;
 8000932:	2310      	movs	r3, #16
 8000934:	73fb      	strb	r3, [r7, #15]
			break;
 8000936:	e00e      	b.n	8000956 <UpdateDisplayBuffer+0x66>
		case 2:
			curr_scan=0b00001000;
 8000938:	2308      	movs	r3, #8
 800093a:	73fb      	strb	r3, [r7, #15]
			break;
 800093c:	e00b      	b.n	8000956 <UpdateDisplayBuffer+0x66>
		case 3:
			curr_scan=0b00000100;
 800093e:	2304      	movs	r3, #4
 8000940:	73fb      	strb	r3, [r7, #15]
			break;
 8000942:	e008      	b.n	8000956 <UpdateDisplayBuffer+0x66>
		case 4:
			curr_scan=0b00000010;
 8000944:	2302      	movs	r3, #2
 8000946:	73fb      	strb	r3, [r7, #15]
			break;
 8000948:	e005      	b.n	8000956 <UpdateDisplayBuffer+0x66>
		case 5:
			curr_scan=0b00000001;
 800094a:	2301      	movs	r3, #1
 800094c:	73fb      	strb	r3, [r7, #15]
			break;
 800094e:	e002      	b.n	8000956 <UpdateDisplayBuffer+0x66>
		default:
			curr_scan=0b00000001;
 8000950:	2301      	movs	r3, #1
 8000952:	73fb      	strb	r3, [r7, #15]
			break;
 8000954:	bf00      	nop
	}
	if(LEDPointFlag >=0 && LEDPointFlag <=5){
 8000956:	4b31      	ldr	r3, [pc, #196]	@ (8000a1c <UpdateDisplayBuffer+0x12c>)
 8000958:	681b      	ldr	r3, [r3, #0]
 800095a:	2b00      	cmp	r3, #0
 800095c:	db3e      	blt.n	80009dc <UpdateDisplayBuffer+0xec>
 800095e:	4b2f      	ldr	r3, [pc, #188]	@ (8000a1c <UpdateDisplayBuffer+0x12c>)
 8000960:	681b      	ldr	r3, [r3, #0]
 8000962:	2b05      	cmp	r3, #5
 8000964:	dc3a      	bgt.n	80009dc <UpdateDisplayBuffer+0xec>
	    	if (scan_state == LEDPointFlag){
 8000966:	78fa      	ldrb	r2, [r7, #3]
 8000968:	4b2c      	ldr	r3, [pc, #176]	@ (8000a1c <UpdateDisplayBuffer+0x12c>)
 800096a:	681b      	ldr	r3, [r3, #0]
 800096c:	429a      	cmp	r2, r3
 800096e:	d11a      	bne.n	80009a6 <UpdateDisplayBuffer+0xb6>
				displayBuffer[0] = curr_scan;
 8000970:	4a2b      	ldr	r2, [pc, #172]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 8000972:	7bfb      	ldrb	r3, [r7, #15]
 8000974:	7013      	strb	r3, [r2, #0]
				displayBuffer[1] = digitMapWithOutDP[curr_digit[2]];
 8000976:	68bb      	ldr	r3, [r7, #8]
 8000978:	3302      	adds	r3, #2
 800097a:	781b      	ldrb	r3, [r3, #0]
 800097c:	461a      	mov	r2, r3
 800097e:	4b29      	ldr	r3, [pc, #164]	@ (8000a24 <UpdateDisplayBuffer+0x134>)
 8000980:	5c9a      	ldrb	r2, [r3, r2]
 8000982:	4b27      	ldr	r3, [pc, #156]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 8000984:	705a      	strb	r2, [r3, #1]
				displayBuffer[2] = digitMapWithDP[curr_digit[1]]; //Add point to second row
 8000986:	68bb      	ldr	r3, [r7, #8]
 8000988:	3301      	adds	r3, #1
 800098a:	781b      	ldrb	r3, [r3, #0]
 800098c:	461a      	mov	r2, r3
 800098e:	4b26      	ldr	r3, [pc, #152]	@ (8000a28 <UpdateDisplayBuffer+0x138>)
 8000990:	5c9a      	ldrb	r2, [r3, r2]
 8000992:	4b23      	ldr	r3, [pc, #140]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 8000994:	709a      	strb	r2, [r3, #2]
				displayBuffer[3] = digitMapWithOutDP[curr_digit[0]];
 8000996:	68bb      	ldr	r3, [r7, #8]
 8000998:	781b      	ldrb	r3, [r3, #0]
 800099a:	461a      	mov	r2, r3
 800099c:	4b21      	ldr	r3, [pc, #132]	@ (8000a24 <UpdateDisplayBuffer+0x134>)
 800099e:	5c9a      	ldrb	r2, [r3, r2]
 80009a0:	4b1f      	ldr	r3, [pc, #124]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 80009a2:	70da      	strb	r2, [r3, #3]
	    	if (scan_state == LEDPointFlag){
 80009a4:	e035      	b.n	8000a12 <UpdateDisplayBuffer+0x122>
	    	}
	    	else
	    	{
	    		displayBuffer[0] = curr_scan;
 80009a6:	4a1e      	ldr	r2, [pc, #120]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 80009a8:	7bfb      	ldrb	r3, [r7, #15]
 80009aa:	7013      	strb	r3, [r2, #0]
	    		displayBuffer[1] = digitMapWithOutDP[curr_digit[2]];
 80009ac:	68bb      	ldr	r3, [r7, #8]
 80009ae:	3302      	adds	r3, #2
 80009b0:	781b      	ldrb	r3, [r3, #0]
 80009b2:	461a      	mov	r2, r3
 80009b4:	4b1b      	ldr	r3, [pc, #108]	@ (8000a24 <UpdateDisplayBuffer+0x134>)
 80009b6:	5c9a      	ldrb	r2, [r3, r2]
 80009b8:	4b19      	ldr	r3, [pc, #100]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 80009ba:	705a      	strb	r2, [r3, #1]
	    		displayBuffer[2] = digitMapWithOutDP[curr_digit[1]];
 80009bc:	68bb      	ldr	r3, [r7, #8]
 80009be:	3301      	adds	r3, #1
 80009c0:	781b      	ldrb	r3, [r3, #0]
 80009c2:	461a      	mov	r2, r3
 80009c4:	4b17      	ldr	r3, [pc, #92]	@ (8000a24 <UpdateDisplayBuffer+0x134>)
 80009c6:	5c9a      	ldrb	r2, [r3, r2]
 80009c8:	4b15      	ldr	r3, [pc, #84]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 80009ca:	709a      	strb	r2, [r3, #2]
	    		displayBuffer[3] = digitMapWithOutDP[curr_digit[0]];
 80009cc:	68bb      	ldr	r3, [r7, #8]
 80009ce:	781b      	ldrb	r3, [r3, #0]
 80009d0:	461a      	mov	r2, r3
 80009d2:	4b14      	ldr	r3, [pc, #80]	@ (8000a24 <UpdateDisplayBuffer+0x134>)
 80009d4:	5c9a      	ldrb	r2, [r3, r2]
 80009d6:	4b12      	ldr	r3, [pc, #72]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 80009d8:	70da      	strb	r2, [r3, #3]
	    	if (scan_state == LEDPointFlag){
 80009da:	e01a      	b.n	8000a12 <UpdateDisplayBuffer+0x122>
	    	}
	    }
	    else
	    {
			displayBuffer[0] = curr_scan;
 80009dc:	4a10      	ldr	r2, [pc, #64]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 80009de:	7bfb      	ldrb	r3, [r7, #15]
 80009e0:	7013      	strb	r3, [r2, #0]
			displayBuffer[1] = digitMapWithOutDP[curr_digit[2]];
 80009e2:	68bb      	ldr	r3, [r7, #8]
 80009e4:	3302      	adds	r3, #2
 80009e6:	781b      	ldrb	r3, [r3, #0]
 80009e8:	461a      	mov	r2, r3
 80009ea:	4b0e      	ldr	r3, [pc, #56]	@ (8000a24 <UpdateDisplayBuffer+0x134>)
 80009ec:	5c9a      	ldrb	r2, [r3, r2]
 80009ee:	4b0c      	ldr	r3, [pc, #48]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 80009f0:	705a      	strb	r2, [r3, #1]
			displayBuffer[2] = digitMapWithOutDP[curr_digit[1]];
 80009f2:	68bb      	ldr	r3, [r7, #8]
 80009f4:	3301      	adds	r3, #1
 80009f6:	781b      	ldrb	r3, [r3, #0]
 80009f8:	461a      	mov	r2, r3
 80009fa:	4b0a      	ldr	r3, [pc, #40]	@ (8000a24 <UpdateDisplayBuffer+0x134>)
 80009fc:	5c9a      	ldrb	r2, [r3, r2]
 80009fe:	4b08      	ldr	r3, [pc, #32]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 8000a00:	709a      	strb	r2, [r3, #2]
			displayBuffer[3] = digitMapWithOutDP[curr_digit[0]];
 8000a02:	68bb      	ldr	r3, [r7, #8]
 8000a04:	781b      	ldrb	r3, [r3, #0]
 8000a06:	461a      	mov	r2, r3
 8000a08:	4b06      	ldr	r3, [pc, #24]	@ (8000a24 <UpdateDisplayBuffer+0x134>)
 8000a0a:	5c9a      	ldrb	r2, [r3, r2]
 8000a0c:	4b04      	ldr	r3, [pc, #16]	@ (8000a20 <UpdateDisplayBuffer+0x130>)
 8000a0e:	70da      	strb	r2, [r3, #3]
	    }
}
 8000a10:	bf00      	nop
 8000a12:	bf00      	nop
 8000a14:	3710      	adds	r7, #16
 8000a16:	46bd      	mov	sp, r7
 8000a18:	bd80      	pop	{r7, pc}
 8000a1a:	bf00      	nop
 8000a1c:	2000002c 	.word	0x2000002c
 8000a20:	20000070 	.word	0x20000070
 8000a24:	20000000 	.word	0x20000000
 8000a28:	2000000c 	.word	0x2000000c

08000a2c <SevenSegLEDsScan>:

//
void SevenSegLEDsScan(){
 8000a2c:	b580      	push	{r7, lr}
 8000a2e:	af00      	add	r7, sp, #0
//	uint8_t bufferIndex = (currentBufferIndex + 1) % 2;
	UpdateDisplayBuffer(SevenSegBuffer, SevenSegScanState);
 8000a30:	4b0d      	ldr	r3, [pc, #52]	@ (8000a68 <SevenSegLEDsScan+0x3c>)
 8000a32:	781b      	ldrb	r3, [r3, #0]
 8000a34:	4619      	mov	r1, r3
 8000a36:	480d      	ldr	r0, [pc, #52]	@ (8000a6c <SevenSegLEDsScan+0x40>)
 8000a38:	f7ff ff5a 	bl	80008f0 <UpdateDisplayBuffer>
	ShiftOut_SPI(displayBuffer, 4);
 8000a3c:	2104      	movs	r1, #4
 8000a3e:	480c      	ldr	r0, [pc, #48]	@ (8000a70 <SevenSegLEDsScan+0x44>)
 8000a40:	f000 f81a 	bl	8000a78 <ShiftOut_SPI>
//    currentBufferIndex = bufferIndex;  // Swap buffers
    SevenSegScanState = (SevenSegScanState + 1) % 6;
 8000a44:	4b08      	ldr	r3, [pc, #32]	@ (8000a68 <SevenSegLEDsScan+0x3c>)
 8000a46:	781b      	ldrb	r3, [r3, #0]
 8000a48:	1c5a      	adds	r2, r3, #1
 8000a4a:	4b0a      	ldr	r3, [pc, #40]	@ (8000a74 <SevenSegLEDsScan+0x48>)
 8000a4c:	fb83 3102 	smull	r3, r1, r3, r2
 8000a50:	17d3      	asrs	r3, r2, #31
 8000a52:	1ac9      	subs	r1, r1, r3
 8000a54:	460b      	mov	r3, r1
 8000a56:	005b      	lsls	r3, r3, #1
 8000a58:	440b      	add	r3, r1
 8000a5a:	005b      	lsls	r3, r3, #1
 8000a5c:	1ad1      	subs	r1, r2, r3
 8000a5e:	b2ca      	uxtb	r2, r1
 8000a60:	4b01      	ldr	r3, [pc, #4]	@ (8000a68 <SevenSegLEDsScan+0x3c>)
 8000a62:	701a      	strb	r2, [r3, #0]
}
 8000a64:	bf00      	nop
 8000a66:	bd80      	pop	{r7, pc}
 8000a68:	2000006d 	.word	0x2000006d
 8000a6c:	20000018 	.word	0x20000018
 8000a70:	20000070 	.word	0x20000070
 8000a74:	2aaaaaab 	.word	0x2aaaaaab

08000a78 <ShiftOut_SPI>:
 *      Author: clong
 */
#include "SPI_shift.h"

void ShiftOut_SPI(uint8_t *data, size_t size)
{
 8000a78:	b580      	push	{r7, lr}
 8000a7a:	b082      	sub	sp, #8
 8000a7c:	af00      	add	r7, sp, #0
 8000a7e:	6078      	str	r0, [r7, #4]
 8000a80:	6039      	str	r1, [r7, #0]

    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_RESET); // Pull STCP (Latch) low
 8000a82:	2200      	movs	r2, #0
 8000a84:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000a88:	480a      	ldr	r0, [pc, #40]	@ (8000ab4 <ShiftOut_SPI+0x3c>)
 8000a8a:	f000 fe3c 	bl	8001706 <HAL_GPIO_WritePin>
    HAL_SPI_Transmit(&hspi2, data, size, 300); // Transmit data
 8000a8e:	683b      	ldr	r3, [r7, #0]
 8000a90:	b29a      	uxth	r2, r3
 8000a92:	f44f 7396 	mov.w	r3, #300	@ 0x12c
 8000a96:	6879      	ldr	r1, [r7, #4]
 8000a98:	4807      	ldr	r0, [pc, #28]	@ (8000ab8 <ShiftOut_SPI+0x40>)
 8000a9a:	f001 faaf 	bl	8001ffc <HAL_SPI_Transmit>
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET); // Pull STCP (Latch) high
 8000a9e:	2201      	movs	r2, #1
 8000aa0:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000aa4:	4803      	ldr	r0, [pc, #12]	@ (8000ab4 <ShiftOut_SPI+0x3c>)
 8000aa6:	f000 fe2e 	bl	8001706 <HAL_GPIO_WritePin>

}
 8000aaa:	bf00      	nop
 8000aac:	3708      	adds	r7, #8
 8000aae:	46bd      	mov	sp, r7
 8000ab0:	bd80      	pop	{r7, pc}
 8000ab2:	bf00      	nop
 8000ab4:	40010c00 	.word	0x40010c00
 8000ab8:	200000d4 	.word	0x200000d4

08000abc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000abc:	b580      	push	{r7, lr}
 8000abe:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ac0:	f000 fb16 	bl	80010f0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ac4:	f000 f832 	bl	8000b2c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000ac8:	f000 f924 	bl	8000d14 <MX_GPIO_Init>
  MX_SPI2_Init();
 8000acc:	f000 f8a0 	bl	8000c10 <MX_SPI2_Init>
  MX_TIM2_Init();
 8000ad0:	f000 f8d4 	bl	8000c7c <MX_TIM2_Init>
  MX_SPI1_Init();
 8000ad4:	f000 f866 	bl	8000ba4 <MX_SPI1_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000ad8:	4812      	ldr	r0, [pc, #72]	@ (8000b24 <main+0x68>)
 8000ada:	f001 fcc9 	bl	8002470 <HAL_TIM_Base_Start_IT>
  setTimer(0,100);
 8000ade:	2164      	movs	r1, #100	@ 0x64
 8000ae0:	2000      	movs	r0, #0
 8000ae2:	f000 fa97 	bl	8001014 <setTimer>
  setTimer(1,100);
 8000ae6:	2164      	movs	r1, #100	@ 0x64
 8000ae8:	2001      	movs	r0, #1
 8000aea:	f000 fa93 	bl	8001014 <setTimer>
  setTimer(2,100);
 8000aee:	2164      	movs	r1, #100	@ 0x64
 8000af0:	2002      	movs	r0, #2
 8000af2:	f000 fa8f 	bl	8001014 <setTimer>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  while (1) {
	  // TIMER 0 /////////////////////////////////////
	  if(timer_flag[0]==1){
 8000af6:	4b0c      	ldr	r3, [pc, #48]	@ (8000b28 <main+0x6c>)
 8000af8:	681b      	ldr	r3, [r3, #0]
 8000afa:	2b01      	cmp	r3, #1
 8000afc:	d105      	bne.n	8000b0a <main+0x4e>

		  SevenSegLEDsScan();
 8000afe:	f7ff ff95 	bl	8000a2c <SevenSegLEDsScan>
		  setTimer(0,5);
 8000b02:	2105      	movs	r1, #5
 8000b04:	2000      	movs	r0, #0
 8000b06:	f000 fa85 	bl	8001014 <setTimer>
	  }

	  // TIMER 1 /////////////////////////////////////
	  if(timer_flag[1]==1){
 8000b0a:	4b07      	ldr	r3, [pc, #28]	@ (8000b28 <main+0x6c>)
 8000b0c:	685b      	ldr	r3, [r3, #4]
 8000b0e:	2b01      	cmp	r3, #1
 8000b10:	d1f1      	bne.n	8000af6 <main+0x3a>
		  KeyLogic();
 8000b12:	f7ff fbad 	bl	8000270 <KeyLogic>
		  KeyLogic_Action();
 8000b16:	f7ff fce3 	bl	80004e0 <KeyLogic_Action>
		  setTimer(1,10);
 8000b1a:	210a      	movs	r1, #10
 8000b1c:	2001      	movs	r0, #1
 8000b1e:	f000 fa79 	bl	8001014 <setTimer>
	  if(timer_flag[0]==1){
 8000b22:	e7e8      	b.n	8000af6 <main+0x3a>
 8000b24:	2000012c 	.word	0x2000012c
 8000b28:	2000019c 	.word	0x2000019c

08000b2c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000b2c:	b580      	push	{r7, lr}
 8000b2e:	b090      	sub	sp, #64	@ 0x40
 8000b30:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000b32:	f107 0318 	add.w	r3, r7, #24
 8000b36:	2228      	movs	r2, #40	@ 0x28
 8000b38:	2100      	movs	r1, #0
 8000b3a:	4618      	mov	r0, r3
 8000b3c:	f002 f846 	bl	8002bcc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000b40:	1d3b      	adds	r3, r7, #4
 8000b42:	2200      	movs	r2, #0
 8000b44:	601a      	str	r2, [r3, #0]
 8000b46:	605a      	str	r2, [r3, #4]
 8000b48:	609a      	str	r2, [r3, #8]
 8000b4a:	60da      	str	r2, [r3, #12]
 8000b4c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000b4e:	2302      	movs	r3, #2
 8000b50:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000b52:	2301      	movs	r3, #1
 8000b54:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000b56:	2310      	movs	r3, #16
 8000b58:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000b5a:	2300      	movs	r3, #0
 8000b5c:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b5e:	f107 0318 	add.w	r3, r7, #24
 8000b62:	4618      	mov	r0, r3
 8000b64:	f000 fde8 	bl	8001738 <HAL_RCC_OscConfig>
 8000b68:	4603      	mov	r3, r0
 8000b6a:	2b00      	cmp	r3, #0
 8000b6c:	d001      	beq.n	8000b72 <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000b6e:	f000 f94b 	bl	8000e08 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b72:	230f      	movs	r3, #15
 8000b74:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000b76:	2300      	movs	r3, #0
 8000b78:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000b7a:	2300      	movs	r3, #0
 8000b7c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000b7e:	2300      	movs	r3, #0
 8000b80:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000b82:	2300      	movs	r3, #0
 8000b84:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000b86:	1d3b      	adds	r3, r7, #4
 8000b88:	2100      	movs	r1, #0
 8000b8a:	4618      	mov	r0, r3
 8000b8c:	f001 f856 	bl	8001c3c <HAL_RCC_ClockConfig>
 8000b90:	4603      	mov	r3, r0
 8000b92:	2b00      	cmp	r3, #0
 8000b94:	d001      	beq.n	8000b9a <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8000b96:	f000 f937 	bl	8000e08 <Error_Handler>
  }
}
 8000b9a:	bf00      	nop
 8000b9c:	3740      	adds	r7, #64	@ 0x40
 8000b9e:	46bd      	mov	sp, r7
 8000ba0:	bd80      	pop	{r7, pc}
	...

08000ba4 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000ba8:	4b17      	ldr	r3, [pc, #92]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000baa:	4a18      	ldr	r2, [pc, #96]	@ (8000c0c <MX_SPI1_Init+0x68>)
 8000bac:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000bae:	4b16      	ldr	r3, [pc, #88]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bb0:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8000bb4:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000bb6:	4b14      	ldr	r3, [pc, #80]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bb8:	2200      	movs	r2, #0
 8000bba:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000bbc:	4b12      	ldr	r3, [pc, #72]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000bc2:	4b11      	ldr	r3, [pc, #68]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bc4:	2200      	movs	r2, #0
 8000bc6:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000bc8:	4b0f      	ldr	r3, [pc, #60]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bca:	2200      	movs	r2, #0
 8000bcc:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000bce:	4b0e      	ldr	r3, [pc, #56]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bd0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000bd4:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000bd6:	4b0c      	ldr	r3, [pc, #48]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bd8:	2200      	movs	r2, #0
 8000bda:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000bdc:	4b0a      	ldr	r3, [pc, #40]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bde:	2200      	movs	r2, #0
 8000be0:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000be2:	4b09      	ldr	r3, [pc, #36]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000be4:	2200      	movs	r2, #0
 8000be6:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000be8:	4b07      	ldr	r3, [pc, #28]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bea:	2200      	movs	r2, #0
 8000bec:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 8000bee:	4b06      	ldr	r3, [pc, #24]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bf0:	220a      	movs	r2, #10
 8000bf2:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000bf4:	4804      	ldr	r0, [pc, #16]	@ (8000c08 <MX_SPI1_Init+0x64>)
 8000bf6:	f001 f97d 	bl	8001ef4 <HAL_SPI_Init>
 8000bfa:	4603      	mov	r3, r0
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d001      	beq.n	8000c04 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8000c00:	f000 f902 	bl	8000e08 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000c04:	bf00      	nop
 8000c06:	bd80      	pop	{r7, pc}
 8000c08:	2000007c 	.word	0x2000007c
 8000c0c:	40013000 	.word	0x40013000

08000c10 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8000c10:	b580      	push	{r7, lr}
 8000c12:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8000c14:	4b17      	ldr	r3, [pc, #92]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c16:	4a18      	ldr	r2, [pc, #96]	@ (8000c78 <MX_SPI2_Init+0x68>)
 8000c18:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8000c1a:	4b16      	ldr	r3, [pc, #88]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c1c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8000c20:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8000c22:	4b14      	ldr	r3, [pc, #80]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c24:	2200      	movs	r2, #0
 8000c26:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8000c28:	4b12      	ldr	r3, [pc, #72]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c2a:	2200      	movs	r2, #0
 8000c2c:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000c2e:	4b11      	ldr	r3, [pc, #68]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c30:	2200      	movs	r2, #0
 8000c32:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000c34:	4b0f      	ldr	r3, [pc, #60]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c36:	2200      	movs	r2, #0
 8000c38:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8000c3a:	4b0e      	ldr	r3, [pc, #56]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c3c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000c40:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000c42:	4b0c      	ldr	r3, [pc, #48]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c44:	2200      	movs	r2, #0
 8000c46:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000c48:	4b0a      	ldr	r3, [pc, #40]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8000c4e:	4b09      	ldr	r3, [pc, #36]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c50:	2200      	movs	r2, #0
 8000c52:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000c54:	4b07      	ldr	r3, [pc, #28]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c56:	2200      	movs	r2, #0
 8000c58:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 8000c5a:	4b06      	ldr	r3, [pc, #24]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c5c:	220a      	movs	r2, #10
 8000c5e:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8000c60:	4804      	ldr	r0, [pc, #16]	@ (8000c74 <MX_SPI2_Init+0x64>)
 8000c62:	f001 f947 	bl	8001ef4 <HAL_SPI_Init>
 8000c66:	4603      	mov	r3, r0
 8000c68:	2b00      	cmp	r3, #0
 8000c6a:	d001      	beq.n	8000c70 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 8000c6c:	f000 f8cc 	bl	8000e08 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8000c70:	bf00      	nop
 8000c72:	bd80      	pop	{r7, pc}
 8000c74:	200000d4 	.word	0x200000d4
 8000c78:	40003800 	.word	0x40003800

08000c7c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000c7c:	b580      	push	{r7, lr}
 8000c7e:	b086      	sub	sp, #24
 8000c80:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000c82:	f107 0308 	add.w	r3, r7, #8
 8000c86:	2200      	movs	r2, #0
 8000c88:	601a      	str	r2, [r3, #0]
 8000c8a:	605a      	str	r2, [r3, #4]
 8000c8c:	609a      	str	r2, [r3, #8]
 8000c8e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000c90:	463b      	mov	r3, r7
 8000c92:	2200      	movs	r2, #0
 8000c94:	601a      	str	r2, [r3, #0]
 8000c96:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000c98:	4b1d      	ldr	r3, [pc, #116]	@ (8000d10 <MX_TIM2_Init+0x94>)
 8000c9a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000c9e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 8000ca0:	4b1b      	ldr	r3, [pc, #108]	@ (8000d10 <MX_TIM2_Init+0x94>)
 8000ca2:	f641 723f 	movw	r2, #7999	@ 0x1f3f
 8000ca6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000ca8:	4b19      	ldr	r3, [pc, #100]	@ (8000d10 <MX_TIM2_Init+0x94>)
 8000caa:	2200      	movs	r2, #0
 8000cac:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8000cae:	4b18      	ldr	r3, [pc, #96]	@ (8000d10 <MX_TIM2_Init+0x94>)
 8000cb0:	2209      	movs	r2, #9
 8000cb2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000cb4:	4b16      	ldr	r3, [pc, #88]	@ (8000d10 <MX_TIM2_Init+0x94>)
 8000cb6:	2200      	movs	r2, #0
 8000cb8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000cba:	4b15      	ldr	r3, [pc, #84]	@ (8000d10 <MX_TIM2_Init+0x94>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000cc0:	4813      	ldr	r0, [pc, #76]	@ (8000d10 <MX_TIM2_Init+0x94>)
 8000cc2:	f001 fb85 	bl	80023d0 <HAL_TIM_Base_Init>
 8000cc6:	4603      	mov	r3, r0
 8000cc8:	2b00      	cmp	r3, #0
 8000cca:	d001      	beq.n	8000cd0 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000ccc:	f000 f89c 	bl	8000e08 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000cd0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000cd4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000cd6:	f107 0308 	add.w	r3, r7, #8
 8000cda:	4619      	mov	r1, r3
 8000cdc:	480c      	ldr	r0, [pc, #48]	@ (8000d10 <MX_TIM2_Init+0x94>)
 8000cde:	f001 fd21 	bl	8002724 <HAL_TIM_ConfigClockSource>
 8000ce2:	4603      	mov	r3, r0
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	d001      	beq.n	8000cec <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000ce8:	f000 f88e 	bl	8000e08 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000cec:	2300      	movs	r3, #0
 8000cee:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000cf0:	2300      	movs	r3, #0
 8000cf2:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000cf4:	463b      	mov	r3, r7
 8000cf6:	4619      	mov	r1, r3
 8000cf8:	4805      	ldr	r0, [pc, #20]	@ (8000d10 <MX_TIM2_Init+0x94>)
 8000cfa:	f001 fef7 	bl	8002aec <HAL_TIMEx_MasterConfigSynchronization>
 8000cfe:	4603      	mov	r3, r0
 8000d00:	2b00      	cmp	r3, #0
 8000d02:	d001      	beq.n	8000d08 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000d04:	f000 f880 	bl	8000e08 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000d08:	bf00      	nop
 8000d0a:	3718      	adds	r7, #24
 8000d0c:	46bd      	mov	sp, r7
 8000d0e:	bd80      	pop	{r7, pc}
 8000d10:	2000012c 	.word	0x2000012c

08000d14 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000d14:	b580      	push	{r7, lr}
 8000d16:	b086      	sub	sp, #24
 8000d18:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d1a:	f107 0308 	add.w	r3, r7, #8
 8000d1e:	2200      	movs	r2, #0
 8000d20:	601a      	str	r2, [r3, #0]
 8000d22:	605a      	str	r2, [r3, #4]
 8000d24:	609a      	str	r2, [r3, #8]
 8000d26:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000d28:	4b2f      	ldr	r3, [pc, #188]	@ (8000de8 <MX_GPIO_Init+0xd4>)
 8000d2a:	699b      	ldr	r3, [r3, #24]
 8000d2c:	4a2e      	ldr	r2, [pc, #184]	@ (8000de8 <MX_GPIO_Init+0xd4>)
 8000d2e:	f043 0304 	orr.w	r3, r3, #4
 8000d32:	6193      	str	r3, [r2, #24]
 8000d34:	4b2c      	ldr	r3, [pc, #176]	@ (8000de8 <MX_GPIO_Init+0xd4>)
 8000d36:	699b      	ldr	r3, [r3, #24]
 8000d38:	f003 0304 	and.w	r3, r3, #4
 8000d3c:	607b      	str	r3, [r7, #4]
 8000d3e:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d40:	4b29      	ldr	r3, [pc, #164]	@ (8000de8 <MX_GPIO_Init+0xd4>)
 8000d42:	699b      	ldr	r3, [r3, #24]
 8000d44:	4a28      	ldr	r2, [pc, #160]	@ (8000de8 <MX_GPIO_Init+0xd4>)
 8000d46:	f043 0308 	orr.w	r3, r3, #8
 8000d4a:	6193      	str	r3, [r2, #24]
 8000d4c:	4b26      	ldr	r3, [pc, #152]	@ (8000de8 <MX_GPIO_Init+0xd4>)
 8000d4e:	699b      	ldr	r3, [r3, #24]
 8000d50:	f003 0308 	and.w	r3, r3, #8
 8000d54:	603b      	str	r3, [r7, #0]
 8000d56:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Latch_SPI1_GPIO_Port, Latch_SPI1_Pin, GPIO_PIN_RESET);
 8000d58:	2200      	movs	r2, #0
 8000d5a:	2140      	movs	r1, #64	@ 0x40
 8000d5c:	4823      	ldr	r0, [pc, #140]	@ (8000dec <MX_GPIO_Init+0xd8>)
 8000d5e:	f000 fcd2 	bl	8001706 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Latch_SPI_Pin|OUT0_Pin|OUT1_Pin|OUT2_Pin
 8000d62:	2200      	movs	r2, #0
 8000d64:	f244 31c0 	movw	r1, #17344	@ 0x43c0
 8000d68:	4821      	ldr	r0, [pc, #132]	@ (8000df0 <MX_GPIO_Init+0xdc>)
 8000d6a:	f000 fccc 	bl	8001706 <HAL_GPIO_WritePin>
                          |OUT3_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : Latch_SPI1_Pin */
  GPIO_InitStruct.Pin = Latch_SPI1_Pin;
 8000d6e:	2340      	movs	r3, #64	@ 0x40
 8000d70:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d72:	2301      	movs	r3, #1
 8000d74:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d76:	2300      	movs	r3, #0
 8000d78:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d7a:	2302      	movs	r3, #2
 8000d7c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(Latch_SPI1_GPIO_Port, &GPIO_InitStruct);
 8000d7e:	f107 0308 	add.w	r3, r7, #8
 8000d82:	4619      	mov	r1, r3
 8000d84:	4819      	ldr	r0, [pc, #100]	@ (8000dec <MX_GPIO_Init+0xd8>)
 8000d86:	f000 fb23 	bl	80013d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : D0_Pin D1_Pin D2_Pin D3_Pin
                           D4_Pin */
  GPIO_InitStruct.Pin = D0_Pin|D1_Pin|D2_Pin|D3_Pin
 8000d8a:	231f      	movs	r3, #31
 8000d8c:	60bb      	str	r3, [r7, #8]
                          |D4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d8e:	2300      	movs	r3, #0
 8000d90:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000d92:	2302      	movs	r3, #2
 8000d94:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d96:	f107 0308 	add.w	r3, r7, #8
 8000d9a:	4619      	mov	r1, r3
 8000d9c:	4814      	ldr	r0, [pc, #80]	@ (8000df0 <MX_GPIO_Init+0xdc>)
 8000d9e:	f000 fb17 	bl	80013d0 <HAL_GPIO_Init>

  /*Configure GPIO pin : Latch_SPI_Pin */
  GPIO_InitStruct.Pin = Latch_SPI_Pin;
 8000da2:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8000da6:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000da8:	2301      	movs	r3, #1
 8000daa:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dac:	2300      	movs	r3, #0
 8000dae:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000db0:	2303      	movs	r3, #3
 8000db2:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(Latch_SPI_GPIO_Port, &GPIO_InitStruct);
 8000db4:	f107 0308 	add.w	r3, r7, #8
 8000db8:	4619      	mov	r1, r3
 8000dba:	480d      	ldr	r0, [pc, #52]	@ (8000df0 <MX_GPIO_Init+0xdc>)
 8000dbc:	f000 fb08 	bl	80013d0 <HAL_GPIO_Init>

  /*Configure GPIO pins : OUT0_Pin OUT1_Pin OUT2_Pin OUT3_Pin */
  GPIO_InitStruct.Pin = OUT0_Pin|OUT1_Pin|OUT2_Pin|OUT3_Pin;
 8000dc0:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
 8000dc4:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000dc6:	2301      	movs	r3, #1
 8000dc8:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dca:	2300      	movs	r3, #0
 8000dcc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000dce:	2302      	movs	r3, #2
 8000dd0:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000dd2:	f107 0308 	add.w	r3, r7, #8
 8000dd6:	4619      	mov	r1, r3
 8000dd8:	4805      	ldr	r0, [pc, #20]	@ (8000df0 <MX_GPIO_Init+0xdc>)
 8000dda:	f000 faf9 	bl	80013d0 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000dde:	bf00      	nop
 8000de0:	3718      	adds	r7, #24
 8000de2:	46bd      	mov	sp, r7
 8000de4:	bd80      	pop	{r7, pc}
 8000de6:	bf00      	nop
 8000de8:	40021000 	.word	0x40021000
 8000dec:	40010800 	.word	0x40010800
 8000df0:	40010c00 	.word	0x40010c00

08000df4 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8000df4:	b580      	push	{r7, lr}
 8000df6:	b082      	sub	sp, #8
 8000df8:	af00      	add	r7, sp, #0
 8000dfa:	6078      	str	r0, [r7, #4]
	timerRun();
 8000dfc:	f000 f922 	bl	8001044 <timerRun>

}
 8000e00:	bf00      	nop
 8000e02:	3708      	adds	r7, #8
 8000e04:	46bd      	mov	sp, r7
 8000e06:	bd80      	pop	{r7, pc}

08000e08 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000e08:	b480      	push	{r7}
 8000e0a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e0c:	b672      	cpsid	i
}
 8000e0e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1) {
 8000e10:	bf00      	nop
 8000e12:	e7fd      	b.n	8000e10 <Error_Handler+0x8>

08000e14 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000e14:	b480      	push	{r7}
 8000e16:	b085      	sub	sp, #20
 8000e18:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000e1a:	4b15      	ldr	r3, [pc, #84]	@ (8000e70 <HAL_MspInit+0x5c>)
 8000e1c:	699b      	ldr	r3, [r3, #24]
 8000e1e:	4a14      	ldr	r2, [pc, #80]	@ (8000e70 <HAL_MspInit+0x5c>)
 8000e20:	f043 0301 	orr.w	r3, r3, #1
 8000e24:	6193      	str	r3, [r2, #24]
 8000e26:	4b12      	ldr	r3, [pc, #72]	@ (8000e70 <HAL_MspInit+0x5c>)
 8000e28:	699b      	ldr	r3, [r3, #24]
 8000e2a:	f003 0301 	and.w	r3, r3, #1
 8000e2e:	60bb      	str	r3, [r7, #8]
 8000e30:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000e32:	4b0f      	ldr	r3, [pc, #60]	@ (8000e70 <HAL_MspInit+0x5c>)
 8000e34:	69db      	ldr	r3, [r3, #28]
 8000e36:	4a0e      	ldr	r2, [pc, #56]	@ (8000e70 <HAL_MspInit+0x5c>)
 8000e38:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000e3c:	61d3      	str	r3, [r2, #28]
 8000e3e:	4b0c      	ldr	r3, [pc, #48]	@ (8000e70 <HAL_MspInit+0x5c>)
 8000e40:	69db      	ldr	r3, [r3, #28]
 8000e42:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000e46:	607b      	str	r3, [r7, #4]
 8000e48:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000e4a:	4b0a      	ldr	r3, [pc, #40]	@ (8000e74 <HAL_MspInit+0x60>)
 8000e4c:	685b      	ldr	r3, [r3, #4]
 8000e4e:	60fb      	str	r3, [r7, #12]
 8000e50:	68fb      	ldr	r3, [r7, #12]
 8000e52:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8000e56:	60fb      	str	r3, [r7, #12]
 8000e58:	68fb      	ldr	r3, [r7, #12]
 8000e5a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000e5e:	60fb      	str	r3, [r7, #12]
 8000e60:	4a04      	ldr	r2, [pc, #16]	@ (8000e74 <HAL_MspInit+0x60>)
 8000e62:	68fb      	ldr	r3, [r7, #12]
 8000e64:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000e66:	bf00      	nop
 8000e68:	3714      	adds	r7, #20
 8000e6a:	46bd      	mov	sp, r7
 8000e6c:	bc80      	pop	{r7}
 8000e6e:	4770      	bx	lr
 8000e70:	40021000 	.word	0x40021000
 8000e74:	40010000 	.word	0x40010000

08000e78 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000e78:	b580      	push	{r7, lr}
 8000e7a:	b08a      	sub	sp, #40	@ 0x28
 8000e7c:	af00      	add	r7, sp, #0
 8000e7e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e80:	f107 0318 	add.w	r3, r7, #24
 8000e84:	2200      	movs	r2, #0
 8000e86:	601a      	str	r2, [r3, #0]
 8000e88:	605a      	str	r2, [r3, #4]
 8000e8a:	609a      	str	r2, [r3, #8]
 8000e8c:	60da      	str	r2, [r3, #12]
  if(hspi->Instance==SPI1)
 8000e8e:	687b      	ldr	r3, [r7, #4]
 8000e90:	681b      	ldr	r3, [r3, #0]
 8000e92:	4a2b      	ldr	r2, [pc, #172]	@ (8000f40 <HAL_SPI_MspInit+0xc8>)
 8000e94:	4293      	cmp	r3, r2
 8000e96:	d124      	bne.n	8000ee2 <HAL_SPI_MspInit+0x6a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8000e98:	4b2a      	ldr	r3, [pc, #168]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000e9a:	699b      	ldr	r3, [r3, #24]
 8000e9c:	4a29      	ldr	r2, [pc, #164]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000e9e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000ea2:	6193      	str	r3, [r2, #24]
 8000ea4:	4b27      	ldr	r3, [pc, #156]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000ea6:	699b      	ldr	r3, [r3, #24]
 8000ea8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000eac:	617b      	str	r3, [r7, #20]
 8000eae:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000eb0:	4b24      	ldr	r3, [pc, #144]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000eb2:	699b      	ldr	r3, [r3, #24]
 8000eb4:	4a23      	ldr	r2, [pc, #140]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000eb6:	f043 0304 	orr.w	r3, r3, #4
 8000eba:	6193      	str	r3, [r2, #24]
 8000ebc:	4b21      	ldr	r3, [pc, #132]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000ebe:	699b      	ldr	r3, [r3, #24]
 8000ec0:	f003 0304 	and.w	r3, r3, #4
 8000ec4:	613b      	str	r3, [r7, #16]
 8000ec6:	693b      	ldr	r3, [r7, #16]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
 8000ec8:	23a0      	movs	r3, #160	@ 0xa0
 8000eca:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ecc:	2302      	movs	r3, #2
 8000ece:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000ed0:	2303      	movs	r3, #3
 8000ed2:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000ed4:	f107 0318 	add.w	r3, r7, #24
 8000ed8:	4619      	mov	r1, r3
 8000eda:	481b      	ldr	r0, [pc, #108]	@ (8000f48 <HAL_SPI_MspInit+0xd0>)
 8000edc:	f000 fa78 	bl	80013d0 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8000ee0:	e029      	b.n	8000f36 <HAL_SPI_MspInit+0xbe>
  else if(hspi->Instance==SPI2)
 8000ee2:	687b      	ldr	r3, [r7, #4]
 8000ee4:	681b      	ldr	r3, [r3, #0]
 8000ee6:	4a19      	ldr	r2, [pc, #100]	@ (8000f4c <HAL_SPI_MspInit+0xd4>)
 8000ee8:	4293      	cmp	r3, r2
 8000eea:	d124      	bne.n	8000f36 <HAL_SPI_MspInit+0xbe>
    __HAL_RCC_SPI2_CLK_ENABLE();
 8000eec:	4b15      	ldr	r3, [pc, #84]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000eee:	69db      	ldr	r3, [r3, #28]
 8000ef0:	4a14      	ldr	r2, [pc, #80]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000ef2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000ef6:	61d3      	str	r3, [r2, #28]
 8000ef8:	4b12      	ldr	r3, [pc, #72]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000efa:	69db      	ldr	r3, [r3, #28]
 8000efc:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000f00:	60fb      	str	r3, [r7, #12]
 8000f02:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000f04:	4b0f      	ldr	r3, [pc, #60]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000f06:	699b      	ldr	r3, [r3, #24]
 8000f08:	4a0e      	ldr	r2, [pc, #56]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000f0a:	f043 0308 	orr.w	r3, r3, #8
 8000f0e:	6193      	str	r3, [r2, #24]
 8000f10:	4b0c      	ldr	r3, [pc, #48]	@ (8000f44 <HAL_SPI_MspInit+0xcc>)
 8000f12:	699b      	ldr	r3, [r3, #24]
 8000f14:	f003 0308 	and.w	r3, r3, #8
 8000f18:	60bb      	str	r3, [r7, #8]
 8000f1a:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15;
 8000f1c:	f44f 4320 	mov.w	r3, #40960	@ 0xa000
 8000f20:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f22:	2302      	movs	r3, #2
 8000f24:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000f26:	2303      	movs	r3, #3
 8000f28:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000f2a:	f107 0318 	add.w	r3, r7, #24
 8000f2e:	4619      	mov	r1, r3
 8000f30:	4807      	ldr	r0, [pc, #28]	@ (8000f50 <HAL_SPI_MspInit+0xd8>)
 8000f32:	f000 fa4d 	bl	80013d0 <HAL_GPIO_Init>
}
 8000f36:	bf00      	nop
 8000f38:	3728      	adds	r7, #40	@ 0x28
 8000f3a:	46bd      	mov	sp, r7
 8000f3c:	bd80      	pop	{r7, pc}
 8000f3e:	bf00      	nop
 8000f40:	40013000 	.word	0x40013000
 8000f44:	40021000 	.word	0x40021000
 8000f48:	40010800 	.word	0x40010800
 8000f4c:	40003800 	.word	0x40003800
 8000f50:	40010c00 	.word	0x40010c00

08000f54 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8000f54:	b580      	push	{r7, lr}
 8000f56:	b084      	sub	sp, #16
 8000f58:	af00      	add	r7, sp, #0
 8000f5a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8000f5c:	687b      	ldr	r3, [r7, #4]
 8000f5e:	681b      	ldr	r3, [r3, #0]
 8000f60:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000f64:	d113      	bne.n	8000f8e <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000f66:	4b0c      	ldr	r3, [pc, #48]	@ (8000f98 <HAL_TIM_Base_MspInit+0x44>)
 8000f68:	69db      	ldr	r3, [r3, #28]
 8000f6a:	4a0b      	ldr	r2, [pc, #44]	@ (8000f98 <HAL_TIM_Base_MspInit+0x44>)
 8000f6c:	f043 0301 	orr.w	r3, r3, #1
 8000f70:	61d3      	str	r3, [r2, #28]
 8000f72:	4b09      	ldr	r3, [pc, #36]	@ (8000f98 <HAL_TIM_Base_MspInit+0x44>)
 8000f74:	69db      	ldr	r3, [r3, #28]
 8000f76:	f003 0301 	and.w	r3, r3, #1
 8000f7a:	60fb      	str	r3, [r7, #12]
 8000f7c:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 1, 0);
 8000f7e:	2200      	movs	r2, #0
 8000f80:	2101      	movs	r1, #1
 8000f82:	201c      	movs	r0, #28
 8000f84:	f000 f9ed 	bl	8001362 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000f88:	201c      	movs	r0, #28
 8000f8a:	f000 fa06 	bl	800139a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8000f8e:	bf00      	nop
 8000f90:	3710      	adds	r7, #16
 8000f92:	46bd      	mov	sp, r7
 8000f94:	bd80      	pop	{r7, pc}
 8000f96:	bf00      	nop
 8000f98:	40021000 	.word	0x40021000

08000f9c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000f9c:	b480      	push	{r7}
 8000f9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000fa0:	bf00      	nop
 8000fa2:	e7fd      	b.n	8000fa0 <NMI_Handler+0x4>

08000fa4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000fa4:	b480      	push	{r7}
 8000fa6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000fa8:	bf00      	nop
 8000faa:	e7fd      	b.n	8000fa8 <HardFault_Handler+0x4>

08000fac <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000fac:	b480      	push	{r7}
 8000fae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000fb0:	bf00      	nop
 8000fb2:	e7fd      	b.n	8000fb0 <MemManage_Handler+0x4>

08000fb4 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000fb4:	b480      	push	{r7}
 8000fb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000fb8:	bf00      	nop
 8000fba:	e7fd      	b.n	8000fb8 <BusFault_Handler+0x4>

08000fbc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000fbc:	b480      	push	{r7}
 8000fbe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000fc0:	bf00      	nop
 8000fc2:	e7fd      	b.n	8000fc0 <UsageFault_Handler+0x4>

08000fc4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000fc4:	b480      	push	{r7}
 8000fc6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000fc8:	bf00      	nop
 8000fca:	46bd      	mov	sp, r7
 8000fcc:	bc80      	pop	{r7}
 8000fce:	4770      	bx	lr

08000fd0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000fd0:	b480      	push	{r7}
 8000fd2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000fd4:	bf00      	nop
 8000fd6:	46bd      	mov	sp, r7
 8000fd8:	bc80      	pop	{r7}
 8000fda:	4770      	bx	lr

08000fdc <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000fdc:	b480      	push	{r7}
 8000fde:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000fe0:	bf00      	nop
 8000fe2:	46bd      	mov	sp, r7
 8000fe4:	bc80      	pop	{r7}
 8000fe6:	4770      	bx	lr

08000fe8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000fe8:	b580      	push	{r7, lr}
 8000fea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000fec:	f000 f8c6 	bl	800117c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000ff0:	bf00      	nop
 8000ff2:	bd80      	pop	{r7, pc}

08000ff4 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8000ff8:	4802      	ldr	r0, [pc, #8]	@ (8001004 <TIM2_IRQHandler+0x10>)
 8000ffa:	f001 fa8b 	bl	8002514 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8000ffe:	bf00      	nop
 8001000:	bd80      	pop	{r7, pc}
 8001002:	bf00      	nop
 8001004:	2000012c 	.word	0x2000012c

08001008 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001008:	b480      	push	{r7}
 800100a:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800100c:	bf00      	nop
 800100e:	46bd      	mov	sp, r7
 8001010:	bc80      	pop	{r7}
 8001012:	4770      	bx	lr

08001014 <setTimer>:

#define TIMERNUM 10
int timer_counter[TIMERNUM]={0,0,0,0,0,0,0,0,0,0};
int timer_flag[TIMERNUM]={0,0,0,0,0,0,0,0,0,0};

void setTimer(int INDEX,int duration){
 8001014:	b480      	push	{r7}
 8001016:	b083      	sub	sp, #12
 8001018:	af00      	add	r7, sp, #0
 800101a:	6078      	str	r0, [r7, #4]
 800101c:	6039      	str	r1, [r7, #0]
	timer_counter[INDEX]=duration;
 800101e:	4907      	ldr	r1, [pc, #28]	@ (800103c <setTimer+0x28>)
 8001020:	687b      	ldr	r3, [r7, #4]
 8001022:	683a      	ldr	r2, [r7, #0]
 8001024:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	timer_flag[INDEX]=0;
 8001028:	4a05      	ldr	r2, [pc, #20]	@ (8001040 <setTimer+0x2c>)
 800102a:	687b      	ldr	r3, [r7, #4]
 800102c:	2100      	movs	r1, #0
 800102e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8001032:	bf00      	nop
 8001034:	370c      	adds	r7, #12
 8001036:	46bd      	mov	sp, r7
 8001038:	bc80      	pop	{r7}
 800103a:	4770      	bx	lr
 800103c:	20000174 	.word	0x20000174
 8001040:	2000019c 	.word	0x2000019c

08001044 <timerRun>:

void timerRun(){
 8001044:	b480      	push	{r7}
 8001046:	b083      	sub	sp, #12
 8001048:	af00      	add	r7, sp, #0
	for(int i=0;i<TIMERNUM;i++){
 800104a:	2300      	movs	r3, #0
 800104c:	607b      	str	r3, [r7, #4]
 800104e:	e01c      	b.n	800108a <timerRun+0x46>
		if(timer_counter[i] > 0){
 8001050:	4a12      	ldr	r2, [pc, #72]	@ (800109c <timerRun+0x58>)
 8001052:	687b      	ldr	r3, [r7, #4]
 8001054:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001058:	2b00      	cmp	r3, #0
 800105a:	dd13      	ble.n	8001084 <timerRun+0x40>
			timer_counter[i]--;
 800105c:	4a0f      	ldr	r2, [pc, #60]	@ (800109c <timerRun+0x58>)
 800105e:	687b      	ldr	r3, [r7, #4]
 8001060:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001064:	1e5a      	subs	r2, r3, #1
 8001066:	490d      	ldr	r1, [pc, #52]	@ (800109c <timerRun+0x58>)
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if(timer_counter[i] <=0){
 800106e:	4a0b      	ldr	r2, [pc, #44]	@ (800109c <timerRun+0x58>)
 8001070:	687b      	ldr	r3, [r7, #4]
 8001072:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001076:	2b00      	cmp	r3, #0
 8001078:	dc04      	bgt.n	8001084 <timerRun+0x40>
				timer_flag[i]=1;
 800107a:	4a09      	ldr	r2, [pc, #36]	@ (80010a0 <timerRun+0x5c>)
 800107c:	687b      	ldr	r3, [r7, #4]
 800107e:	2101      	movs	r1, #1
 8001080:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i=0;i<TIMERNUM;i++){
 8001084:	687b      	ldr	r3, [r7, #4]
 8001086:	3301      	adds	r3, #1
 8001088:	607b      	str	r3, [r7, #4]
 800108a:	687b      	ldr	r3, [r7, #4]
 800108c:	2b09      	cmp	r3, #9
 800108e:	dddf      	ble.n	8001050 <timerRun+0xc>
			}
		}
	}
}
 8001090:	bf00      	nop
 8001092:	bf00      	nop
 8001094:	370c      	adds	r7, #12
 8001096:	46bd      	mov	sp, r7
 8001098:	bc80      	pop	{r7}
 800109a:	4770      	bx	lr
 800109c:	20000174 	.word	0x20000174
 80010a0:	2000019c 	.word	0x2000019c

080010a4 <Reset_Handler>:
 80010a4:	f7ff ffb0 	bl	8001008 <SystemInit>
 80010a8:	480b      	ldr	r0, [pc, #44]	@ (80010d8 <LoopFillZerobss+0xe>)
 80010aa:	490c      	ldr	r1, [pc, #48]	@ (80010dc <LoopFillZerobss+0x12>)
 80010ac:	4a0c      	ldr	r2, [pc, #48]	@ (80010e0 <LoopFillZerobss+0x16>)
 80010ae:	2300      	movs	r3, #0
 80010b0:	e002      	b.n	80010b8 <LoopCopyDataInit>

080010b2 <CopyDataInit>:
 80010b2:	58d4      	ldr	r4, [r2, r3]
 80010b4:	50c4      	str	r4, [r0, r3]
 80010b6:	3304      	adds	r3, #4

080010b8 <LoopCopyDataInit>:
 80010b8:	18c4      	adds	r4, r0, r3
 80010ba:	428c      	cmp	r4, r1
 80010bc:	d3f9      	bcc.n	80010b2 <CopyDataInit>
 80010be:	4a09      	ldr	r2, [pc, #36]	@ (80010e4 <LoopFillZerobss+0x1a>)
 80010c0:	4c09      	ldr	r4, [pc, #36]	@ (80010e8 <LoopFillZerobss+0x1e>)
 80010c2:	2300      	movs	r3, #0
 80010c4:	e001      	b.n	80010ca <LoopFillZerobss>

080010c6 <FillZerobss>:
 80010c6:	6013      	str	r3, [r2, #0]
 80010c8:	3204      	adds	r2, #4

080010ca <LoopFillZerobss>:
 80010ca:	42a2      	cmp	r2, r4
 80010cc:	d3fb      	bcc.n	80010c6 <FillZerobss>
 80010ce:	f001 fd85 	bl	8002bdc <__libc_init_array>
 80010d2:	f7ff fcf3 	bl	8000abc <main>
 80010d6:	4770      	bx	lr
 80010d8:	20000000 	.word	0x20000000
 80010dc:	2000003c 	.word	0x2000003c
 80010e0:	08002c7c 	.word	0x08002c7c
 80010e4:	2000003c 	.word	0x2000003c
 80010e8:	200001c8 	.word	0x200001c8

080010ec <ADC1_2_IRQHandler>:
 80010ec:	e7fe      	b.n	80010ec <ADC1_2_IRQHandler>
	...

080010f0 <HAL_Init>:
 80010f0:	b580      	push	{r7, lr}
 80010f2:	af00      	add	r7, sp, #0
 80010f4:	4b08      	ldr	r3, [pc, #32]	@ (8001118 <HAL_Init+0x28>)
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	4a07      	ldr	r2, [pc, #28]	@ (8001118 <HAL_Init+0x28>)
 80010fa:	f043 0310 	orr.w	r3, r3, #16
 80010fe:	6013      	str	r3, [r2, #0]
 8001100:	2003      	movs	r0, #3
 8001102:	f000 f923 	bl	800134c <HAL_NVIC_SetPriorityGrouping>
 8001106:	200f      	movs	r0, #15
 8001108:	f000 f808 	bl	800111c <HAL_InitTick>
 800110c:	f7ff fe82 	bl	8000e14 <HAL_MspInit>
 8001110:	2300      	movs	r3, #0
 8001112:	4618      	mov	r0, r3
 8001114:	bd80      	pop	{r7, pc}
 8001116:	bf00      	nop
 8001118:	40022000 	.word	0x40022000

0800111c <HAL_InitTick>:
 800111c:	b580      	push	{r7, lr}
 800111e:	b082      	sub	sp, #8
 8001120:	af00      	add	r7, sp, #0
 8001122:	6078      	str	r0, [r7, #4]
 8001124:	4b12      	ldr	r3, [pc, #72]	@ (8001170 <HAL_InitTick+0x54>)
 8001126:	681a      	ldr	r2, [r3, #0]
 8001128:	4b12      	ldr	r3, [pc, #72]	@ (8001174 <HAL_InitTick+0x58>)
 800112a:	781b      	ldrb	r3, [r3, #0]
 800112c:	4619      	mov	r1, r3
 800112e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001132:	fbb3 f3f1 	udiv	r3, r3, r1
 8001136:	fbb2 f3f3 	udiv	r3, r2, r3
 800113a:	4618      	mov	r0, r3
 800113c:	f000 f93b 	bl	80013b6 <HAL_SYSTICK_Config>
 8001140:	4603      	mov	r3, r0
 8001142:	2b00      	cmp	r3, #0
 8001144:	d001      	beq.n	800114a <HAL_InitTick+0x2e>
 8001146:	2301      	movs	r3, #1
 8001148:	e00e      	b.n	8001168 <HAL_InitTick+0x4c>
 800114a:	687b      	ldr	r3, [r7, #4]
 800114c:	2b0f      	cmp	r3, #15
 800114e:	d80a      	bhi.n	8001166 <HAL_InitTick+0x4a>
 8001150:	2200      	movs	r2, #0
 8001152:	6879      	ldr	r1, [r7, #4]
 8001154:	f04f 30ff 	mov.w	r0, #4294967295
 8001158:	f000 f903 	bl	8001362 <HAL_NVIC_SetPriority>
 800115c:	4a06      	ldr	r2, [pc, #24]	@ (8001178 <HAL_InitTick+0x5c>)
 800115e:	687b      	ldr	r3, [r7, #4]
 8001160:	6013      	str	r3, [r2, #0]
 8001162:	2300      	movs	r3, #0
 8001164:	e000      	b.n	8001168 <HAL_InitTick+0x4c>
 8001166:	2301      	movs	r3, #1
 8001168:	4618      	mov	r0, r3
 800116a:	3708      	adds	r7, #8
 800116c:	46bd      	mov	sp, r7
 800116e:	bd80      	pop	{r7, pc}
 8001170:	20000030 	.word	0x20000030
 8001174:	20000038 	.word	0x20000038
 8001178:	20000034 	.word	0x20000034

0800117c <HAL_IncTick>:
 800117c:	b480      	push	{r7}
 800117e:	af00      	add	r7, sp, #0
 8001180:	4b05      	ldr	r3, [pc, #20]	@ (8001198 <HAL_IncTick+0x1c>)
 8001182:	781b      	ldrb	r3, [r3, #0]
 8001184:	461a      	mov	r2, r3
 8001186:	4b05      	ldr	r3, [pc, #20]	@ (800119c <HAL_IncTick+0x20>)
 8001188:	681b      	ldr	r3, [r3, #0]
 800118a:	4413      	add	r3, r2
 800118c:	4a03      	ldr	r2, [pc, #12]	@ (800119c <HAL_IncTick+0x20>)
 800118e:	6013      	str	r3, [r2, #0]
 8001190:	bf00      	nop
 8001192:	46bd      	mov	sp, r7
 8001194:	bc80      	pop	{r7}
 8001196:	4770      	bx	lr
 8001198:	20000038 	.word	0x20000038
 800119c:	200001c4 	.word	0x200001c4

080011a0 <HAL_GetTick>:
 80011a0:	b480      	push	{r7}
 80011a2:	af00      	add	r7, sp, #0
 80011a4:	4b02      	ldr	r3, [pc, #8]	@ (80011b0 <HAL_GetTick+0x10>)
 80011a6:	681b      	ldr	r3, [r3, #0]
 80011a8:	4618      	mov	r0, r3
 80011aa:	46bd      	mov	sp, r7
 80011ac:	bc80      	pop	{r7}
 80011ae:	4770      	bx	lr
 80011b0:	200001c4 	.word	0x200001c4

080011b4 <__NVIC_SetPriorityGrouping>:
 80011b4:	b480      	push	{r7}
 80011b6:	b085      	sub	sp, #20
 80011b8:	af00      	add	r7, sp, #0
 80011ba:	6078      	str	r0, [r7, #4]
 80011bc:	687b      	ldr	r3, [r7, #4]
 80011be:	f003 0307 	and.w	r3, r3, #7
 80011c2:	60fb      	str	r3, [r7, #12]
 80011c4:	4b0c      	ldr	r3, [pc, #48]	@ (80011f8 <__NVIC_SetPriorityGrouping+0x44>)
 80011c6:	68db      	ldr	r3, [r3, #12]
 80011c8:	60bb      	str	r3, [r7, #8]
 80011ca:	68ba      	ldr	r2, [r7, #8]
 80011cc:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80011d0:	4013      	ands	r3, r2
 80011d2:	60bb      	str	r3, [r7, #8]
 80011d4:	68fb      	ldr	r3, [r7, #12]
 80011d6:	021a      	lsls	r2, r3, #8
 80011d8:	68bb      	ldr	r3, [r7, #8]
 80011da:	4313      	orrs	r3, r2
 80011dc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80011e0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80011e4:	60bb      	str	r3, [r7, #8]
 80011e6:	4a04      	ldr	r2, [pc, #16]	@ (80011f8 <__NVIC_SetPriorityGrouping+0x44>)
 80011e8:	68bb      	ldr	r3, [r7, #8]
 80011ea:	60d3      	str	r3, [r2, #12]
 80011ec:	bf00      	nop
 80011ee:	3714      	adds	r7, #20
 80011f0:	46bd      	mov	sp, r7
 80011f2:	bc80      	pop	{r7}
 80011f4:	4770      	bx	lr
 80011f6:	bf00      	nop
 80011f8:	e000ed00 	.word	0xe000ed00

080011fc <__NVIC_GetPriorityGrouping>:
 80011fc:	b480      	push	{r7}
 80011fe:	af00      	add	r7, sp, #0
 8001200:	4b04      	ldr	r3, [pc, #16]	@ (8001214 <__NVIC_GetPriorityGrouping+0x18>)
 8001202:	68db      	ldr	r3, [r3, #12]
 8001204:	0a1b      	lsrs	r3, r3, #8
 8001206:	f003 0307 	and.w	r3, r3, #7
 800120a:	4618      	mov	r0, r3
 800120c:	46bd      	mov	sp, r7
 800120e:	bc80      	pop	{r7}
 8001210:	4770      	bx	lr
 8001212:	bf00      	nop
 8001214:	e000ed00 	.word	0xe000ed00

08001218 <__NVIC_EnableIRQ>:
 8001218:	b480      	push	{r7}
 800121a:	b083      	sub	sp, #12
 800121c:	af00      	add	r7, sp, #0
 800121e:	4603      	mov	r3, r0
 8001220:	71fb      	strb	r3, [r7, #7]
 8001222:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001226:	2b00      	cmp	r3, #0
 8001228:	db0b      	blt.n	8001242 <__NVIC_EnableIRQ+0x2a>
 800122a:	79fb      	ldrb	r3, [r7, #7]
 800122c:	f003 021f 	and.w	r2, r3, #31
 8001230:	4906      	ldr	r1, [pc, #24]	@ (800124c <__NVIC_EnableIRQ+0x34>)
 8001232:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001236:	095b      	lsrs	r3, r3, #5
 8001238:	2001      	movs	r0, #1
 800123a:	fa00 f202 	lsl.w	r2, r0, r2
 800123e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001242:	bf00      	nop
 8001244:	370c      	adds	r7, #12
 8001246:	46bd      	mov	sp, r7
 8001248:	bc80      	pop	{r7}
 800124a:	4770      	bx	lr
 800124c:	e000e100 	.word	0xe000e100

08001250 <__NVIC_SetPriority>:
 8001250:	b480      	push	{r7}
 8001252:	b083      	sub	sp, #12
 8001254:	af00      	add	r7, sp, #0
 8001256:	4603      	mov	r3, r0
 8001258:	6039      	str	r1, [r7, #0]
 800125a:	71fb      	strb	r3, [r7, #7]
 800125c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001260:	2b00      	cmp	r3, #0
 8001262:	db0a      	blt.n	800127a <__NVIC_SetPriority+0x2a>
 8001264:	683b      	ldr	r3, [r7, #0]
 8001266:	b2da      	uxtb	r2, r3
 8001268:	490c      	ldr	r1, [pc, #48]	@ (800129c <__NVIC_SetPriority+0x4c>)
 800126a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800126e:	0112      	lsls	r2, r2, #4
 8001270:	b2d2      	uxtb	r2, r2
 8001272:	440b      	add	r3, r1
 8001274:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001278:	e00a      	b.n	8001290 <__NVIC_SetPriority+0x40>
 800127a:	683b      	ldr	r3, [r7, #0]
 800127c:	b2da      	uxtb	r2, r3
 800127e:	4908      	ldr	r1, [pc, #32]	@ (80012a0 <__NVIC_SetPriority+0x50>)
 8001280:	79fb      	ldrb	r3, [r7, #7]
 8001282:	f003 030f 	and.w	r3, r3, #15
 8001286:	3b04      	subs	r3, #4
 8001288:	0112      	lsls	r2, r2, #4
 800128a:	b2d2      	uxtb	r2, r2
 800128c:	440b      	add	r3, r1
 800128e:	761a      	strb	r2, [r3, #24]
 8001290:	bf00      	nop
 8001292:	370c      	adds	r7, #12
 8001294:	46bd      	mov	sp, r7
 8001296:	bc80      	pop	{r7}
 8001298:	4770      	bx	lr
 800129a:	bf00      	nop
 800129c:	e000e100 	.word	0xe000e100
 80012a0:	e000ed00 	.word	0xe000ed00

080012a4 <NVIC_EncodePriority>:
 80012a4:	b480      	push	{r7}
 80012a6:	b089      	sub	sp, #36	@ 0x24
 80012a8:	af00      	add	r7, sp, #0
 80012aa:	60f8      	str	r0, [r7, #12]
 80012ac:	60b9      	str	r1, [r7, #8]
 80012ae:	607a      	str	r2, [r7, #4]
 80012b0:	68fb      	ldr	r3, [r7, #12]
 80012b2:	f003 0307 	and.w	r3, r3, #7
 80012b6:	61fb      	str	r3, [r7, #28]
 80012b8:	69fb      	ldr	r3, [r7, #28]
 80012ba:	f1c3 0307 	rsb	r3, r3, #7
 80012be:	2b04      	cmp	r3, #4
 80012c0:	bf28      	it	cs
 80012c2:	2304      	movcs	r3, #4
 80012c4:	61bb      	str	r3, [r7, #24]
 80012c6:	69fb      	ldr	r3, [r7, #28]
 80012c8:	3304      	adds	r3, #4
 80012ca:	2b06      	cmp	r3, #6
 80012cc:	d902      	bls.n	80012d4 <NVIC_EncodePriority+0x30>
 80012ce:	69fb      	ldr	r3, [r7, #28]
 80012d0:	3b03      	subs	r3, #3
 80012d2:	e000      	b.n	80012d6 <NVIC_EncodePriority+0x32>
 80012d4:	2300      	movs	r3, #0
 80012d6:	617b      	str	r3, [r7, #20]
 80012d8:	f04f 32ff 	mov.w	r2, #4294967295
 80012dc:	69bb      	ldr	r3, [r7, #24]
 80012de:	fa02 f303 	lsl.w	r3, r2, r3
 80012e2:	43da      	mvns	r2, r3
 80012e4:	68bb      	ldr	r3, [r7, #8]
 80012e6:	401a      	ands	r2, r3
 80012e8:	697b      	ldr	r3, [r7, #20]
 80012ea:	409a      	lsls	r2, r3
 80012ec:	f04f 31ff 	mov.w	r1, #4294967295
 80012f0:	697b      	ldr	r3, [r7, #20]
 80012f2:	fa01 f303 	lsl.w	r3, r1, r3
 80012f6:	43d9      	mvns	r1, r3
 80012f8:	687b      	ldr	r3, [r7, #4]
 80012fa:	400b      	ands	r3, r1
 80012fc:	4313      	orrs	r3, r2
 80012fe:	4618      	mov	r0, r3
 8001300:	3724      	adds	r7, #36	@ 0x24
 8001302:	46bd      	mov	sp, r7
 8001304:	bc80      	pop	{r7}
 8001306:	4770      	bx	lr

08001308 <SysTick_Config>:
 8001308:	b580      	push	{r7, lr}
 800130a:	b082      	sub	sp, #8
 800130c:	af00      	add	r7, sp, #0
 800130e:	6078      	str	r0, [r7, #4]
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	3b01      	subs	r3, #1
 8001314:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001318:	d301      	bcc.n	800131e <SysTick_Config+0x16>
 800131a:	2301      	movs	r3, #1
 800131c:	e00f      	b.n	800133e <SysTick_Config+0x36>
 800131e:	4a0a      	ldr	r2, [pc, #40]	@ (8001348 <SysTick_Config+0x40>)
 8001320:	687b      	ldr	r3, [r7, #4]
 8001322:	3b01      	subs	r3, #1
 8001324:	6053      	str	r3, [r2, #4]
 8001326:	210f      	movs	r1, #15
 8001328:	f04f 30ff 	mov.w	r0, #4294967295
 800132c:	f7ff ff90 	bl	8001250 <__NVIC_SetPriority>
 8001330:	4b05      	ldr	r3, [pc, #20]	@ (8001348 <SysTick_Config+0x40>)
 8001332:	2200      	movs	r2, #0
 8001334:	609a      	str	r2, [r3, #8]
 8001336:	4b04      	ldr	r3, [pc, #16]	@ (8001348 <SysTick_Config+0x40>)
 8001338:	2207      	movs	r2, #7
 800133a:	601a      	str	r2, [r3, #0]
 800133c:	2300      	movs	r3, #0
 800133e:	4618      	mov	r0, r3
 8001340:	3708      	adds	r7, #8
 8001342:	46bd      	mov	sp, r7
 8001344:	bd80      	pop	{r7, pc}
 8001346:	bf00      	nop
 8001348:	e000e010 	.word	0xe000e010

0800134c <HAL_NVIC_SetPriorityGrouping>:
 800134c:	b580      	push	{r7, lr}
 800134e:	b082      	sub	sp, #8
 8001350:	af00      	add	r7, sp, #0
 8001352:	6078      	str	r0, [r7, #4]
 8001354:	6878      	ldr	r0, [r7, #4]
 8001356:	f7ff ff2d 	bl	80011b4 <__NVIC_SetPriorityGrouping>
 800135a:	bf00      	nop
 800135c:	3708      	adds	r7, #8
 800135e:	46bd      	mov	sp, r7
 8001360:	bd80      	pop	{r7, pc}

08001362 <HAL_NVIC_SetPriority>:
 8001362:	b580      	push	{r7, lr}
 8001364:	b086      	sub	sp, #24
 8001366:	af00      	add	r7, sp, #0
 8001368:	4603      	mov	r3, r0
 800136a:	60b9      	str	r1, [r7, #8]
 800136c:	607a      	str	r2, [r7, #4]
 800136e:	73fb      	strb	r3, [r7, #15]
 8001370:	2300      	movs	r3, #0
 8001372:	617b      	str	r3, [r7, #20]
 8001374:	f7ff ff42 	bl	80011fc <__NVIC_GetPriorityGrouping>
 8001378:	6178      	str	r0, [r7, #20]
 800137a:	687a      	ldr	r2, [r7, #4]
 800137c:	68b9      	ldr	r1, [r7, #8]
 800137e:	6978      	ldr	r0, [r7, #20]
 8001380:	f7ff ff90 	bl	80012a4 <NVIC_EncodePriority>
 8001384:	4602      	mov	r2, r0
 8001386:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800138a:	4611      	mov	r1, r2
 800138c:	4618      	mov	r0, r3
 800138e:	f7ff ff5f 	bl	8001250 <__NVIC_SetPriority>
 8001392:	bf00      	nop
 8001394:	3718      	adds	r7, #24
 8001396:	46bd      	mov	sp, r7
 8001398:	bd80      	pop	{r7, pc}

0800139a <HAL_NVIC_EnableIRQ>:
 800139a:	b580      	push	{r7, lr}
 800139c:	b082      	sub	sp, #8
 800139e:	af00      	add	r7, sp, #0
 80013a0:	4603      	mov	r3, r0
 80013a2:	71fb      	strb	r3, [r7, #7]
 80013a4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013a8:	4618      	mov	r0, r3
 80013aa:	f7ff ff35 	bl	8001218 <__NVIC_EnableIRQ>
 80013ae:	bf00      	nop
 80013b0:	3708      	adds	r7, #8
 80013b2:	46bd      	mov	sp, r7
 80013b4:	bd80      	pop	{r7, pc}

080013b6 <HAL_SYSTICK_Config>:
 80013b6:	b580      	push	{r7, lr}
 80013b8:	b082      	sub	sp, #8
 80013ba:	af00      	add	r7, sp, #0
 80013bc:	6078      	str	r0, [r7, #4]
 80013be:	6878      	ldr	r0, [r7, #4]
 80013c0:	f7ff ffa2 	bl	8001308 <SysTick_Config>
 80013c4:	4603      	mov	r3, r0
 80013c6:	4618      	mov	r0, r3
 80013c8:	3708      	adds	r7, #8
 80013ca:	46bd      	mov	sp, r7
 80013cc:	bd80      	pop	{r7, pc}
	...

080013d0 <HAL_GPIO_Init>:
 80013d0:	b480      	push	{r7}
 80013d2:	b08b      	sub	sp, #44	@ 0x2c
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	6078      	str	r0, [r7, #4]
 80013d8:	6039      	str	r1, [r7, #0]
 80013da:	2300      	movs	r3, #0
 80013dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80013de:	2300      	movs	r3, #0
 80013e0:	623b      	str	r3, [r7, #32]
 80013e2:	e169      	b.n	80016b8 <HAL_GPIO_Init+0x2e8>
 80013e4:	2201      	movs	r2, #1
 80013e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80013e8:	fa02 f303 	lsl.w	r3, r2, r3
 80013ec:	61fb      	str	r3, [r7, #28]
 80013ee:	683b      	ldr	r3, [r7, #0]
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	69fa      	ldr	r2, [r7, #28]
 80013f4:	4013      	ands	r3, r2
 80013f6:	61bb      	str	r3, [r7, #24]
 80013f8:	69ba      	ldr	r2, [r7, #24]
 80013fa:	69fb      	ldr	r3, [r7, #28]
 80013fc:	429a      	cmp	r2, r3
 80013fe:	f040 8158 	bne.w	80016b2 <HAL_GPIO_Init+0x2e2>
 8001402:	683b      	ldr	r3, [r7, #0]
 8001404:	685b      	ldr	r3, [r3, #4]
 8001406:	4a9a      	ldr	r2, [pc, #616]	@ (8001670 <HAL_GPIO_Init+0x2a0>)
 8001408:	4293      	cmp	r3, r2
 800140a:	d05e      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 800140c:	4a98      	ldr	r2, [pc, #608]	@ (8001670 <HAL_GPIO_Init+0x2a0>)
 800140e:	4293      	cmp	r3, r2
 8001410:	d875      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 8001412:	4a98      	ldr	r2, [pc, #608]	@ (8001674 <HAL_GPIO_Init+0x2a4>)
 8001414:	4293      	cmp	r3, r2
 8001416:	d058      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 8001418:	4a96      	ldr	r2, [pc, #600]	@ (8001674 <HAL_GPIO_Init+0x2a4>)
 800141a:	4293      	cmp	r3, r2
 800141c:	d86f      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 800141e:	4a96      	ldr	r2, [pc, #600]	@ (8001678 <HAL_GPIO_Init+0x2a8>)
 8001420:	4293      	cmp	r3, r2
 8001422:	d052      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 8001424:	4a94      	ldr	r2, [pc, #592]	@ (8001678 <HAL_GPIO_Init+0x2a8>)
 8001426:	4293      	cmp	r3, r2
 8001428:	d869      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 800142a:	4a94      	ldr	r2, [pc, #592]	@ (800167c <HAL_GPIO_Init+0x2ac>)
 800142c:	4293      	cmp	r3, r2
 800142e:	d04c      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 8001430:	4a92      	ldr	r2, [pc, #584]	@ (800167c <HAL_GPIO_Init+0x2ac>)
 8001432:	4293      	cmp	r3, r2
 8001434:	d863      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 8001436:	4a92      	ldr	r2, [pc, #584]	@ (8001680 <HAL_GPIO_Init+0x2b0>)
 8001438:	4293      	cmp	r3, r2
 800143a:	d046      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 800143c:	4a90      	ldr	r2, [pc, #576]	@ (8001680 <HAL_GPIO_Init+0x2b0>)
 800143e:	4293      	cmp	r3, r2
 8001440:	d85d      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 8001442:	2b12      	cmp	r3, #18
 8001444:	d82a      	bhi.n	800149c <HAL_GPIO_Init+0xcc>
 8001446:	2b12      	cmp	r3, #18
 8001448:	d859      	bhi.n	80014fe <HAL_GPIO_Init+0x12e>
 800144a:	a201      	add	r2, pc, #4	@ (adr r2, 8001450 <HAL_GPIO_Init+0x80>)
 800144c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001450:	080014cb 	.word	0x080014cb
 8001454:	080014a5 	.word	0x080014a5
 8001458:	080014b7 	.word	0x080014b7
 800145c:	080014f9 	.word	0x080014f9
 8001460:	080014ff 	.word	0x080014ff
 8001464:	080014ff 	.word	0x080014ff
 8001468:	080014ff 	.word	0x080014ff
 800146c:	080014ff 	.word	0x080014ff
 8001470:	080014ff 	.word	0x080014ff
 8001474:	080014ff 	.word	0x080014ff
 8001478:	080014ff 	.word	0x080014ff
 800147c:	080014ff 	.word	0x080014ff
 8001480:	080014ff 	.word	0x080014ff
 8001484:	080014ff 	.word	0x080014ff
 8001488:	080014ff 	.word	0x080014ff
 800148c:	080014ff 	.word	0x080014ff
 8001490:	080014ff 	.word	0x080014ff
 8001494:	080014ad 	.word	0x080014ad
 8001498:	080014c1 	.word	0x080014c1
 800149c:	4a79      	ldr	r2, [pc, #484]	@ (8001684 <HAL_GPIO_Init+0x2b4>)
 800149e:	4293      	cmp	r3, r2
 80014a0:	d013      	beq.n	80014ca <HAL_GPIO_Init+0xfa>
 80014a2:	e02c      	b.n	80014fe <HAL_GPIO_Init+0x12e>
 80014a4:	683b      	ldr	r3, [r7, #0]
 80014a6:	68db      	ldr	r3, [r3, #12]
 80014a8:	623b      	str	r3, [r7, #32]
 80014aa:	e029      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014ac:	683b      	ldr	r3, [r7, #0]
 80014ae:	68db      	ldr	r3, [r3, #12]
 80014b0:	3304      	adds	r3, #4
 80014b2:	623b      	str	r3, [r7, #32]
 80014b4:	e024      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014b6:	683b      	ldr	r3, [r7, #0]
 80014b8:	68db      	ldr	r3, [r3, #12]
 80014ba:	3308      	adds	r3, #8
 80014bc:	623b      	str	r3, [r7, #32]
 80014be:	e01f      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014c0:	683b      	ldr	r3, [r7, #0]
 80014c2:	68db      	ldr	r3, [r3, #12]
 80014c4:	330c      	adds	r3, #12
 80014c6:	623b      	str	r3, [r7, #32]
 80014c8:	e01a      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014ca:	683b      	ldr	r3, [r7, #0]
 80014cc:	689b      	ldr	r3, [r3, #8]
 80014ce:	2b00      	cmp	r3, #0
 80014d0:	d102      	bne.n	80014d8 <HAL_GPIO_Init+0x108>
 80014d2:	2304      	movs	r3, #4
 80014d4:	623b      	str	r3, [r7, #32]
 80014d6:	e013      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014d8:	683b      	ldr	r3, [r7, #0]
 80014da:	689b      	ldr	r3, [r3, #8]
 80014dc:	2b01      	cmp	r3, #1
 80014de:	d105      	bne.n	80014ec <HAL_GPIO_Init+0x11c>
 80014e0:	2308      	movs	r3, #8
 80014e2:	623b      	str	r3, [r7, #32]
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	69fa      	ldr	r2, [r7, #28]
 80014e8:	611a      	str	r2, [r3, #16]
 80014ea:	e009      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014ec:	2308      	movs	r3, #8
 80014ee:	623b      	str	r3, [r7, #32]
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	69fa      	ldr	r2, [r7, #28]
 80014f4:	615a      	str	r2, [r3, #20]
 80014f6:	e003      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014f8:	2300      	movs	r3, #0
 80014fa:	623b      	str	r3, [r7, #32]
 80014fc:	e000      	b.n	8001500 <HAL_GPIO_Init+0x130>
 80014fe:	bf00      	nop
 8001500:	69bb      	ldr	r3, [r7, #24]
 8001502:	2bff      	cmp	r3, #255	@ 0xff
 8001504:	d801      	bhi.n	800150a <HAL_GPIO_Init+0x13a>
 8001506:	687b      	ldr	r3, [r7, #4]
 8001508:	e001      	b.n	800150e <HAL_GPIO_Init+0x13e>
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	3304      	adds	r3, #4
 800150e:	617b      	str	r3, [r7, #20]
 8001510:	69bb      	ldr	r3, [r7, #24]
 8001512:	2bff      	cmp	r3, #255	@ 0xff
 8001514:	d802      	bhi.n	800151c <HAL_GPIO_Init+0x14c>
 8001516:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001518:	009b      	lsls	r3, r3, #2
 800151a:	e002      	b.n	8001522 <HAL_GPIO_Init+0x152>
 800151c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800151e:	3b08      	subs	r3, #8
 8001520:	009b      	lsls	r3, r3, #2
 8001522:	613b      	str	r3, [r7, #16]
 8001524:	697b      	ldr	r3, [r7, #20]
 8001526:	681a      	ldr	r2, [r3, #0]
 8001528:	210f      	movs	r1, #15
 800152a:	693b      	ldr	r3, [r7, #16]
 800152c:	fa01 f303 	lsl.w	r3, r1, r3
 8001530:	43db      	mvns	r3, r3
 8001532:	401a      	ands	r2, r3
 8001534:	6a39      	ldr	r1, [r7, #32]
 8001536:	693b      	ldr	r3, [r7, #16]
 8001538:	fa01 f303 	lsl.w	r3, r1, r3
 800153c:	431a      	orrs	r2, r3
 800153e:	697b      	ldr	r3, [r7, #20]
 8001540:	601a      	str	r2, [r3, #0]
 8001542:	683b      	ldr	r3, [r7, #0]
 8001544:	685b      	ldr	r3, [r3, #4]
 8001546:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800154a:	2b00      	cmp	r3, #0
 800154c:	f000 80b1 	beq.w	80016b2 <HAL_GPIO_Init+0x2e2>
 8001550:	4b4d      	ldr	r3, [pc, #308]	@ (8001688 <HAL_GPIO_Init+0x2b8>)
 8001552:	699b      	ldr	r3, [r3, #24]
 8001554:	4a4c      	ldr	r2, [pc, #304]	@ (8001688 <HAL_GPIO_Init+0x2b8>)
 8001556:	f043 0301 	orr.w	r3, r3, #1
 800155a:	6193      	str	r3, [r2, #24]
 800155c:	4b4a      	ldr	r3, [pc, #296]	@ (8001688 <HAL_GPIO_Init+0x2b8>)
 800155e:	699b      	ldr	r3, [r3, #24]
 8001560:	f003 0301 	and.w	r3, r3, #1
 8001564:	60bb      	str	r3, [r7, #8]
 8001566:	68bb      	ldr	r3, [r7, #8]
 8001568:	4a48      	ldr	r2, [pc, #288]	@ (800168c <HAL_GPIO_Init+0x2bc>)
 800156a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800156c:	089b      	lsrs	r3, r3, #2
 800156e:	3302      	adds	r3, #2
 8001570:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001574:	60fb      	str	r3, [r7, #12]
 8001576:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001578:	f003 0303 	and.w	r3, r3, #3
 800157c:	009b      	lsls	r3, r3, #2
 800157e:	220f      	movs	r2, #15
 8001580:	fa02 f303 	lsl.w	r3, r2, r3
 8001584:	43db      	mvns	r3, r3
 8001586:	68fa      	ldr	r2, [r7, #12]
 8001588:	4013      	ands	r3, r2
 800158a:	60fb      	str	r3, [r7, #12]
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	4a40      	ldr	r2, [pc, #256]	@ (8001690 <HAL_GPIO_Init+0x2c0>)
 8001590:	4293      	cmp	r3, r2
 8001592:	d013      	beq.n	80015bc <HAL_GPIO_Init+0x1ec>
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	4a3f      	ldr	r2, [pc, #252]	@ (8001694 <HAL_GPIO_Init+0x2c4>)
 8001598:	4293      	cmp	r3, r2
 800159a:	d00d      	beq.n	80015b8 <HAL_GPIO_Init+0x1e8>
 800159c:	687b      	ldr	r3, [r7, #4]
 800159e:	4a3e      	ldr	r2, [pc, #248]	@ (8001698 <HAL_GPIO_Init+0x2c8>)
 80015a0:	4293      	cmp	r3, r2
 80015a2:	d007      	beq.n	80015b4 <HAL_GPIO_Init+0x1e4>
 80015a4:	687b      	ldr	r3, [r7, #4]
 80015a6:	4a3d      	ldr	r2, [pc, #244]	@ (800169c <HAL_GPIO_Init+0x2cc>)
 80015a8:	4293      	cmp	r3, r2
 80015aa:	d101      	bne.n	80015b0 <HAL_GPIO_Init+0x1e0>
 80015ac:	2303      	movs	r3, #3
 80015ae:	e006      	b.n	80015be <HAL_GPIO_Init+0x1ee>
 80015b0:	2304      	movs	r3, #4
 80015b2:	e004      	b.n	80015be <HAL_GPIO_Init+0x1ee>
 80015b4:	2302      	movs	r3, #2
 80015b6:	e002      	b.n	80015be <HAL_GPIO_Init+0x1ee>
 80015b8:	2301      	movs	r3, #1
 80015ba:	e000      	b.n	80015be <HAL_GPIO_Init+0x1ee>
 80015bc:	2300      	movs	r3, #0
 80015be:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80015c0:	f002 0203 	and.w	r2, r2, #3
 80015c4:	0092      	lsls	r2, r2, #2
 80015c6:	4093      	lsls	r3, r2
 80015c8:	68fa      	ldr	r2, [r7, #12]
 80015ca:	4313      	orrs	r3, r2
 80015cc:	60fb      	str	r3, [r7, #12]
 80015ce:	492f      	ldr	r1, [pc, #188]	@ (800168c <HAL_GPIO_Init+0x2bc>)
 80015d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80015d2:	089b      	lsrs	r3, r3, #2
 80015d4:	3302      	adds	r3, #2
 80015d6:	68fa      	ldr	r2, [r7, #12]
 80015d8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80015dc:	683b      	ldr	r3, [r7, #0]
 80015de:	685b      	ldr	r3, [r3, #4]
 80015e0:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80015e4:	2b00      	cmp	r3, #0
 80015e6:	d006      	beq.n	80015f6 <HAL_GPIO_Init+0x226>
 80015e8:	4b2d      	ldr	r3, [pc, #180]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 80015ea:	689a      	ldr	r2, [r3, #8]
 80015ec:	492c      	ldr	r1, [pc, #176]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 80015ee:	69bb      	ldr	r3, [r7, #24]
 80015f0:	4313      	orrs	r3, r2
 80015f2:	608b      	str	r3, [r1, #8]
 80015f4:	e006      	b.n	8001604 <HAL_GPIO_Init+0x234>
 80015f6:	4b2a      	ldr	r3, [pc, #168]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 80015f8:	689a      	ldr	r2, [r3, #8]
 80015fa:	69bb      	ldr	r3, [r7, #24]
 80015fc:	43db      	mvns	r3, r3
 80015fe:	4928      	ldr	r1, [pc, #160]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001600:	4013      	ands	r3, r2
 8001602:	608b      	str	r3, [r1, #8]
 8001604:	683b      	ldr	r3, [r7, #0]
 8001606:	685b      	ldr	r3, [r3, #4]
 8001608:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800160c:	2b00      	cmp	r3, #0
 800160e:	d006      	beq.n	800161e <HAL_GPIO_Init+0x24e>
 8001610:	4b23      	ldr	r3, [pc, #140]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001612:	68da      	ldr	r2, [r3, #12]
 8001614:	4922      	ldr	r1, [pc, #136]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001616:	69bb      	ldr	r3, [r7, #24]
 8001618:	4313      	orrs	r3, r2
 800161a:	60cb      	str	r3, [r1, #12]
 800161c:	e006      	b.n	800162c <HAL_GPIO_Init+0x25c>
 800161e:	4b20      	ldr	r3, [pc, #128]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001620:	68da      	ldr	r2, [r3, #12]
 8001622:	69bb      	ldr	r3, [r7, #24]
 8001624:	43db      	mvns	r3, r3
 8001626:	491e      	ldr	r1, [pc, #120]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001628:	4013      	ands	r3, r2
 800162a:	60cb      	str	r3, [r1, #12]
 800162c:	683b      	ldr	r3, [r7, #0]
 800162e:	685b      	ldr	r3, [r3, #4]
 8001630:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001634:	2b00      	cmp	r3, #0
 8001636:	d006      	beq.n	8001646 <HAL_GPIO_Init+0x276>
 8001638:	4b19      	ldr	r3, [pc, #100]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 800163a:	685a      	ldr	r2, [r3, #4]
 800163c:	4918      	ldr	r1, [pc, #96]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 800163e:	69bb      	ldr	r3, [r7, #24]
 8001640:	4313      	orrs	r3, r2
 8001642:	604b      	str	r3, [r1, #4]
 8001644:	e006      	b.n	8001654 <HAL_GPIO_Init+0x284>
 8001646:	4b16      	ldr	r3, [pc, #88]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001648:	685a      	ldr	r2, [r3, #4]
 800164a:	69bb      	ldr	r3, [r7, #24]
 800164c:	43db      	mvns	r3, r3
 800164e:	4914      	ldr	r1, [pc, #80]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001650:	4013      	ands	r3, r2
 8001652:	604b      	str	r3, [r1, #4]
 8001654:	683b      	ldr	r3, [r7, #0]
 8001656:	685b      	ldr	r3, [r3, #4]
 8001658:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800165c:	2b00      	cmp	r3, #0
 800165e:	d021      	beq.n	80016a4 <HAL_GPIO_Init+0x2d4>
 8001660:	4b0f      	ldr	r3, [pc, #60]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001662:	681a      	ldr	r2, [r3, #0]
 8001664:	490e      	ldr	r1, [pc, #56]	@ (80016a0 <HAL_GPIO_Init+0x2d0>)
 8001666:	69bb      	ldr	r3, [r7, #24]
 8001668:	4313      	orrs	r3, r2
 800166a:	600b      	str	r3, [r1, #0]
 800166c:	e021      	b.n	80016b2 <HAL_GPIO_Init+0x2e2>
 800166e:	bf00      	nop
 8001670:	10320000 	.word	0x10320000
 8001674:	10310000 	.word	0x10310000
 8001678:	10220000 	.word	0x10220000
 800167c:	10210000 	.word	0x10210000
 8001680:	10120000 	.word	0x10120000
 8001684:	10110000 	.word	0x10110000
 8001688:	40021000 	.word	0x40021000
 800168c:	40010000 	.word	0x40010000
 8001690:	40010800 	.word	0x40010800
 8001694:	40010c00 	.word	0x40010c00
 8001698:	40011000 	.word	0x40011000
 800169c:	40011400 	.word	0x40011400
 80016a0:	40010400 	.word	0x40010400
 80016a4:	4b0b      	ldr	r3, [pc, #44]	@ (80016d4 <HAL_GPIO_Init+0x304>)
 80016a6:	681a      	ldr	r2, [r3, #0]
 80016a8:	69bb      	ldr	r3, [r7, #24]
 80016aa:	43db      	mvns	r3, r3
 80016ac:	4909      	ldr	r1, [pc, #36]	@ (80016d4 <HAL_GPIO_Init+0x304>)
 80016ae:	4013      	ands	r3, r2
 80016b0:	600b      	str	r3, [r1, #0]
 80016b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80016b4:	3301      	adds	r3, #1
 80016b6:	627b      	str	r3, [r7, #36]	@ 0x24
 80016b8:	683b      	ldr	r3, [r7, #0]
 80016ba:	681a      	ldr	r2, [r3, #0]
 80016bc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80016be:	fa22 f303 	lsr.w	r3, r2, r3
 80016c2:	2b00      	cmp	r3, #0
 80016c4:	f47f ae8e 	bne.w	80013e4 <HAL_GPIO_Init+0x14>
 80016c8:	bf00      	nop
 80016ca:	bf00      	nop
 80016cc:	372c      	adds	r7, #44	@ 0x2c
 80016ce:	46bd      	mov	sp, r7
 80016d0:	bc80      	pop	{r7}
 80016d2:	4770      	bx	lr
 80016d4:	40010400 	.word	0x40010400

080016d8 <HAL_GPIO_ReadPin>:
 80016d8:	b480      	push	{r7}
 80016da:	b085      	sub	sp, #20
 80016dc:	af00      	add	r7, sp, #0
 80016de:	6078      	str	r0, [r7, #4]
 80016e0:	460b      	mov	r3, r1
 80016e2:	807b      	strh	r3, [r7, #2]
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	689a      	ldr	r2, [r3, #8]
 80016e8:	887b      	ldrh	r3, [r7, #2]
 80016ea:	4013      	ands	r3, r2
 80016ec:	2b00      	cmp	r3, #0
 80016ee:	d002      	beq.n	80016f6 <HAL_GPIO_ReadPin+0x1e>
 80016f0:	2301      	movs	r3, #1
 80016f2:	73fb      	strb	r3, [r7, #15]
 80016f4:	e001      	b.n	80016fa <HAL_GPIO_ReadPin+0x22>
 80016f6:	2300      	movs	r3, #0
 80016f8:	73fb      	strb	r3, [r7, #15]
 80016fa:	7bfb      	ldrb	r3, [r7, #15]
 80016fc:	4618      	mov	r0, r3
 80016fe:	3714      	adds	r7, #20
 8001700:	46bd      	mov	sp, r7
 8001702:	bc80      	pop	{r7}
 8001704:	4770      	bx	lr

08001706 <HAL_GPIO_WritePin>:
 8001706:	b480      	push	{r7}
 8001708:	b083      	sub	sp, #12
 800170a:	af00      	add	r7, sp, #0
 800170c:	6078      	str	r0, [r7, #4]
 800170e:	460b      	mov	r3, r1
 8001710:	807b      	strh	r3, [r7, #2]
 8001712:	4613      	mov	r3, r2
 8001714:	707b      	strb	r3, [r7, #1]
 8001716:	787b      	ldrb	r3, [r7, #1]
 8001718:	2b00      	cmp	r3, #0
 800171a:	d003      	beq.n	8001724 <HAL_GPIO_WritePin+0x1e>
 800171c:	887a      	ldrh	r2, [r7, #2]
 800171e:	687b      	ldr	r3, [r7, #4]
 8001720:	611a      	str	r2, [r3, #16]
 8001722:	e003      	b.n	800172c <HAL_GPIO_WritePin+0x26>
 8001724:	887b      	ldrh	r3, [r7, #2]
 8001726:	041a      	lsls	r2, r3, #16
 8001728:	687b      	ldr	r3, [r7, #4]
 800172a:	611a      	str	r2, [r3, #16]
 800172c:	bf00      	nop
 800172e:	370c      	adds	r7, #12
 8001730:	46bd      	mov	sp, r7
 8001732:	bc80      	pop	{r7}
 8001734:	4770      	bx	lr
	...

08001738 <HAL_RCC_OscConfig>:
 8001738:	b580      	push	{r7, lr}
 800173a:	b086      	sub	sp, #24
 800173c:	af00      	add	r7, sp, #0
 800173e:	6078      	str	r0, [r7, #4]
 8001740:	687b      	ldr	r3, [r7, #4]
 8001742:	2b00      	cmp	r3, #0
 8001744:	d101      	bne.n	800174a <HAL_RCC_OscConfig+0x12>
 8001746:	2301      	movs	r3, #1
 8001748:	e272      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 800174a:	687b      	ldr	r3, [r7, #4]
 800174c:	681b      	ldr	r3, [r3, #0]
 800174e:	f003 0301 	and.w	r3, r3, #1
 8001752:	2b00      	cmp	r3, #0
 8001754:	f000 8087 	beq.w	8001866 <HAL_RCC_OscConfig+0x12e>
 8001758:	4b92      	ldr	r3, [pc, #584]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 800175a:	685b      	ldr	r3, [r3, #4]
 800175c:	f003 030c 	and.w	r3, r3, #12
 8001760:	2b04      	cmp	r3, #4
 8001762:	d00c      	beq.n	800177e <HAL_RCC_OscConfig+0x46>
 8001764:	4b8f      	ldr	r3, [pc, #572]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001766:	685b      	ldr	r3, [r3, #4]
 8001768:	f003 030c 	and.w	r3, r3, #12
 800176c:	2b08      	cmp	r3, #8
 800176e:	d112      	bne.n	8001796 <HAL_RCC_OscConfig+0x5e>
 8001770:	4b8c      	ldr	r3, [pc, #560]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001772:	685b      	ldr	r3, [r3, #4]
 8001774:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001778:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800177c:	d10b      	bne.n	8001796 <HAL_RCC_OscConfig+0x5e>
 800177e:	4b89      	ldr	r3, [pc, #548]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001780:	681b      	ldr	r3, [r3, #0]
 8001782:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001786:	2b00      	cmp	r3, #0
 8001788:	d06c      	beq.n	8001864 <HAL_RCC_OscConfig+0x12c>
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	685b      	ldr	r3, [r3, #4]
 800178e:	2b00      	cmp	r3, #0
 8001790:	d168      	bne.n	8001864 <HAL_RCC_OscConfig+0x12c>
 8001792:	2301      	movs	r3, #1
 8001794:	e24c      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	685b      	ldr	r3, [r3, #4]
 800179a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800179e:	d106      	bne.n	80017ae <HAL_RCC_OscConfig+0x76>
 80017a0:	4b80      	ldr	r3, [pc, #512]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017a2:	681b      	ldr	r3, [r3, #0]
 80017a4:	4a7f      	ldr	r2, [pc, #508]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017a6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80017aa:	6013      	str	r3, [r2, #0]
 80017ac:	e02e      	b.n	800180c <HAL_RCC_OscConfig+0xd4>
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	685b      	ldr	r3, [r3, #4]
 80017b2:	2b00      	cmp	r3, #0
 80017b4:	d10c      	bne.n	80017d0 <HAL_RCC_OscConfig+0x98>
 80017b6:	4b7b      	ldr	r3, [pc, #492]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017b8:	681b      	ldr	r3, [r3, #0]
 80017ba:	4a7a      	ldr	r2, [pc, #488]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017bc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80017c0:	6013      	str	r3, [r2, #0]
 80017c2:	4b78      	ldr	r3, [pc, #480]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	4a77      	ldr	r2, [pc, #476]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017c8:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80017cc:	6013      	str	r3, [r2, #0]
 80017ce:	e01d      	b.n	800180c <HAL_RCC_OscConfig+0xd4>
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	685b      	ldr	r3, [r3, #4]
 80017d4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80017d8:	d10c      	bne.n	80017f4 <HAL_RCC_OscConfig+0xbc>
 80017da:	4b72      	ldr	r3, [pc, #456]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	4a71      	ldr	r2, [pc, #452]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017e0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80017e4:	6013      	str	r3, [r2, #0]
 80017e6:	4b6f      	ldr	r3, [pc, #444]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	4a6e      	ldr	r2, [pc, #440]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017ec:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80017f0:	6013      	str	r3, [r2, #0]
 80017f2:	e00b      	b.n	800180c <HAL_RCC_OscConfig+0xd4>
 80017f4:	4b6b      	ldr	r3, [pc, #428]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017f6:	681b      	ldr	r3, [r3, #0]
 80017f8:	4a6a      	ldr	r2, [pc, #424]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80017fa:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80017fe:	6013      	str	r3, [r2, #0]
 8001800:	4b68      	ldr	r3, [pc, #416]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	4a67      	ldr	r2, [pc, #412]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001806:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800180a:	6013      	str	r3, [r2, #0]
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	685b      	ldr	r3, [r3, #4]
 8001810:	2b00      	cmp	r3, #0
 8001812:	d013      	beq.n	800183c <HAL_RCC_OscConfig+0x104>
 8001814:	f7ff fcc4 	bl	80011a0 <HAL_GetTick>
 8001818:	6138      	str	r0, [r7, #16]
 800181a:	e008      	b.n	800182e <HAL_RCC_OscConfig+0xf6>
 800181c:	f7ff fcc0 	bl	80011a0 <HAL_GetTick>
 8001820:	4602      	mov	r2, r0
 8001822:	693b      	ldr	r3, [r7, #16]
 8001824:	1ad3      	subs	r3, r2, r3
 8001826:	2b64      	cmp	r3, #100	@ 0x64
 8001828:	d901      	bls.n	800182e <HAL_RCC_OscConfig+0xf6>
 800182a:	2303      	movs	r3, #3
 800182c:	e200      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 800182e:	4b5d      	ldr	r3, [pc, #372]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001836:	2b00      	cmp	r3, #0
 8001838:	d0f0      	beq.n	800181c <HAL_RCC_OscConfig+0xe4>
 800183a:	e014      	b.n	8001866 <HAL_RCC_OscConfig+0x12e>
 800183c:	f7ff fcb0 	bl	80011a0 <HAL_GetTick>
 8001840:	6138      	str	r0, [r7, #16]
 8001842:	e008      	b.n	8001856 <HAL_RCC_OscConfig+0x11e>
 8001844:	f7ff fcac 	bl	80011a0 <HAL_GetTick>
 8001848:	4602      	mov	r2, r0
 800184a:	693b      	ldr	r3, [r7, #16]
 800184c:	1ad3      	subs	r3, r2, r3
 800184e:	2b64      	cmp	r3, #100	@ 0x64
 8001850:	d901      	bls.n	8001856 <HAL_RCC_OscConfig+0x11e>
 8001852:	2303      	movs	r3, #3
 8001854:	e1ec      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001856:	4b53      	ldr	r3, [pc, #332]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800185e:	2b00      	cmp	r3, #0
 8001860:	d1f0      	bne.n	8001844 <HAL_RCC_OscConfig+0x10c>
 8001862:	e000      	b.n	8001866 <HAL_RCC_OscConfig+0x12e>
 8001864:	bf00      	nop
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	f003 0302 	and.w	r3, r3, #2
 800186e:	2b00      	cmp	r3, #0
 8001870:	d063      	beq.n	800193a <HAL_RCC_OscConfig+0x202>
 8001872:	4b4c      	ldr	r3, [pc, #304]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001874:	685b      	ldr	r3, [r3, #4]
 8001876:	f003 030c 	and.w	r3, r3, #12
 800187a:	2b00      	cmp	r3, #0
 800187c:	d00b      	beq.n	8001896 <HAL_RCC_OscConfig+0x15e>
 800187e:	4b49      	ldr	r3, [pc, #292]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001880:	685b      	ldr	r3, [r3, #4]
 8001882:	f003 030c 	and.w	r3, r3, #12
 8001886:	2b08      	cmp	r3, #8
 8001888:	d11c      	bne.n	80018c4 <HAL_RCC_OscConfig+0x18c>
 800188a:	4b46      	ldr	r3, [pc, #280]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 800188c:	685b      	ldr	r3, [r3, #4]
 800188e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001892:	2b00      	cmp	r3, #0
 8001894:	d116      	bne.n	80018c4 <HAL_RCC_OscConfig+0x18c>
 8001896:	4b43      	ldr	r3, [pc, #268]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	f003 0302 	and.w	r3, r3, #2
 800189e:	2b00      	cmp	r3, #0
 80018a0:	d005      	beq.n	80018ae <HAL_RCC_OscConfig+0x176>
 80018a2:	687b      	ldr	r3, [r7, #4]
 80018a4:	691b      	ldr	r3, [r3, #16]
 80018a6:	2b01      	cmp	r3, #1
 80018a8:	d001      	beq.n	80018ae <HAL_RCC_OscConfig+0x176>
 80018aa:	2301      	movs	r3, #1
 80018ac:	e1c0      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 80018ae:	4b3d      	ldr	r3, [pc, #244]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	695b      	ldr	r3, [r3, #20]
 80018ba:	00db      	lsls	r3, r3, #3
 80018bc:	4939      	ldr	r1, [pc, #228]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80018be:	4313      	orrs	r3, r2
 80018c0:	600b      	str	r3, [r1, #0]
 80018c2:	e03a      	b.n	800193a <HAL_RCC_OscConfig+0x202>
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	691b      	ldr	r3, [r3, #16]
 80018c8:	2b00      	cmp	r3, #0
 80018ca:	d020      	beq.n	800190e <HAL_RCC_OscConfig+0x1d6>
 80018cc:	4b36      	ldr	r3, [pc, #216]	@ (80019a8 <HAL_RCC_OscConfig+0x270>)
 80018ce:	2201      	movs	r2, #1
 80018d0:	601a      	str	r2, [r3, #0]
 80018d2:	f7ff fc65 	bl	80011a0 <HAL_GetTick>
 80018d6:	6138      	str	r0, [r7, #16]
 80018d8:	e008      	b.n	80018ec <HAL_RCC_OscConfig+0x1b4>
 80018da:	f7ff fc61 	bl	80011a0 <HAL_GetTick>
 80018de:	4602      	mov	r2, r0
 80018e0:	693b      	ldr	r3, [r7, #16]
 80018e2:	1ad3      	subs	r3, r2, r3
 80018e4:	2b02      	cmp	r3, #2
 80018e6:	d901      	bls.n	80018ec <HAL_RCC_OscConfig+0x1b4>
 80018e8:	2303      	movs	r3, #3
 80018ea:	e1a1      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 80018ec:	4b2d      	ldr	r3, [pc, #180]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	f003 0302 	and.w	r3, r3, #2
 80018f4:	2b00      	cmp	r3, #0
 80018f6:	d0f0      	beq.n	80018da <HAL_RCC_OscConfig+0x1a2>
 80018f8:	4b2a      	ldr	r3, [pc, #168]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 80018fa:	681b      	ldr	r3, [r3, #0]
 80018fc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	695b      	ldr	r3, [r3, #20]
 8001904:	00db      	lsls	r3, r3, #3
 8001906:	4927      	ldr	r1, [pc, #156]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001908:	4313      	orrs	r3, r2
 800190a:	600b      	str	r3, [r1, #0]
 800190c:	e015      	b.n	800193a <HAL_RCC_OscConfig+0x202>
 800190e:	4b26      	ldr	r3, [pc, #152]	@ (80019a8 <HAL_RCC_OscConfig+0x270>)
 8001910:	2200      	movs	r2, #0
 8001912:	601a      	str	r2, [r3, #0]
 8001914:	f7ff fc44 	bl	80011a0 <HAL_GetTick>
 8001918:	6138      	str	r0, [r7, #16]
 800191a:	e008      	b.n	800192e <HAL_RCC_OscConfig+0x1f6>
 800191c:	f7ff fc40 	bl	80011a0 <HAL_GetTick>
 8001920:	4602      	mov	r2, r0
 8001922:	693b      	ldr	r3, [r7, #16]
 8001924:	1ad3      	subs	r3, r2, r3
 8001926:	2b02      	cmp	r3, #2
 8001928:	d901      	bls.n	800192e <HAL_RCC_OscConfig+0x1f6>
 800192a:	2303      	movs	r3, #3
 800192c:	e180      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 800192e:	4b1d      	ldr	r3, [pc, #116]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001930:	681b      	ldr	r3, [r3, #0]
 8001932:	f003 0302 	and.w	r3, r3, #2
 8001936:	2b00      	cmp	r3, #0
 8001938:	d1f0      	bne.n	800191c <HAL_RCC_OscConfig+0x1e4>
 800193a:	687b      	ldr	r3, [r7, #4]
 800193c:	681b      	ldr	r3, [r3, #0]
 800193e:	f003 0308 	and.w	r3, r3, #8
 8001942:	2b00      	cmp	r3, #0
 8001944:	d03a      	beq.n	80019bc <HAL_RCC_OscConfig+0x284>
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	699b      	ldr	r3, [r3, #24]
 800194a:	2b00      	cmp	r3, #0
 800194c:	d019      	beq.n	8001982 <HAL_RCC_OscConfig+0x24a>
 800194e:	4b17      	ldr	r3, [pc, #92]	@ (80019ac <HAL_RCC_OscConfig+0x274>)
 8001950:	2201      	movs	r2, #1
 8001952:	601a      	str	r2, [r3, #0]
 8001954:	f7ff fc24 	bl	80011a0 <HAL_GetTick>
 8001958:	6138      	str	r0, [r7, #16]
 800195a:	e008      	b.n	800196e <HAL_RCC_OscConfig+0x236>
 800195c:	f7ff fc20 	bl	80011a0 <HAL_GetTick>
 8001960:	4602      	mov	r2, r0
 8001962:	693b      	ldr	r3, [r7, #16]
 8001964:	1ad3      	subs	r3, r2, r3
 8001966:	2b02      	cmp	r3, #2
 8001968:	d901      	bls.n	800196e <HAL_RCC_OscConfig+0x236>
 800196a:	2303      	movs	r3, #3
 800196c:	e160      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 800196e:	4b0d      	ldr	r3, [pc, #52]	@ (80019a4 <HAL_RCC_OscConfig+0x26c>)
 8001970:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001972:	f003 0302 	and.w	r3, r3, #2
 8001976:	2b00      	cmp	r3, #0
 8001978:	d0f0      	beq.n	800195c <HAL_RCC_OscConfig+0x224>
 800197a:	2001      	movs	r0, #1
 800197c:	f000 fa9c 	bl	8001eb8 <RCC_Delay>
 8001980:	e01c      	b.n	80019bc <HAL_RCC_OscConfig+0x284>
 8001982:	4b0a      	ldr	r3, [pc, #40]	@ (80019ac <HAL_RCC_OscConfig+0x274>)
 8001984:	2200      	movs	r2, #0
 8001986:	601a      	str	r2, [r3, #0]
 8001988:	f7ff fc0a 	bl	80011a0 <HAL_GetTick>
 800198c:	6138      	str	r0, [r7, #16]
 800198e:	e00f      	b.n	80019b0 <HAL_RCC_OscConfig+0x278>
 8001990:	f7ff fc06 	bl	80011a0 <HAL_GetTick>
 8001994:	4602      	mov	r2, r0
 8001996:	693b      	ldr	r3, [r7, #16]
 8001998:	1ad3      	subs	r3, r2, r3
 800199a:	2b02      	cmp	r3, #2
 800199c:	d908      	bls.n	80019b0 <HAL_RCC_OscConfig+0x278>
 800199e:	2303      	movs	r3, #3
 80019a0:	e146      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 80019a2:	bf00      	nop
 80019a4:	40021000 	.word	0x40021000
 80019a8:	42420000 	.word	0x42420000
 80019ac:	42420480 	.word	0x42420480
 80019b0:	4b92      	ldr	r3, [pc, #584]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 80019b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80019b4:	f003 0302 	and.w	r3, r3, #2
 80019b8:	2b00      	cmp	r3, #0
 80019ba:	d1e9      	bne.n	8001990 <HAL_RCC_OscConfig+0x258>
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	681b      	ldr	r3, [r3, #0]
 80019c0:	f003 0304 	and.w	r3, r3, #4
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	f000 80a6 	beq.w	8001b16 <HAL_RCC_OscConfig+0x3de>
 80019ca:	2300      	movs	r3, #0
 80019cc:	75fb      	strb	r3, [r7, #23]
 80019ce:	4b8b      	ldr	r3, [pc, #556]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 80019d0:	69db      	ldr	r3, [r3, #28]
 80019d2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80019d6:	2b00      	cmp	r3, #0
 80019d8:	d10d      	bne.n	80019f6 <HAL_RCC_OscConfig+0x2be>
 80019da:	4b88      	ldr	r3, [pc, #544]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 80019dc:	69db      	ldr	r3, [r3, #28]
 80019de:	4a87      	ldr	r2, [pc, #540]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 80019e0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80019e4:	61d3      	str	r3, [r2, #28]
 80019e6:	4b85      	ldr	r3, [pc, #532]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 80019e8:	69db      	ldr	r3, [r3, #28]
 80019ea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80019ee:	60bb      	str	r3, [r7, #8]
 80019f0:	68bb      	ldr	r3, [r7, #8]
 80019f2:	2301      	movs	r3, #1
 80019f4:	75fb      	strb	r3, [r7, #23]
 80019f6:	4b82      	ldr	r3, [pc, #520]	@ (8001c00 <HAL_RCC_OscConfig+0x4c8>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80019fe:	2b00      	cmp	r3, #0
 8001a00:	d118      	bne.n	8001a34 <HAL_RCC_OscConfig+0x2fc>
 8001a02:	4b7f      	ldr	r3, [pc, #508]	@ (8001c00 <HAL_RCC_OscConfig+0x4c8>)
 8001a04:	681b      	ldr	r3, [r3, #0]
 8001a06:	4a7e      	ldr	r2, [pc, #504]	@ (8001c00 <HAL_RCC_OscConfig+0x4c8>)
 8001a08:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001a0c:	6013      	str	r3, [r2, #0]
 8001a0e:	f7ff fbc7 	bl	80011a0 <HAL_GetTick>
 8001a12:	6138      	str	r0, [r7, #16]
 8001a14:	e008      	b.n	8001a28 <HAL_RCC_OscConfig+0x2f0>
 8001a16:	f7ff fbc3 	bl	80011a0 <HAL_GetTick>
 8001a1a:	4602      	mov	r2, r0
 8001a1c:	693b      	ldr	r3, [r7, #16]
 8001a1e:	1ad3      	subs	r3, r2, r3
 8001a20:	2b64      	cmp	r3, #100	@ 0x64
 8001a22:	d901      	bls.n	8001a28 <HAL_RCC_OscConfig+0x2f0>
 8001a24:	2303      	movs	r3, #3
 8001a26:	e103      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001a28:	4b75      	ldr	r3, [pc, #468]	@ (8001c00 <HAL_RCC_OscConfig+0x4c8>)
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001a30:	2b00      	cmp	r3, #0
 8001a32:	d0f0      	beq.n	8001a16 <HAL_RCC_OscConfig+0x2de>
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	68db      	ldr	r3, [r3, #12]
 8001a38:	2b01      	cmp	r3, #1
 8001a3a:	d106      	bne.n	8001a4a <HAL_RCC_OscConfig+0x312>
 8001a3c:	4b6f      	ldr	r3, [pc, #444]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a3e:	6a1b      	ldr	r3, [r3, #32]
 8001a40:	4a6e      	ldr	r2, [pc, #440]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a42:	f043 0301 	orr.w	r3, r3, #1
 8001a46:	6213      	str	r3, [r2, #32]
 8001a48:	e02d      	b.n	8001aa6 <HAL_RCC_OscConfig+0x36e>
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	68db      	ldr	r3, [r3, #12]
 8001a4e:	2b00      	cmp	r3, #0
 8001a50:	d10c      	bne.n	8001a6c <HAL_RCC_OscConfig+0x334>
 8001a52:	4b6a      	ldr	r3, [pc, #424]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a54:	6a1b      	ldr	r3, [r3, #32]
 8001a56:	4a69      	ldr	r2, [pc, #420]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a58:	f023 0301 	bic.w	r3, r3, #1
 8001a5c:	6213      	str	r3, [r2, #32]
 8001a5e:	4b67      	ldr	r3, [pc, #412]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a60:	6a1b      	ldr	r3, [r3, #32]
 8001a62:	4a66      	ldr	r2, [pc, #408]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a64:	f023 0304 	bic.w	r3, r3, #4
 8001a68:	6213      	str	r3, [r2, #32]
 8001a6a:	e01c      	b.n	8001aa6 <HAL_RCC_OscConfig+0x36e>
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	68db      	ldr	r3, [r3, #12]
 8001a70:	2b05      	cmp	r3, #5
 8001a72:	d10c      	bne.n	8001a8e <HAL_RCC_OscConfig+0x356>
 8001a74:	4b61      	ldr	r3, [pc, #388]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a76:	6a1b      	ldr	r3, [r3, #32]
 8001a78:	4a60      	ldr	r2, [pc, #384]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a7a:	f043 0304 	orr.w	r3, r3, #4
 8001a7e:	6213      	str	r3, [r2, #32]
 8001a80:	4b5e      	ldr	r3, [pc, #376]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a82:	6a1b      	ldr	r3, [r3, #32]
 8001a84:	4a5d      	ldr	r2, [pc, #372]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a86:	f043 0301 	orr.w	r3, r3, #1
 8001a8a:	6213      	str	r3, [r2, #32]
 8001a8c:	e00b      	b.n	8001aa6 <HAL_RCC_OscConfig+0x36e>
 8001a8e:	4b5b      	ldr	r3, [pc, #364]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a90:	6a1b      	ldr	r3, [r3, #32]
 8001a92:	4a5a      	ldr	r2, [pc, #360]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a94:	f023 0301 	bic.w	r3, r3, #1
 8001a98:	6213      	str	r3, [r2, #32]
 8001a9a:	4b58      	ldr	r3, [pc, #352]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001a9c:	6a1b      	ldr	r3, [r3, #32]
 8001a9e:	4a57      	ldr	r2, [pc, #348]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001aa0:	f023 0304 	bic.w	r3, r3, #4
 8001aa4:	6213      	str	r3, [r2, #32]
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	68db      	ldr	r3, [r3, #12]
 8001aaa:	2b00      	cmp	r3, #0
 8001aac:	d015      	beq.n	8001ada <HAL_RCC_OscConfig+0x3a2>
 8001aae:	f7ff fb77 	bl	80011a0 <HAL_GetTick>
 8001ab2:	6138      	str	r0, [r7, #16]
 8001ab4:	e00a      	b.n	8001acc <HAL_RCC_OscConfig+0x394>
 8001ab6:	f7ff fb73 	bl	80011a0 <HAL_GetTick>
 8001aba:	4602      	mov	r2, r0
 8001abc:	693b      	ldr	r3, [r7, #16]
 8001abe:	1ad3      	subs	r3, r2, r3
 8001ac0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001ac4:	4293      	cmp	r3, r2
 8001ac6:	d901      	bls.n	8001acc <HAL_RCC_OscConfig+0x394>
 8001ac8:	2303      	movs	r3, #3
 8001aca:	e0b1      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001acc:	4b4b      	ldr	r3, [pc, #300]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001ace:	6a1b      	ldr	r3, [r3, #32]
 8001ad0:	f003 0302 	and.w	r3, r3, #2
 8001ad4:	2b00      	cmp	r3, #0
 8001ad6:	d0ee      	beq.n	8001ab6 <HAL_RCC_OscConfig+0x37e>
 8001ad8:	e014      	b.n	8001b04 <HAL_RCC_OscConfig+0x3cc>
 8001ada:	f7ff fb61 	bl	80011a0 <HAL_GetTick>
 8001ade:	6138      	str	r0, [r7, #16]
 8001ae0:	e00a      	b.n	8001af8 <HAL_RCC_OscConfig+0x3c0>
 8001ae2:	f7ff fb5d 	bl	80011a0 <HAL_GetTick>
 8001ae6:	4602      	mov	r2, r0
 8001ae8:	693b      	ldr	r3, [r7, #16]
 8001aea:	1ad3      	subs	r3, r2, r3
 8001aec:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001af0:	4293      	cmp	r3, r2
 8001af2:	d901      	bls.n	8001af8 <HAL_RCC_OscConfig+0x3c0>
 8001af4:	2303      	movs	r3, #3
 8001af6:	e09b      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001af8:	4b40      	ldr	r3, [pc, #256]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001afa:	6a1b      	ldr	r3, [r3, #32]
 8001afc:	f003 0302 	and.w	r3, r3, #2
 8001b00:	2b00      	cmp	r3, #0
 8001b02:	d1ee      	bne.n	8001ae2 <HAL_RCC_OscConfig+0x3aa>
 8001b04:	7dfb      	ldrb	r3, [r7, #23]
 8001b06:	2b01      	cmp	r3, #1
 8001b08:	d105      	bne.n	8001b16 <HAL_RCC_OscConfig+0x3de>
 8001b0a:	4b3c      	ldr	r3, [pc, #240]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b0c:	69db      	ldr	r3, [r3, #28]
 8001b0e:	4a3b      	ldr	r2, [pc, #236]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b10:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8001b14:	61d3      	str	r3, [r2, #28]
 8001b16:	687b      	ldr	r3, [r7, #4]
 8001b18:	69db      	ldr	r3, [r3, #28]
 8001b1a:	2b00      	cmp	r3, #0
 8001b1c:	f000 8087 	beq.w	8001c2e <HAL_RCC_OscConfig+0x4f6>
 8001b20:	4b36      	ldr	r3, [pc, #216]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b22:	685b      	ldr	r3, [r3, #4]
 8001b24:	f003 030c 	and.w	r3, r3, #12
 8001b28:	2b08      	cmp	r3, #8
 8001b2a:	d061      	beq.n	8001bf0 <HAL_RCC_OscConfig+0x4b8>
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	69db      	ldr	r3, [r3, #28]
 8001b30:	2b02      	cmp	r3, #2
 8001b32:	d146      	bne.n	8001bc2 <HAL_RCC_OscConfig+0x48a>
 8001b34:	4b33      	ldr	r3, [pc, #204]	@ (8001c04 <HAL_RCC_OscConfig+0x4cc>)
 8001b36:	2200      	movs	r2, #0
 8001b38:	601a      	str	r2, [r3, #0]
 8001b3a:	f7ff fb31 	bl	80011a0 <HAL_GetTick>
 8001b3e:	6138      	str	r0, [r7, #16]
 8001b40:	e008      	b.n	8001b54 <HAL_RCC_OscConfig+0x41c>
 8001b42:	f7ff fb2d 	bl	80011a0 <HAL_GetTick>
 8001b46:	4602      	mov	r2, r0
 8001b48:	693b      	ldr	r3, [r7, #16]
 8001b4a:	1ad3      	subs	r3, r2, r3
 8001b4c:	2b02      	cmp	r3, #2
 8001b4e:	d901      	bls.n	8001b54 <HAL_RCC_OscConfig+0x41c>
 8001b50:	2303      	movs	r3, #3
 8001b52:	e06d      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001b54:	4b29      	ldr	r3, [pc, #164]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	d1f0      	bne.n	8001b42 <HAL_RCC_OscConfig+0x40a>
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	6a1b      	ldr	r3, [r3, #32]
 8001b64:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001b68:	d108      	bne.n	8001b7c <HAL_RCC_OscConfig+0x444>
 8001b6a:	4b24      	ldr	r3, [pc, #144]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b6c:	685b      	ldr	r3, [r3, #4]
 8001b6e:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	689b      	ldr	r3, [r3, #8]
 8001b76:	4921      	ldr	r1, [pc, #132]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b78:	4313      	orrs	r3, r2
 8001b7a:	604b      	str	r3, [r1, #4]
 8001b7c:	4b1f      	ldr	r3, [pc, #124]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b7e:	685b      	ldr	r3, [r3, #4]
 8001b80:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	6a19      	ldr	r1, [r3, #32]
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001b8c:	430b      	orrs	r3, r1
 8001b8e:	491b      	ldr	r1, [pc, #108]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001b90:	4313      	orrs	r3, r2
 8001b92:	604b      	str	r3, [r1, #4]
 8001b94:	4b1b      	ldr	r3, [pc, #108]	@ (8001c04 <HAL_RCC_OscConfig+0x4cc>)
 8001b96:	2201      	movs	r2, #1
 8001b98:	601a      	str	r2, [r3, #0]
 8001b9a:	f7ff fb01 	bl	80011a0 <HAL_GetTick>
 8001b9e:	6138      	str	r0, [r7, #16]
 8001ba0:	e008      	b.n	8001bb4 <HAL_RCC_OscConfig+0x47c>
 8001ba2:	f7ff fafd 	bl	80011a0 <HAL_GetTick>
 8001ba6:	4602      	mov	r2, r0
 8001ba8:	693b      	ldr	r3, [r7, #16]
 8001baa:	1ad3      	subs	r3, r2, r3
 8001bac:	2b02      	cmp	r3, #2
 8001bae:	d901      	bls.n	8001bb4 <HAL_RCC_OscConfig+0x47c>
 8001bb0:	2303      	movs	r3, #3
 8001bb2:	e03d      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001bb4:	4b11      	ldr	r3, [pc, #68]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001bbc:	2b00      	cmp	r3, #0
 8001bbe:	d0f0      	beq.n	8001ba2 <HAL_RCC_OscConfig+0x46a>
 8001bc0:	e035      	b.n	8001c2e <HAL_RCC_OscConfig+0x4f6>
 8001bc2:	4b10      	ldr	r3, [pc, #64]	@ (8001c04 <HAL_RCC_OscConfig+0x4cc>)
 8001bc4:	2200      	movs	r2, #0
 8001bc6:	601a      	str	r2, [r3, #0]
 8001bc8:	f7ff faea 	bl	80011a0 <HAL_GetTick>
 8001bcc:	6138      	str	r0, [r7, #16]
 8001bce:	e008      	b.n	8001be2 <HAL_RCC_OscConfig+0x4aa>
 8001bd0:	f7ff fae6 	bl	80011a0 <HAL_GetTick>
 8001bd4:	4602      	mov	r2, r0
 8001bd6:	693b      	ldr	r3, [r7, #16]
 8001bd8:	1ad3      	subs	r3, r2, r3
 8001bda:	2b02      	cmp	r3, #2
 8001bdc:	d901      	bls.n	8001be2 <HAL_RCC_OscConfig+0x4aa>
 8001bde:	2303      	movs	r3, #3
 8001be0:	e026      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001be2:	4b06      	ldr	r3, [pc, #24]	@ (8001bfc <HAL_RCC_OscConfig+0x4c4>)
 8001be4:	681b      	ldr	r3, [r3, #0]
 8001be6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d1f0      	bne.n	8001bd0 <HAL_RCC_OscConfig+0x498>
 8001bee:	e01e      	b.n	8001c2e <HAL_RCC_OscConfig+0x4f6>
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	69db      	ldr	r3, [r3, #28]
 8001bf4:	2b01      	cmp	r3, #1
 8001bf6:	d107      	bne.n	8001c08 <HAL_RCC_OscConfig+0x4d0>
 8001bf8:	2301      	movs	r3, #1
 8001bfa:	e019      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001bfc:	40021000 	.word	0x40021000
 8001c00:	40007000 	.word	0x40007000
 8001c04:	42420060 	.word	0x42420060
 8001c08:	4b0b      	ldr	r3, [pc, #44]	@ (8001c38 <HAL_RCC_OscConfig+0x500>)
 8001c0a:	685b      	ldr	r3, [r3, #4]
 8001c0c:	60fb      	str	r3, [r7, #12]
 8001c0e:	68fb      	ldr	r3, [r7, #12]
 8001c10:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	6a1b      	ldr	r3, [r3, #32]
 8001c18:	429a      	cmp	r2, r3
 8001c1a:	d106      	bne.n	8001c2a <HAL_RCC_OscConfig+0x4f2>
 8001c1c:	68fb      	ldr	r3, [r7, #12]
 8001c1e:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001c26:	429a      	cmp	r2, r3
 8001c28:	d001      	beq.n	8001c2e <HAL_RCC_OscConfig+0x4f6>
 8001c2a:	2301      	movs	r3, #1
 8001c2c:	e000      	b.n	8001c30 <HAL_RCC_OscConfig+0x4f8>
 8001c2e:	2300      	movs	r3, #0
 8001c30:	4618      	mov	r0, r3
 8001c32:	3718      	adds	r7, #24
 8001c34:	46bd      	mov	sp, r7
 8001c36:	bd80      	pop	{r7, pc}
 8001c38:	40021000 	.word	0x40021000

08001c3c <HAL_RCC_ClockConfig>:
 8001c3c:	b580      	push	{r7, lr}
 8001c3e:	b084      	sub	sp, #16
 8001c40:	af00      	add	r7, sp, #0
 8001c42:	6078      	str	r0, [r7, #4]
 8001c44:	6039      	str	r1, [r7, #0]
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	2b00      	cmp	r3, #0
 8001c4a:	d101      	bne.n	8001c50 <HAL_RCC_ClockConfig+0x14>
 8001c4c:	2301      	movs	r3, #1
 8001c4e:	e0d0      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001c50:	4b6a      	ldr	r3, [pc, #424]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001c52:	681b      	ldr	r3, [r3, #0]
 8001c54:	f003 0307 	and.w	r3, r3, #7
 8001c58:	683a      	ldr	r2, [r7, #0]
 8001c5a:	429a      	cmp	r2, r3
 8001c5c:	d910      	bls.n	8001c80 <HAL_RCC_ClockConfig+0x44>
 8001c5e:	4b67      	ldr	r3, [pc, #412]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001c60:	681b      	ldr	r3, [r3, #0]
 8001c62:	f023 0207 	bic.w	r2, r3, #7
 8001c66:	4965      	ldr	r1, [pc, #404]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001c68:	683b      	ldr	r3, [r7, #0]
 8001c6a:	4313      	orrs	r3, r2
 8001c6c:	600b      	str	r3, [r1, #0]
 8001c6e:	4b63      	ldr	r3, [pc, #396]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	f003 0307 	and.w	r3, r3, #7
 8001c76:	683a      	ldr	r2, [r7, #0]
 8001c78:	429a      	cmp	r2, r3
 8001c7a:	d001      	beq.n	8001c80 <HAL_RCC_ClockConfig+0x44>
 8001c7c:	2301      	movs	r3, #1
 8001c7e:	e0b8      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	f003 0302 	and.w	r3, r3, #2
 8001c88:	2b00      	cmp	r3, #0
 8001c8a:	d020      	beq.n	8001cce <HAL_RCC_ClockConfig+0x92>
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	f003 0304 	and.w	r3, r3, #4
 8001c94:	2b00      	cmp	r3, #0
 8001c96:	d005      	beq.n	8001ca4 <HAL_RCC_ClockConfig+0x68>
 8001c98:	4b59      	ldr	r3, [pc, #356]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001c9a:	685b      	ldr	r3, [r3, #4]
 8001c9c:	4a58      	ldr	r2, [pc, #352]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001c9e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8001ca2:	6053      	str	r3, [r2, #4]
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	f003 0308 	and.w	r3, r3, #8
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	d005      	beq.n	8001cbc <HAL_RCC_ClockConfig+0x80>
 8001cb0:	4b53      	ldr	r3, [pc, #332]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001cb2:	685b      	ldr	r3, [r3, #4]
 8001cb4:	4a52      	ldr	r2, [pc, #328]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001cb6:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8001cba:	6053      	str	r3, [r2, #4]
 8001cbc:	4b50      	ldr	r3, [pc, #320]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001cbe:	685b      	ldr	r3, [r3, #4]
 8001cc0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	689b      	ldr	r3, [r3, #8]
 8001cc8:	494d      	ldr	r1, [pc, #308]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001cca:	4313      	orrs	r3, r2
 8001ccc:	604b      	str	r3, [r1, #4]
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	f003 0301 	and.w	r3, r3, #1
 8001cd6:	2b00      	cmp	r3, #0
 8001cd8:	d040      	beq.n	8001d5c <HAL_RCC_ClockConfig+0x120>
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	685b      	ldr	r3, [r3, #4]
 8001cde:	2b01      	cmp	r3, #1
 8001ce0:	d107      	bne.n	8001cf2 <HAL_RCC_ClockConfig+0xb6>
 8001ce2:	4b47      	ldr	r3, [pc, #284]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001ce4:	681b      	ldr	r3, [r3, #0]
 8001ce6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001cea:	2b00      	cmp	r3, #0
 8001cec:	d115      	bne.n	8001d1a <HAL_RCC_ClockConfig+0xde>
 8001cee:	2301      	movs	r3, #1
 8001cf0:	e07f      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	685b      	ldr	r3, [r3, #4]
 8001cf6:	2b02      	cmp	r3, #2
 8001cf8:	d107      	bne.n	8001d0a <HAL_RCC_ClockConfig+0xce>
 8001cfa:	4b41      	ldr	r3, [pc, #260]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	d109      	bne.n	8001d1a <HAL_RCC_ClockConfig+0xde>
 8001d06:	2301      	movs	r3, #1
 8001d08:	e073      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001d0a:	4b3d      	ldr	r3, [pc, #244]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	f003 0302 	and.w	r3, r3, #2
 8001d12:	2b00      	cmp	r3, #0
 8001d14:	d101      	bne.n	8001d1a <HAL_RCC_ClockConfig+0xde>
 8001d16:	2301      	movs	r3, #1
 8001d18:	e06b      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001d1a:	4b39      	ldr	r3, [pc, #228]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001d1c:	685b      	ldr	r3, [r3, #4]
 8001d1e:	f023 0203 	bic.w	r2, r3, #3
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	685b      	ldr	r3, [r3, #4]
 8001d26:	4936      	ldr	r1, [pc, #216]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001d28:	4313      	orrs	r3, r2
 8001d2a:	604b      	str	r3, [r1, #4]
 8001d2c:	f7ff fa38 	bl	80011a0 <HAL_GetTick>
 8001d30:	60f8      	str	r0, [r7, #12]
 8001d32:	e00a      	b.n	8001d4a <HAL_RCC_ClockConfig+0x10e>
 8001d34:	f7ff fa34 	bl	80011a0 <HAL_GetTick>
 8001d38:	4602      	mov	r2, r0
 8001d3a:	68fb      	ldr	r3, [r7, #12]
 8001d3c:	1ad3      	subs	r3, r2, r3
 8001d3e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001d42:	4293      	cmp	r3, r2
 8001d44:	d901      	bls.n	8001d4a <HAL_RCC_ClockConfig+0x10e>
 8001d46:	2303      	movs	r3, #3
 8001d48:	e053      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001d4a:	4b2d      	ldr	r3, [pc, #180]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001d4c:	685b      	ldr	r3, [r3, #4]
 8001d4e:	f003 020c 	and.w	r2, r3, #12
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	685b      	ldr	r3, [r3, #4]
 8001d56:	009b      	lsls	r3, r3, #2
 8001d58:	429a      	cmp	r2, r3
 8001d5a:	d1eb      	bne.n	8001d34 <HAL_RCC_ClockConfig+0xf8>
 8001d5c:	4b27      	ldr	r3, [pc, #156]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	f003 0307 	and.w	r3, r3, #7
 8001d64:	683a      	ldr	r2, [r7, #0]
 8001d66:	429a      	cmp	r2, r3
 8001d68:	d210      	bcs.n	8001d8c <HAL_RCC_ClockConfig+0x150>
 8001d6a:	4b24      	ldr	r3, [pc, #144]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	f023 0207 	bic.w	r2, r3, #7
 8001d72:	4922      	ldr	r1, [pc, #136]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001d74:	683b      	ldr	r3, [r7, #0]
 8001d76:	4313      	orrs	r3, r2
 8001d78:	600b      	str	r3, [r1, #0]
 8001d7a:	4b20      	ldr	r3, [pc, #128]	@ (8001dfc <HAL_RCC_ClockConfig+0x1c0>)
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	f003 0307 	and.w	r3, r3, #7
 8001d82:	683a      	ldr	r2, [r7, #0]
 8001d84:	429a      	cmp	r2, r3
 8001d86:	d001      	beq.n	8001d8c <HAL_RCC_ClockConfig+0x150>
 8001d88:	2301      	movs	r3, #1
 8001d8a:	e032      	b.n	8001df2 <HAL_RCC_ClockConfig+0x1b6>
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	f003 0304 	and.w	r3, r3, #4
 8001d94:	2b00      	cmp	r3, #0
 8001d96:	d008      	beq.n	8001daa <HAL_RCC_ClockConfig+0x16e>
 8001d98:	4b19      	ldr	r3, [pc, #100]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001d9a:	685b      	ldr	r3, [r3, #4]
 8001d9c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	68db      	ldr	r3, [r3, #12]
 8001da4:	4916      	ldr	r1, [pc, #88]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001da6:	4313      	orrs	r3, r2
 8001da8:	604b      	str	r3, [r1, #4]
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	681b      	ldr	r3, [r3, #0]
 8001dae:	f003 0308 	and.w	r3, r3, #8
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	d009      	beq.n	8001dca <HAL_RCC_ClockConfig+0x18e>
 8001db6:	4b12      	ldr	r3, [pc, #72]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001db8:	685b      	ldr	r3, [r3, #4]
 8001dba:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	691b      	ldr	r3, [r3, #16]
 8001dc2:	00db      	lsls	r3, r3, #3
 8001dc4:	490e      	ldr	r1, [pc, #56]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001dc6:	4313      	orrs	r3, r2
 8001dc8:	604b      	str	r3, [r1, #4]
 8001dca:	f000 f821 	bl	8001e10 <HAL_RCC_GetSysClockFreq>
 8001dce:	4602      	mov	r2, r0
 8001dd0:	4b0b      	ldr	r3, [pc, #44]	@ (8001e00 <HAL_RCC_ClockConfig+0x1c4>)
 8001dd2:	685b      	ldr	r3, [r3, #4]
 8001dd4:	091b      	lsrs	r3, r3, #4
 8001dd6:	f003 030f 	and.w	r3, r3, #15
 8001dda:	490a      	ldr	r1, [pc, #40]	@ (8001e04 <HAL_RCC_ClockConfig+0x1c8>)
 8001ddc:	5ccb      	ldrb	r3, [r1, r3]
 8001dde:	fa22 f303 	lsr.w	r3, r2, r3
 8001de2:	4a09      	ldr	r2, [pc, #36]	@ (8001e08 <HAL_RCC_ClockConfig+0x1cc>)
 8001de4:	6013      	str	r3, [r2, #0]
 8001de6:	4b09      	ldr	r3, [pc, #36]	@ (8001e0c <HAL_RCC_ClockConfig+0x1d0>)
 8001de8:	681b      	ldr	r3, [r3, #0]
 8001dea:	4618      	mov	r0, r3
 8001dec:	f7ff f996 	bl	800111c <HAL_InitTick>
 8001df0:	2300      	movs	r3, #0
 8001df2:	4618      	mov	r0, r3
 8001df4:	3710      	adds	r7, #16
 8001df6:	46bd      	mov	sp, r7
 8001df8:	bd80      	pop	{r7, pc}
 8001dfa:	bf00      	nop
 8001dfc:	40022000 	.word	0x40022000
 8001e00:	40021000 	.word	0x40021000
 8001e04:	08002c50 	.word	0x08002c50
 8001e08:	20000030 	.word	0x20000030
 8001e0c:	20000034 	.word	0x20000034

08001e10 <HAL_RCC_GetSysClockFreq>:
 8001e10:	b480      	push	{r7}
 8001e12:	b087      	sub	sp, #28
 8001e14:	af00      	add	r7, sp, #0
 8001e16:	2300      	movs	r3, #0
 8001e18:	60fb      	str	r3, [r7, #12]
 8001e1a:	2300      	movs	r3, #0
 8001e1c:	60bb      	str	r3, [r7, #8]
 8001e1e:	2300      	movs	r3, #0
 8001e20:	617b      	str	r3, [r7, #20]
 8001e22:	2300      	movs	r3, #0
 8001e24:	607b      	str	r3, [r7, #4]
 8001e26:	2300      	movs	r3, #0
 8001e28:	613b      	str	r3, [r7, #16]
 8001e2a:	4b1e      	ldr	r3, [pc, #120]	@ (8001ea4 <HAL_RCC_GetSysClockFreq+0x94>)
 8001e2c:	685b      	ldr	r3, [r3, #4]
 8001e2e:	60fb      	str	r3, [r7, #12]
 8001e30:	68fb      	ldr	r3, [r7, #12]
 8001e32:	f003 030c 	and.w	r3, r3, #12
 8001e36:	2b04      	cmp	r3, #4
 8001e38:	d002      	beq.n	8001e40 <HAL_RCC_GetSysClockFreq+0x30>
 8001e3a:	2b08      	cmp	r3, #8
 8001e3c:	d003      	beq.n	8001e46 <HAL_RCC_GetSysClockFreq+0x36>
 8001e3e:	e027      	b.n	8001e90 <HAL_RCC_GetSysClockFreq+0x80>
 8001e40:	4b19      	ldr	r3, [pc, #100]	@ (8001ea8 <HAL_RCC_GetSysClockFreq+0x98>)
 8001e42:	613b      	str	r3, [r7, #16]
 8001e44:	e027      	b.n	8001e96 <HAL_RCC_GetSysClockFreq+0x86>
 8001e46:	68fb      	ldr	r3, [r7, #12]
 8001e48:	0c9b      	lsrs	r3, r3, #18
 8001e4a:	f003 030f 	and.w	r3, r3, #15
 8001e4e:	4a17      	ldr	r2, [pc, #92]	@ (8001eac <HAL_RCC_GetSysClockFreq+0x9c>)
 8001e50:	5cd3      	ldrb	r3, [r2, r3]
 8001e52:	607b      	str	r3, [r7, #4]
 8001e54:	68fb      	ldr	r3, [r7, #12]
 8001e56:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001e5a:	2b00      	cmp	r3, #0
 8001e5c:	d010      	beq.n	8001e80 <HAL_RCC_GetSysClockFreq+0x70>
 8001e5e:	4b11      	ldr	r3, [pc, #68]	@ (8001ea4 <HAL_RCC_GetSysClockFreq+0x94>)
 8001e60:	685b      	ldr	r3, [r3, #4]
 8001e62:	0c5b      	lsrs	r3, r3, #17
 8001e64:	f003 0301 	and.w	r3, r3, #1
 8001e68:	4a11      	ldr	r2, [pc, #68]	@ (8001eb0 <HAL_RCC_GetSysClockFreq+0xa0>)
 8001e6a:	5cd3      	ldrb	r3, [r2, r3]
 8001e6c:	60bb      	str	r3, [r7, #8]
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	4a0d      	ldr	r2, [pc, #52]	@ (8001ea8 <HAL_RCC_GetSysClockFreq+0x98>)
 8001e72:	fb03 f202 	mul.w	r2, r3, r2
 8001e76:	68bb      	ldr	r3, [r7, #8]
 8001e78:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e7c:	617b      	str	r3, [r7, #20]
 8001e7e:	e004      	b.n	8001e8a <HAL_RCC_GetSysClockFreq+0x7a>
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	4a0c      	ldr	r2, [pc, #48]	@ (8001eb4 <HAL_RCC_GetSysClockFreq+0xa4>)
 8001e84:	fb02 f303 	mul.w	r3, r2, r3
 8001e88:	617b      	str	r3, [r7, #20]
 8001e8a:	697b      	ldr	r3, [r7, #20]
 8001e8c:	613b      	str	r3, [r7, #16]
 8001e8e:	e002      	b.n	8001e96 <HAL_RCC_GetSysClockFreq+0x86>
 8001e90:	4b05      	ldr	r3, [pc, #20]	@ (8001ea8 <HAL_RCC_GetSysClockFreq+0x98>)
 8001e92:	613b      	str	r3, [r7, #16]
 8001e94:	bf00      	nop
 8001e96:	693b      	ldr	r3, [r7, #16]
 8001e98:	4618      	mov	r0, r3
 8001e9a:	371c      	adds	r7, #28
 8001e9c:	46bd      	mov	sp, r7
 8001e9e:	bc80      	pop	{r7}
 8001ea0:	4770      	bx	lr
 8001ea2:	bf00      	nop
 8001ea4:	40021000 	.word	0x40021000
 8001ea8:	007a1200 	.word	0x007a1200
 8001eac:	08002c60 	.word	0x08002c60
 8001eb0:	08002c70 	.word	0x08002c70
 8001eb4:	003d0900 	.word	0x003d0900

08001eb8 <RCC_Delay>:
 8001eb8:	b480      	push	{r7}
 8001eba:	b085      	sub	sp, #20
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	6078      	str	r0, [r7, #4]
 8001ec0:	4b0a      	ldr	r3, [pc, #40]	@ (8001eec <RCC_Delay+0x34>)
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	4a0a      	ldr	r2, [pc, #40]	@ (8001ef0 <RCC_Delay+0x38>)
 8001ec6:	fba2 2303 	umull	r2, r3, r2, r3
 8001eca:	0a5b      	lsrs	r3, r3, #9
 8001ecc:	687a      	ldr	r2, [r7, #4]
 8001ece:	fb02 f303 	mul.w	r3, r2, r3
 8001ed2:	60fb      	str	r3, [r7, #12]
 8001ed4:	bf00      	nop
 8001ed6:	68fb      	ldr	r3, [r7, #12]
 8001ed8:	1e5a      	subs	r2, r3, #1
 8001eda:	60fa      	str	r2, [r7, #12]
 8001edc:	2b00      	cmp	r3, #0
 8001ede:	d1f9      	bne.n	8001ed4 <RCC_Delay+0x1c>
 8001ee0:	bf00      	nop
 8001ee2:	bf00      	nop
 8001ee4:	3714      	adds	r7, #20
 8001ee6:	46bd      	mov	sp, r7
 8001ee8:	bc80      	pop	{r7}
 8001eea:	4770      	bx	lr
 8001eec:	20000030 	.word	0x20000030
 8001ef0:	10624dd3 	.word	0x10624dd3

08001ef4 <HAL_SPI_Init>:
 8001ef4:	b580      	push	{r7, lr}
 8001ef6:	b082      	sub	sp, #8
 8001ef8:	af00      	add	r7, sp, #0
 8001efa:	6078      	str	r0, [r7, #4]
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	2b00      	cmp	r3, #0
 8001f00:	d101      	bne.n	8001f06 <HAL_SPI_Init+0x12>
 8001f02:	2301      	movs	r3, #1
 8001f04:	e076      	b.n	8001ff4 <HAL_SPI_Init+0x100>
 8001f06:	687b      	ldr	r3, [r7, #4]
 8001f08:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	d108      	bne.n	8001f20 <HAL_SPI_Init+0x2c>
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	685b      	ldr	r3, [r3, #4]
 8001f12:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8001f16:	d009      	beq.n	8001f2c <HAL_SPI_Init+0x38>
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	2200      	movs	r2, #0
 8001f1c:	61da      	str	r2, [r3, #28]
 8001f1e:	e005      	b.n	8001f2c <HAL_SPI_Init+0x38>
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	2200      	movs	r2, #0
 8001f24:	611a      	str	r2, [r3, #16]
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	2200      	movs	r2, #0
 8001f2a:	615a      	str	r2, [r3, #20]
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	2200      	movs	r2, #0
 8001f30:	629a      	str	r2, [r3, #40]	@ 0x28
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8001f38:	b2db      	uxtb	r3, r3
 8001f3a:	2b00      	cmp	r3, #0
 8001f3c:	d106      	bne.n	8001f4c <HAL_SPI_Init+0x58>
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	2200      	movs	r2, #0
 8001f42:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8001f46:	6878      	ldr	r0, [r7, #4]
 8001f48:	f7fe ff96 	bl	8000e78 <HAL_SPI_MspInit>
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	2202      	movs	r2, #2
 8001f50:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8001f54:	687b      	ldr	r3, [r7, #4]
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	681a      	ldr	r2, [r3, #0]
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	681b      	ldr	r3, [r3, #0]
 8001f5e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8001f62:	601a      	str	r2, [r3, #0]
 8001f64:	687b      	ldr	r3, [r7, #4]
 8001f66:	685b      	ldr	r3, [r3, #4]
 8001f68:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8001f6c:	687b      	ldr	r3, [r7, #4]
 8001f6e:	689b      	ldr	r3, [r3, #8]
 8001f70:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8001f74:	431a      	orrs	r2, r3
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	68db      	ldr	r3, [r3, #12]
 8001f7a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001f7e:	431a      	orrs	r2, r3
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	691b      	ldr	r3, [r3, #16]
 8001f84:	f003 0302 	and.w	r3, r3, #2
 8001f88:	431a      	orrs	r2, r3
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	695b      	ldr	r3, [r3, #20]
 8001f8e:	f003 0301 	and.w	r3, r3, #1
 8001f92:	431a      	orrs	r2, r3
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	699b      	ldr	r3, [r3, #24]
 8001f98:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001f9c:	431a      	orrs	r2, r3
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	69db      	ldr	r3, [r3, #28]
 8001fa2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8001fa6:	431a      	orrs	r2, r3
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	6a1b      	ldr	r3, [r3, #32]
 8001fac:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001fb0:	ea42 0103 	orr.w	r1, r2, r3
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001fb8:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	430a      	orrs	r2, r1
 8001fc2:	601a      	str	r2, [r3, #0]
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	699b      	ldr	r3, [r3, #24]
 8001fc8:	0c1a      	lsrs	r2, r3, #16
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	f002 0204 	and.w	r2, r2, #4
 8001fd2:	605a      	str	r2, [r3, #4]
 8001fd4:	687b      	ldr	r3, [r7, #4]
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	69da      	ldr	r2, [r3, #28]
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001fe2:	61da      	str	r2, [r3, #28]
 8001fe4:	687b      	ldr	r3, [r7, #4]
 8001fe6:	2200      	movs	r2, #0
 8001fe8:	655a      	str	r2, [r3, #84]	@ 0x54
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	2201      	movs	r2, #1
 8001fee:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	4618      	mov	r0, r3
 8001ff6:	3708      	adds	r7, #8
 8001ff8:	46bd      	mov	sp, r7
 8001ffa:	bd80      	pop	{r7, pc}

08001ffc <HAL_SPI_Transmit>:
 8001ffc:	b580      	push	{r7, lr}
 8001ffe:	b088      	sub	sp, #32
 8002000:	af00      	add	r7, sp, #0
 8002002:	60f8      	str	r0, [r7, #12]
 8002004:	60b9      	str	r1, [r7, #8]
 8002006:	603b      	str	r3, [r7, #0]
 8002008:	4613      	mov	r3, r2
 800200a:	80fb      	strh	r3, [r7, #6]
 800200c:	2300      	movs	r3, #0
 800200e:	77fb      	strb	r3, [r7, #31]
 8002010:	68fb      	ldr	r3, [r7, #12]
 8002012:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8002016:	2b01      	cmp	r3, #1
 8002018:	d101      	bne.n	800201e <HAL_SPI_Transmit+0x22>
 800201a:	2302      	movs	r3, #2
 800201c:	e12d      	b.n	800227a <HAL_SPI_Transmit+0x27e>
 800201e:	68fb      	ldr	r3, [r7, #12]
 8002020:	2201      	movs	r2, #1
 8002022:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002026:	f7ff f8bb 	bl	80011a0 <HAL_GetTick>
 800202a:	61b8      	str	r0, [r7, #24]
 800202c:	88fb      	ldrh	r3, [r7, #6]
 800202e:	82fb      	strh	r3, [r7, #22]
 8002030:	68fb      	ldr	r3, [r7, #12]
 8002032:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8002036:	b2db      	uxtb	r3, r3
 8002038:	2b01      	cmp	r3, #1
 800203a:	d002      	beq.n	8002042 <HAL_SPI_Transmit+0x46>
 800203c:	2302      	movs	r3, #2
 800203e:	77fb      	strb	r3, [r7, #31]
 8002040:	e116      	b.n	8002270 <HAL_SPI_Transmit+0x274>
 8002042:	68bb      	ldr	r3, [r7, #8]
 8002044:	2b00      	cmp	r3, #0
 8002046:	d002      	beq.n	800204e <HAL_SPI_Transmit+0x52>
 8002048:	88fb      	ldrh	r3, [r7, #6]
 800204a:	2b00      	cmp	r3, #0
 800204c:	d102      	bne.n	8002054 <HAL_SPI_Transmit+0x58>
 800204e:	2301      	movs	r3, #1
 8002050:	77fb      	strb	r3, [r7, #31]
 8002052:	e10d      	b.n	8002270 <HAL_SPI_Transmit+0x274>
 8002054:	68fb      	ldr	r3, [r7, #12]
 8002056:	2203      	movs	r2, #3
 8002058:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800205c:	68fb      	ldr	r3, [r7, #12]
 800205e:	2200      	movs	r2, #0
 8002060:	655a      	str	r2, [r3, #84]	@ 0x54
 8002062:	68fb      	ldr	r3, [r7, #12]
 8002064:	68ba      	ldr	r2, [r7, #8]
 8002066:	631a      	str	r2, [r3, #48]	@ 0x30
 8002068:	68fb      	ldr	r3, [r7, #12]
 800206a:	88fa      	ldrh	r2, [r7, #6]
 800206c:	869a      	strh	r2, [r3, #52]	@ 0x34
 800206e:	68fb      	ldr	r3, [r7, #12]
 8002070:	88fa      	ldrh	r2, [r7, #6]
 8002072:	86da      	strh	r2, [r3, #54]	@ 0x36
 8002074:	68fb      	ldr	r3, [r7, #12]
 8002076:	2200      	movs	r2, #0
 8002078:	639a      	str	r2, [r3, #56]	@ 0x38
 800207a:	68fb      	ldr	r3, [r7, #12]
 800207c:	2200      	movs	r2, #0
 800207e:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8002080:	68fb      	ldr	r3, [r7, #12]
 8002082:	2200      	movs	r2, #0
 8002084:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8002086:	68fb      	ldr	r3, [r7, #12]
 8002088:	2200      	movs	r2, #0
 800208a:	645a      	str	r2, [r3, #68]	@ 0x44
 800208c:	68fb      	ldr	r3, [r7, #12]
 800208e:	2200      	movs	r2, #0
 8002090:	641a      	str	r2, [r3, #64]	@ 0x40
 8002092:	68fb      	ldr	r3, [r7, #12]
 8002094:	689b      	ldr	r3, [r3, #8]
 8002096:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800209a:	d10f      	bne.n	80020bc <HAL_SPI_Transmit+0xc0>
 800209c:	68fb      	ldr	r3, [r7, #12]
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	681a      	ldr	r2, [r3, #0]
 80020a2:	68fb      	ldr	r3, [r7, #12]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80020aa:	601a      	str	r2, [r3, #0]
 80020ac:	68fb      	ldr	r3, [r7, #12]
 80020ae:	681b      	ldr	r3, [r3, #0]
 80020b0:	681a      	ldr	r2, [r3, #0]
 80020b2:	68fb      	ldr	r3, [r7, #12]
 80020b4:	681b      	ldr	r3, [r3, #0]
 80020b6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80020ba:	601a      	str	r2, [r3, #0]
 80020bc:	68fb      	ldr	r3, [r7, #12]
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80020c6:	2b40      	cmp	r3, #64	@ 0x40
 80020c8:	d007      	beq.n	80020da <HAL_SPI_Transmit+0xde>
 80020ca:	68fb      	ldr	r3, [r7, #12]
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	681a      	ldr	r2, [r3, #0]
 80020d0:	68fb      	ldr	r3, [r7, #12]
 80020d2:	681b      	ldr	r3, [r3, #0]
 80020d4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80020d8:	601a      	str	r2, [r3, #0]
 80020da:	68fb      	ldr	r3, [r7, #12]
 80020dc:	68db      	ldr	r3, [r3, #12]
 80020de:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80020e2:	d14f      	bne.n	8002184 <HAL_SPI_Transmit+0x188>
 80020e4:	68fb      	ldr	r3, [r7, #12]
 80020e6:	685b      	ldr	r3, [r3, #4]
 80020e8:	2b00      	cmp	r3, #0
 80020ea:	d002      	beq.n	80020f2 <HAL_SPI_Transmit+0xf6>
 80020ec:	8afb      	ldrh	r3, [r7, #22]
 80020ee:	2b01      	cmp	r3, #1
 80020f0:	d142      	bne.n	8002178 <HAL_SPI_Transmit+0x17c>
 80020f2:	68fb      	ldr	r3, [r7, #12]
 80020f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020f6:	881a      	ldrh	r2, [r3, #0]
 80020f8:	68fb      	ldr	r3, [r7, #12]
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	60da      	str	r2, [r3, #12]
 80020fe:	68fb      	ldr	r3, [r7, #12]
 8002100:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002102:	1c9a      	adds	r2, r3, #2
 8002104:	68fb      	ldr	r3, [r7, #12]
 8002106:	631a      	str	r2, [r3, #48]	@ 0x30
 8002108:	68fb      	ldr	r3, [r7, #12]
 800210a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800210c:	b29b      	uxth	r3, r3
 800210e:	3b01      	subs	r3, #1
 8002110:	b29a      	uxth	r2, r3
 8002112:	68fb      	ldr	r3, [r7, #12]
 8002114:	86da      	strh	r2, [r3, #54]	@ 0x36
 8002116:	e02f      	b.n	8002178 <HAL_SPI_Transmit+0x17c>
 8002118:	68fb      	ldr	r3, [r7, #12]
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	689b      	ldr	r3, [r3, #8]
 800211e:	f003 0302 	and.w	r3, r3, #2
 8002122:	2b02      	cmp	r3, #2
 8002124:	d112      	bne.n	800214c <HAL_SPI_Transmit+0x150>
 8002126:	68fb      	ldr	r3, [r7, #12]
 8002128:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800212a:	881a      	ldrh	r2, [r3, #0]
 800212c:	68fb      	ldr	r3, [r7, #12]
 800212e:	681b      	ldr	r3, [r3, #0]
 8002130:	60da      	str	r2, [r3, #12]
 8002132:	68fb      	ldr	r3, [r7, #12]
 8002134:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002136:	1c9a      	adds	r2, r3, #2
 8002138:	68fb      	ldr	r3, [r7, #12]
 800213a:	631a      	str	r2, [r3, #48]	@ 0x30
 800213c:	68fb      	ldr	r3, [r7, #12]
 800213e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8002140:	b29b      	uxth	r3, r3
 8002142:	3b01      	subs	r3, #1
 8002144:	b29a      	uxth	r2, r3
 8002146:	68fb      	ldr	r3, [r7, #12]
 8002148:	86da      	strh	r2, [r3, #54]	@ 0x36
 800214a:	e015      	b.n	8002178 <HAL_SPI_Transmit+0x17c>
 800214c:	f7ff f828 	bl	80011a0 <HAL_GetTick>
 8002150:	4602      	mov	r2, r0
 8002152:	69bb      	ldr	r3, [r7, #24]
 8002154:	1ad3      	subs	r3, r2, r3
 8002156:	683a      	ldr	r2, [r7, #0]
 8002158:	429a      	cmp	r2, r3
 800215a:	d803      	bhi.n	8002164 <HAL_SPI_Transmit+0x168>
 800215c:	683b      	ldr	r3, [r7, #0]
 800215e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002162:	d102      	bne.n	800216a <HAL_SPI_Transmit+0x16e>
 8002164:	683b      	ldr	r3, [r7, #0]
 8002166:	2b00      	cmp	r3, #0
 8002168:	d106      	bne.n	8002178 <HAL_SPI_Transmit+0x17c>
 800216a:	2303      	movs	r3, #3
 800216c:	77fb      	strb	r3, [r7, #31]
 800216e:	68fb      	ldr	r3, [r7, #12]
 8002170:	2201      	movs	r2, #1
 8002172:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8002176:	e07b      	b.n	8002270 <HAL_SPI_Transmit+0x274>
 8002178:	68fb      	ldr	r3, [r7, #12]
 800217a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800217c:	b29b      	uxth	r3, r3
 800217e:	2b00      	cmp	r3, #0
 8002180:	d1ca      	bne.n	8002118 <HAL_SPI_Transmit+0x11c>
 8002182:	e050      	b.n	8002226 <HAL_SPI_Transmit+0x22a>
 8002184:	68fb      	ldr	r3, [r7, #12]
 8002186:	685b      	ldr	r3, [r3, #4]
 8002188:	2b00      	cmp	r3, #0
 800218a:	d002      	beq.n	8002192 <HAL_SPI_Transmit+0x196>
 800218c:	8afb      	ldrh	r3, [r7, #22]
 800218e:	2b01      	cmp	r3, #1
 8002190:	d144      	bne.n	800221c <HAL_SPI_Transmit+0x220>
 8002192:	68fb      	ldr	r3, [r7, #12]
 8002194:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002196:	68fb      	ldr	r3, [r7, #12]
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	330c      	adds	r3, #12
 800219c:	7812      	ldrb	r2, [r2, #0]
 800219e:	701a      	strb	r2, [r3, #0]
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021a4:	1c5a      	adds	r2, r3, #1
 80021a6:	68fb      	ldr	r3, [r7, #12]
 80021a8:	631a      	str	r2, [r3, #48]	@ 0x30
 80021aa:	68fb      	ldr	r3, [r7, #12]
 80021ac:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80021ae:	b29b      	uxth	r3, r3
 80021b0:	3b01      	subs	r3, #1
 80021b2:	b29a      	uxth	r2, r3
 80021b4:	68fb      	ldr	r3, [r7, #12]
 80021b6:	86da      	strh	r2, [r3, #54]	@ 0x36
 80021b8:	e030      	b.n	800221c <HAL_SPI_Transmit+0x220>
 80021ba:	68fb      	ldr	r3, [r7, #12]
 80021bc:	681b      	ldr	r3, [r3, #0]
 80021be:	689b      	ldr	r3, [r3, #8]
 80021c0:	f003 0302 	and.w	r3, r3, #2
 80021c4:	2b02      	cmp	r3, #2
 80021c6:	d113      	bne.n	80021f0 <HAL_SPI_Transmit+0x1f4>
 80021c8:	68fb      	ldr	r3, [r7, #12]
 80021ca:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80021cc:	68fb      	ldr	r3, [r7, #12]
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	330c      	adds	r3, #12
 80021d2:	7812      	ldrb	r2, [r2, #0]
 80021d4:	701a      	strb	r2, [r3, #0]
 80021d6:	68fb      	ldr	r3, [r7, #12]
 80021d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021da:	1c5a      	adds	r2, r3, #1
 80021dc:	68fb      	ldr	r3, [r7, #12]
 80021de:	631a      	str	r2, [r3, #48]	@ 0x30
 80021e0:	68fb      	ldr	r3, [r7, #12]
 80021e2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80021e4:	b29b      	uxth	r3, r3
 80021e6:	3b01      	subs	r3, #1
 80021e8:	b29a      	uxth	r2, r3
 80021ea:	68fb      	ldr	r3, [r7, #12]
 80021ec:	86da      	strh	r2, [r3, #54]	@ 0x36
 80021ee:	e015      	b.n	800221c <HAL_SPI_Transmit+0x220>
 80021f0:	f7fe ffd6 	bl	80011a0 <HAL_GetTick>
 80021f4:	4602      	mov	r2, r0
 80021f6:	69bb      	ldr	r3, [r7, #24]
 80021f8:	1ad3      	subs	r3, r2, r3
 80021fa:	683a      	ldr	r2, [r7, #0]
 80021fc:	429a      	cmp	r2, r3
 80021fe:	d803      	bhi.n	8002208 <HAL_SPI_Transmit+0x20c>
 8002200:	683b      	ldr	r3, [r7, #0]
 8002202:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002206:	d102      	bne.n	800220e <HAL_SPI_Transmit+0x212>
 8002208:	683b      	ldr	r3, [r7, #0]
 800220a:	2b00      	cmp	r3, #0
 800220c:	d106      	bne.n	800221c <HAL_SPI_Transmit+0x220>
 800220e:	2303      	movs	r3, #3
 8002210:	77fb      	strb	r3, [r7, #31]
 8002212:	68fb      	ldr	r3, [r7, #12]
 8002214:	2201      	movs	r2, #1
 8002216:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800221a:	e029      	b.n	8002270 <HAL_SPI_Transmit+0x274>
 800221c:	68fb      	ldr	r3, [r7, #12]
 800221e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8002220:	b29b      	uxth	r3, r3
 8002222:	2b00      	cmp	r3, #0
 8002224:	d1c9      	bne.n	80021ba <HAL_SPI_Transmit+0x1be>
 8002226:	69ba      	ldr	r2, [r7, #24]
 8002228:	6839      	ldr	r1, [r7, #0]
 800222a:	68f8      	ldr	r0, [r7, #12]
 800222c:	f000 f8b2 	bl	8002394 <SPI_EndRxTxTransaction>
 8002230:	4603      	mov	r3, r0
 8002232:	2b00      	cmp	r3, #0
 8002234:	d002      	beq.n	800223c <HAL_SPI_Transmit+0x240>
 8002236:	68fb      	ldr	r3, [r7, #12]
 8002238:	2220      	movs	r2, #32
 800223a:	655a      	str	r2, [r3, #84]	@ 0x54
 800223c:	68fb      	ldr	r3, [r7, #12]
 800223e:	689b      	ldr	r3, [r3, #8]
 8002240:	2b00      	cmp	r3, #0
 8002242:	d10a      	bne.n	800225a <HAL_SPI_Transmit+0x25e>
 8002244:	2300      	movs	r3, #0
 8002246:	613b      	str	r3, [r7, #16]
 8002248:	68fb      	ldr	r3, [r7, #12]
 800224a:	681b      	ldr	r3, [r3, #0]
 800224c:	68db      	ldr	r3, [r3, #12]
 800224e:	613b      	str	r3, [r7, #16]
 8002250:	68fb      	ldr	r3, [r7, #12]
 8002252:	681b      	ldr	r3, [r3, #0]
 8002254:	689b      	ldr	r3, [r3, #8]
 8002256:	613b      	str	r3, [r7, #16]
 8002258:	693b      	ldr	r3, [r7, #16]
 800225a:	68fb      	ldr	r3, [r7, #12]
 800225c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800225e:	2b00      	cmp	r3, #0
 8002260:	d002      	beq.n	8002268 <HAL_SPI_Transmit+0x26c>
 8002262:	2301      	movs	r3, #1
 8002264:	77fb      	strb	r3, [r7, #31]
 8002266:	e003      	b.n	8002270 <HAL_SPI_Transmit+0x274>
 8002268:	68fb      	ldr	r3, [r7, #12]
 800226a:	2201      	movs	r2, #1
 800226c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8002270:	68fb      	ldr	r3, [r7, #12]
 8002272:	2200      	movs	r2, #0
 8002274:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002278:	7ffb      	ldrb	r3, [r7, #31]
 800227a:	4618      	mov	r0, r3
 800227c:	3720      	adds	r7, #32
 800227e:	46bd      	mov	sp, r7
 8002280:	bd80      	pop	{r7, pc}
	...

08002284 <SPI_WaitFlagStateUntilTimeout>:
 8002284:	b580      	push	{r7, lr}
 8002286:	b088      	sub	sp, #32
 8002288:	af00      	add	r7, sp, #0
 800228a:	60f8      	str	r0, [r7, #12]
 800228c:	60b9      	str	r1, [r7, #8]
 800228e:	603b      	str	r3, [r7, #0]
 8002290:	4613      	mov	r3, r2
 8002292:	71fb      	strb	r3, [r7, #7]
 8002294:	f7fe ff84 	bl	80011a0 <HAL_GetTick>
 8002298:	4602      	mov	r2, r0
 800229a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800229c:	1a9b      	subs	r3, r3, r2
 800229e:	683a      	ldr	r2, [r7, #0]
 80022a0:	4413      	add	r3, r2
 80022a2:	61fb      	str	r3, [r7, #28]
 80022a4:	f7fe ff7c 	bl	80011a0 <HAL_GetTick>
 80022a8:	61b8      	str	r0, [r7, #24]
 80022aa:	4b39      	ldr	r3, [pc, #228]	@ (8002390 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	015b      	lsls	r3, r3, #5
 80022b0:	0d1b      	lsrs	r3, r3, #20
 80022b2:	69fa      	ldr	r2, [r7, #28]
 80022b4:	fb02 f303 	mul.w	r3, r2, r3
 80022b8:	617b      	str	r3, [r7, #20]
 80022ba:	e054      	b.n	8002366 <SPI_WaitFlagStateUntilTimeout+0xe2>
 80022bc:	683b      	ldr	r3, [r7, #0]
 80022be:	f1b3 3fff 	cmp.w	r3, #4294967295
 80022c2:	d050      	beq.n	8002366 <SPI_WaitFlagStateUntilTimeout+0xe2>
 80022c4:	f7fe ff6c 	bl	80011a0 <HAL_GetTick>
 80022c8:	4602      	mov	r2, r0
 80022ca:	69bb      	ldr	r3, [r7, #24]
 80022cc:	1ad3      	subs	r3, r2, r3
 80022ce:	69fa      	ldr	r2, [r7, #28]
 80022d0:	429a      	cmp	r2, r3
 80022d2:	d902      	bls.n	80022da <SPI_WaitFlagStateUntilTimeout+0x56>
 80022d4:	69fb      	ldr	r3, [r7, #28]
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	d13d      	bne.n	8002356 <SPI_WaitFlagStateUntilTimeout+0xd2>
 80022da:	68fb      	ldr	r3, [r7, #12]
 80022dc:	681b      	ldr	r3, [r3, #0]
 80022de:	685a      	ldr	r2, [r3, #4]
 80022e0:	68fb      	ldr	r3, [r7, #12]
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80022e8:	605a      	str	r2, [r3, #4]
 80022ea:	68fb      	ldr	r3, [r7, #12]
 80022ec:	685b      	ldr	r3, [r3, #4]
 80022ee:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80022f2:	d111      	bne.n	8002318 <SPI_WaitFlagStateUntilTimeout+0x94>
 80022f4:	68fb      	ldr	r3, [r7, #12]
 80022f6:	689b      	ldr	r3, [r3, #8]
 80022f8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80022fc:	d004      	beq.n	8002308 <SPI_WaitFlagStateUntilTimeout+0x84>
 80022fe:	68fb      	ldr	r3, [r7, #12]
 8002300:	689b      	ldr	r3, [r3, #8]
 8002302:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002306:	d107      	bne.n	8002318 <SPI_WaitFlagStateUntilTimeout+0x94>
 8002308:	68fb      	ldr	r3, [r7, #12]
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	681a      	ldr	r2, [r3, #0]
 800230e:	68fb      	ldr	r3, [r7, #12]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002316:	601a      	str	r2, [r3, #0]
 8002318:	68fb      	ldr	r3, [r7, #12]
 800231a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800231c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002320:	d10f      	bne.n	8002342 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	681a      	ldr	r2, [r3, #0]
 8002328:	68fb      	ldr	r3, [r7, #12]
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8002330:	601a      	str	r2, [r3, #0]
 8002332:	68fb      	ldr	r3, [r7, #12]
 8002334:	681b      	ldr	r3, [r3, #0]
 8002336:	681a      	ldr	r2, [r3, #0]
 8002338:	68fb      	ldr	r3, [r7, #12]
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002340:	601a      	str	r2, [r3, #0]
 8002342:	68fb      	ldr	r3, [r7, #12]
 8002344:	2201      	movs	r2, #1
 8002346:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800234a:	68fb      	ldr	r3, [r7, #12]
 800234c:	2200      	movs	r2, #0
 800234e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002352:	2303      	movs	r3, #3
 8002354:	e017      	b.n	8002386 <SPI_WaitFlagStateUntilTimeout+0x102>
 8002356:	697b      	ldr	r3, [r7, #20]
 8002358:	2b00      	cmp	r3, #0
 800235a:	d101      	bne.n	8002360 <SPI_WaitFlagStateUntilTimeout+0xdc>
 800235c:	2300      	movs	r3, #0
 800235e:	61fb      	str	r3, [r7, #28]
 8002360:	697b      	ldr	r3, [r7, #20]
 8002362:	3b01      	subs	r3, #1
 8002364:	617b      	str	r3, [r7, #20]
 8002366:	68fb      	ldr	r3, [r7, #12]
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	689a      	ldr	r2, [r3, #8]
 800236c:	68bb      	ldr	r3, [r7, #8]
 800236e:	4013      	ands	r3, r2
 8002370:	68ba      	ldr	r2, [r7, #8]
 8002372:	429a      	cmp	r2, r3
 8002374:	bf0c      	ite	eq
 8002376:	2301      	moveq	r3, #1
 8002378:	2300      	movne	r3, #0
 800237a:	b2db      	uxtb	r3, r3
 800237c:	461a      	mov	r2, r3
 800237e:	79fb      	ldrb	r3, [r7, #7]
 8002380:	429a      	cmp	r2, r3
 8002382:	d19b      	bne.n	80022bc <SPI_WaitFlagStateUntilTimeout+0x38>
 8002384:	2300      	movs	r3, #0
 8002386:	4618      	mov	r0, r3
 8002388:	3720      	adds	r7, #32
 800238a:	46bd      	mov	sp, r7
 800238c:	bd80      	pop	{r7, pc}
 800238e:	bf00      	nop
 8002390:	20000030 	.word	0x20000030

08002394 <SPI_EndRxTxTransaction>:
 8002394:	b580      	push	{r7, lr}
 8002396:	b086      	sub	sp, #24
 8002398:	af02      	add	r7, sp, #8
 800239a:	60f8      	str	r0, [r7, #12]
 800239c:	60b9      	str	r1, [r7, #8]
 800239e:	607a      	str	r2, [r7, #4]
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	9300      	str	r3, [sp, #0]
 80023a4:	68bb      	ldr	r3, [r7, #8]
 80023a6:	2200      	movs	r2, #0
 80023a8:	2180      	movs	r1, #128	@ 0x80
 80023aa:	68f8      	ldr	r0, [r7, #12]
 80023ac:	f7ff ff6a 	bl	8002284 <SPI_WaitFlagStateUntilTimeout>
 80023b0:	4603      	mov	r3, r0
 80023b2:	2b00      	cmp	r3, #0
 80023b4:	d007      	beq.n	80023c6 <SPI_EndRxTxTransaction+0x32>
 80023b6:	68fb      	ldr	r3, [r7, #12]
 80023b8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80023ba:	f043 0220 	orr.w	r2, r3, #32
 80023be:	68fb      	ldr	r3, [r7, #12]
 80023c0:	655a      	str	r2, [r3, #84]	@ 0x54
 80023c2:	2303      	movs	r3, #3
 80023c4:	e000      	b.n	80023c8 <SPI_EndRxTxTransaction+0x34>
 80023c6:	2300      	movs	r3, #0
 80023c8:	4618      	mov	r0, r3
 80023ca:	3710      	adds	r7, #16
 80023cc:	46bd      	mov	sp, r7
 80023ce:	bd80      	pop	{r7, pc}

080023d0 <HAL_TIM_Base_Init>:
 80023d0:	b580      	push	{r7, lr}
 80023d2:	b082      	sub	sp, #8
 80023d4:	af00      	add	r7, sp, #0
 80023d6:	6078      	str	r0, [r7, #4]
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	2b00      	cmp	r3, #0
 80023dc:	d101      	bne.n	80023e2 <HAL_TIM_Base_Init+0x12>
 80023de:	2301      	movs	r3, #1
 80023e0:	e041      	b.n	8002466 <HAL_TIM_Base_Init+0x96>
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80023e8:	b2db      	uxtb	r3, r3
 80023ea:	2b00      	cmp	r3, #0
 80023ec:	d106      	bne.n	80023fc <HAL_TIM_Base_Init+0x2c>
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	2200      	movs	r2, #0
 80023f2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80023f6:	6878      	ldr	r0, [r7, #4]
 80023f8:	f7fe fdac 	bl	8000f54 <HAL_TIM_Base_MspInit>
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	2202      	movs	r2, #2
 8002400:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002404:	687b      	ldr	r3, [r7, #4]
 8002406:	681a      	ldr	r2, [r3, #0]
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	3304      	adds	r3, #4
 800240c:	4619      	mov	r1, r3
 800240e:	4610      	mov	r0, r2
 8002410:	f000 fa74 	bl	80028fc <TIM_Base_SetConfig>
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	2201      	movs	r2, #1
 8002418:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	2201      	movs	r2, #1
 8002420:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	2201      	movs	r2, #1
 8002428:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	2201      	movs	r2, #1
 8002430:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	2201      	movs	r2, #1
 8002438:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800243c:	687b      	ldr	r3, [r7, #4]
 800243e:	2201      	movs	r2, #1
 8002440:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	2201      	movs	r2, #1
 8002448:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	2201      	movs	r2, #1
 8002450:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	2201      	movs	r2, #1
 8002458:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	2201      	movs	r2, #1
 8002460:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002464:	2300      	movs	r3, #0
 8002466:	4618      	mov	r0, r3
 8002468:	3708      	adds	r7, #8
 800246a:	46bd      	mov	sp, r7
 800246c:	bd80      	pop	{r7, pc}
	...

08002470 <HAL_TIM_Base_Start_IT>:
 8002470:	b480      	push	{r7}
 8002472:	b085      	sub	sp, #20
 8002474:	af00      	add	r7, sp, #0
 8002476:	6078      	str	r0, [r7, #4]
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800247e:	b2db      	uxtb	r3, r3
 8002480:	2b01      	cmp	r3, #1
 8002482:	d001      	beq.n	8002488 <HAL_TIM_Base_Start_IT+0x18>
 8002484:	2301      	movs	r3, #1
 8002486:	e03a      	b.n	80024fe <HAL_TIM_Base_Start_IT+0x8e>
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	2202      	movs	r2, #2
 800248c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	681b      	ldr	r3, [r3, #0]
 8002494:	68da      	ldr	r2, [r3, #12]
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	681b      	ldr	r3, [r3, #0]
 800249a:	f042 0201 	orr.w	r2, r2, #1
 800249e:	60da      	str	r2, [r3, #12]
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	4a18      	ldr	r2, [pc, #96]	@ (8002508 <HAL_TIM_Base_Start_IT+0x98>)
 80024a6:	4293      	cmp	r3, r2
 80024a8:	d00e      	beq.n	80024c8 <HAL_TIM_Base_Start_IT+0x58>
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80024b2:	d009      	beq.n	80024c8 <HAL_TIM_Base_Start_IT+0x58>
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	4a14      	ldr	r2, [pc, #80]	@ (800250c <HAL_TIM_Base_Start_IT+0x9c>)
 80024ba:	4293      	cmp	r3, r2
 80024bc:	d004      	beq.n	80024c8 <HAL_TIM_Base_Start_IT+0x58>
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	4a13      	ldr	r2, [pc, #76]	@ (8002510 <HAL_TIM_Base_Start_IT+0xa0>)
 80024c4:	4293      	cmp	r3, r2
 80024c6:	d111      	bne.n	80024ec <HAL_TIM_Base_Start_IT+0x7c>
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	689b      	ldr	r3, [r3, #8]
 80024ce:	f003 0307 	and.w	r3, r3, #7
 80024d2:	60fb      	str	r3, [r7, #12]
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	2b06      	cmp	r3, #6
 80024d8:	d010      	beq.n	80024fc <HAL_TIM_Base_Start_IT+0x8c>
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	681a      	ldr	r2, [r3, #0]
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	f042 0201 	orr.w	r2, r2, #1
 80024e8:	601a      	str	r2, [r3, #0]
 80024ea:	e007      	b.n	80024fc <HAL_TIM_Base_Start_IT+0x8c>
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	681a      	ldr	r2, [r3, #0]
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	f042 0201 	orr.w	r2, r2, #1
 80024fa:	601a      	str	r2, [r3, #0]
 80024fc:	2300      	movs	r3, #0
 80024fe:	4618      	mov	r0, r3
 8002500:	3714      	adds	r7, #20
 8002502:	46bd      	mov	sp, r7
 8002504:	bc80      	pop	{r7}
 8002506:	4770      	bx	lr
 8002508:	40012c00 	.word	0x40012c00
 800250c:	40000400 	.word	0x40000400
 8002510:	40000800 	.word	0x40000800

08002514 <HAL_TIM_IRQHandler>:
 8002514:	b580      	push	{r7, lr}
 8002516:	b082      	sub	sp, #8
 8002518:	af00      	add	r7, sp, #0
 800251a:	6078      	str	r0, [r7, #4]
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	681b      	ldr	r3, [r3, #0]
 8002520:	691b      	ldr	r3, [r3, #16]
 8002522:	f003 0302 	and.w	r3, r3, #2
 8002526:	2b02      	cmp	r3, #2
 8002528:	d122      	bne.n	8002570 <HAL_TIM_IRQHandler+0x5c>
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	68db      	ldr	r3, [r3, #12]
 8002530:	f003 0302 	and.w	r3, r3, #2
 8002534:	2b02      	cmp	r3, #2
 8002536:	d11b      	bne.n	8002570 <HAL_TIM_IRQHandler+0x5c>
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	f06f 0202 	mvn.w	r2, #2
 8002540:	611a      	str	r2, [r3, #16]
 8002542:	687b      	ldr	r3, [r7, #4]
 8002544:	2201      	movs	r2, #1
 8002546:	771a      	strb	r2, [r3, #28]
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	699b      	ldr	r3, [r3, #24]
 800254e:	f003 0303 	and.w	r3, r3, #3
 8002552:	2b00      	cmp	r3, #0
 8002554:	d003      	beq.n	800255e <HAL_TIM_IRQHandler+0x4a>
 8002556:	6878      	ldr	r0, [r7, #4]
 8002558:	f000 f9b4 	bl	80028c4 <HAL_TIM_IC_CaptureCallback>
 800255c:	e005      	b.n	800256a <HAL_TIM_IRQHandler+0x56>
 800255e:	6878      	ldr	r0, [r7, #4]
 8002560:	f000 f9a7 	bl	80028b2 <HAL_TIM_OC_DelayElapsedCallback>
 8002564:	6878      	ldr	r0, [r7, #4]
 8002566:	f000 f9b6 	bl	80028d6 <HAL_TIM_PWM_PulseFinishedCallback>
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	2200      	movs	r2, #0
 800256e:	771a      	strb	r2, [r3, #28]
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	691b      	ldr	r3, [r3, #16]
 8002576:	f003 0304 	and.w	r3, r3, #4
 800257a:	2b04      	cmp	r3, #4
 800257c:	d122      	bne.n	80025c4 <HAL_TIM_IRQHandler+0xb0>
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	68db      	ldr	r3, [r3, #12]
 8002584:	f003 0304 	and.w	r3, r3, #4
 8002588:	2b04      	cmp	r3, #4
 800258a:	d11b      	bne.n	80025c4 <HAL_TIM_IRQHandler+0xb0>
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	f06f 0204 	mvn.w	r2, #4
 8002594:	611a      	str	r2, [r3, #16]
 8002596:	687b      	ldr	r3, [r7, #4]
 8002598:	2202      	movs	r2, #2
 800259a:	771a      	strb	r2, [r3, #28]
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	681b      	ldr	r3, [r3, #0]
 80025a0:	699b      	ldr	r3, [r3, #24]
 80025a2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80025a6:	2b00      	cmp	r3, #0
 80025a8:	d003      	beq.n	80025b2 <HAL_TIM_IRQHandler+0x9e>
 80025aa:	6878      	ldr	r0, [r7, #4]
 80025ac:	f000 f98a 	bl	80028c4 <HAL_TIM_IC_CaptureCallback>
 80025b0:	e005      	b.n	80025be <HAL_TIM_IRQHandler+0xaa>
 80025b2:	6878      	ldr	r0, [r7, #4]
 80025b4:	f000 f97d 	bl	80028b2 <HAL_TIM_OC_DelayElapsedCallback>
 80025b8:	6878      	ldr	r0, [r7, #4]
 80025ba:	f000 f98c 	bl	80028d6 <HAL_TIM_PWM_PulseFinishedCallback>
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	2200      	movs	r2, #0
 80025c2:	771a      	strb	r2, [r3, #28]
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	681b      	ldr	r3, [r3, #0]
 80025c8:	691b      	ldr	r3, [r3, #16]
 80025ca:	f003 0308 	and.w	r3, r3, #8
 80025ce:	2b08      	cmp	r3, #8
 80025d0:	d122      	bne.n	8002618 <HAL_TIM_IRQHandler+0x104>
 80025d2:	687b      	ldr	r3, [r7, #4]
 80025d4:	681b      	ldr	r3, [r3, #0]
 80025d6:	68db      	ldr	r3, [r3, #12]
 80025d8:	f003 0308 	and.w	r3, r3, #8
 80025dc:	2b08      	cmp	r3, #8
 80025de:	d11b      	bne.n	8002618 <HAL_TIM_IRQHandler+0x104>
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	f06f 0208 	mvn.w	r2, #8
 80025e8:	611a      	str	r2, [r3, #16]
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	2204      	movs	r2, #4
 80025ee:	771a      	strb	r2, [r3, #28]
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	69db      	ldr	r3, [r3, #28]
 80025f6:	f003 0303 	and.w	r3, r3, #3
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d003      	beq.n	8002606 <HAL_TIM_IRQHandler+0xf2>
 80025fe:	6878      	ldr	r0, [r7, #4]
 8002600:	f000 f960 	bl	80028c4 <HAL_TIM_IC_CaptureCallback>
 8002604:	e005      	b.n	8002612 <HAL_TIM_IRQHandler+0xfe>
 8002606:	6878      	ldr	r0, [r7, #4]
 8002608:	f000 f953 	bl	80028b2 <HAL_TIM_OC_DelayElapsedCallback>
 800260c:	6878      	ldr	r0, [r7, #4]
 800260e:	f000 f962 	bl	80028d6 <HAL_TIM_PWM_PulseFinishedCallback>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	2200      	movs	r2, #0
 8002616:	771a      	strb	r2, [r3, #28]
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	691b      	ldr	r3, [r3, #16]
 800261e:	f003 0310 	and.w	r3, r3, #16
 8002622:	2b10      	cmp	r3, #16
 8002624:	d122      	bne.n	800266c <HAL_TIM_IRQHandler+0x158>
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	681b      	ldr	r3, [r3, #0]
 800262a:	68db      	ldr	r3, [r3, #12]
 800262c:	f003 0310 	and.w	r3, r3, #16
 8002630:	2b10      	cmp	r3, #16
 8002632:	d11b      	bne.n	800266c <HAL_TIM_IRQHandler+0x158>
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	f06f 0210 	mvn.w	r2, #16
 800263c:	611a      	str	r2, [r3, #16]
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	2208      	movs	r2, #8
 8002642:	771a      	strb	r2, [r3, #28]
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	681b      	ldr	r3, [r3, #0]
 8002648:	69db      	ldr	r3, [r3, #28]
 800264a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800264e:	2b00      	cmp	r3, #0
 8002650:	d003      	beq.n	800265a <HAL_TIM_IRQHandler+0x146>
 8002652:	6878      	ldr	r0, [r7, #4]
 8002654:	f000 f936 	bl	80028c4 <HAL_TIM_IC_CaptureCallback>
 8002658:	e005      	b.n	8002666 <HAL_TIM_IRQHandler+0x152>
 800265a:	6878      	ldr	r0, [r7, #4]
 800265c:	f000 f929 	bl	80028b2 <HAL_TIM_OC_DelayElapsedCallback>
 8002660:	6878      	ldr	r0, [r7, #4]
 8002662:	f000 f938 	bl	80028d6 <HAL_TIM_PWM_PulseFinishedCallback>
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	2200      	movs	r2, #0
 800266a:	771a      	strb	r2, [r3, #28]
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	681b      	ldr	r3, [r3, #0]
 8002670:	691b      	ldr	r3, [r3, #16]
 8002672:	f003 0301 	and.w	r3, r3, #1
 8002676:	2b01      	cmp	r3, #1
 8002678:	d10e      	bne.n	8002698 <HAL_TIM_IRQHandler+0x184>
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	68db      	ldr	r3, [r3, #12]
 8002680:	f003 0301 	and.w	r3, r3, #1
 8002684:	2b01      	cmp	r3, #1
 8002686:	d107      	bne.n	8002698 <HAL_TIM_IRQHandler+0x184>
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	f06f 0201 	mvn.w	r2, #1
 8002690:	611a      	str	r2, [r3, #16]
 8002692:	6878      	ldr	r0, [r7, #4]
 8002694:	f7fe fbae 	bl	8000df4 <HAL_TIM_PeriodElapsedCallback>
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	681b      	ldr	r3, [r3, #0]
 800269c:	691b      	ldr	r3, [r3, #16]
 800269e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80026a2:	2b80      	cmp	r3, #128	@ 0x80
 80026a4:	d10e      	bne.n	80026c4 <HAL_TIM_IRQHandler+0x1b0>
 80026a6:	687b      	ldr	r3, [r7, #4]
 80026a8:	681b      	ldr	r3, [r3, #0]
 80026aa:	68db      	ldr	r3, [r3, #12]
 80026ac:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80026b0:	2b80      	cmp	r3, #128	@ 0x80
 80026b2:	d107      	bne.n	80026c4 <HAL_TIM_IRQHandler+0x1b0>
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80026bc:	611a      	str	r2, [r3, #16]
 80026be:	6878      	ldr	r0, [r7, #4]
 80026c0:	f000 fa7b 	bl	8002bba <HAL_TIMEx_BreakCallback>
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	681b      	ldr	r3, [r3, #0]
 80026c8:	691b      	ldr	r3, [r3, #16]
 80026ca:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80026ce:	2b40      	cmp	r3, #64	@ 0x40
 80026d0:	d10e      	bne.n	80026f0 <HAL_TIM_IRQHandler+0x1dc>
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	681b      	ldr	r3, [r3, #0]
 80026d6:	68db      	ldr	r3, [r3, #12]
 80026d8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80026dc:	2b40      	cmp	r3, #64	@ 0x40
 80026de:	d107      	bne.n	80026f0 <HAL_TIM_IRQHandler+0x1dc>
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80026e8:	611a      	str	r2, [r3, #16]
 80026ea:	6878      	ldr	r0, [r7, #4]
 80026ec:	f000 f8fc 	bl	80028e8 <HAL_TIM_TriggerCallback>
 80026f0:	687b      	ldr	r3, [r7, #4]
 80026f2:	681b      	ldr	r3, [r3, #0]
 80026f4:	691b      	ldr	r3, [r3, #16]
 80026f6:	f003 0320 	and.w	r3, r3, #32
 80026fa:	2b20      	cmp	r3, #32
 80026fc:	d10e      	bne.n	800271c <HAL_TIM_IRQHandler+0x208>
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	68db      	ldr	r3, [r3, #12]
 8002704:	f003 0320 	and.w	r3, r3, #32
 8002708:	2b20      	cmp	r3, #32
 800270a:	d107      	bne.n	800271c <HAL_TIM_IRQHandler+0x208>
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	f06f 0220 	mvn.w	r2, #32
 8002714:	611a      	str	r2, [r3, #16]
 8002716:	6878      	ldr	r0, [r7, #4]
 8002718:	f000 fa46 	bl	8002ba8 <HAL_TIMEx_CommutCallback>
 800271c:	bf00      	nop
 800271e:	3708      	adds	r7, #8
 8002720:	46bd      	mov	sp, r7
 8002722:	bd80      	pop	{r7, pc}

08002724 <HAL_TIM_ConfigClockSource>:
 8002724:	b580      	push	{r7, lr}
 8002726:	b084      	sub	sp, #16
 8002728:	af00      	add	r7, sp, #0
 800272a:	6078      	str	r0, [r7, #4]
 800272c:	6039      	str	r1, [r7, #0]
 800272e:	2300      	movs	r3, #0
 8002730:	73fb      	strb	r3, [r7, #15]
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002738:	2b01      	cmp	r3, #1
 800273a:	d101      	bne.n	8002740 <HAL_TIM_ConfigClockSource+0x1c>
 800273c:	2302      	movs	r3, #2
 800273e:	e0b4      	b.n	80028aa <HAL_TIM_ConfigClockSource+0x186>
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	2201      	movs	r2, #1
 8002744:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	2202      	movs	r2, #2
 800274c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	689b      	ldr	r3, [r3, #8]
 8002756:	60bb      	str	r3, [r7, #8]
 8002758:	68bb      	ldr	r3, [r7, #8]
 800275a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800275e:	60bb      	str	r3, [r7, #8]
 8002760:	68bb      	ldr	r3, [r7, #8]
 8002762:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002766:	60bb      	str	r3, [r7, #8]
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	681b      	ldr	r3, [r3, #0]
 800276c:	68ba      	ldr	r2, [r7, #8]
 800276e:	609a      	str	r2, [r3, #8]
 8002770:	683b      	ldr	r3, [r7, #0]
 8002772:	681b      	ldr	r3, [r3, #0]
 8002774:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002778:	d03e      	beq.n	80027f8 <HAL_TIM_ConfigClockSource+0xd4>
 800277a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800277e:	f200 8087 	bhi.w	8002890 <HAL_TIM_ConfigClockSource+0x16c>
 8002782:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002786:	f000 8086 	beq.w	8002896 <HAL_TIM_ConfigClockSource+0x172>
 800278a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800278e:	d87f      	bhi.n	8002890 <HAL_TIM_ConfigClockSource+0x16c>
 8002790:	2b70      	cmp	r3, #112	@ 0x70
 8002792:	d01a      	beq.n	80027ca <HAL_TIM_ConfigClockSource+0xa6>
 8002794:	2b70      	cmp	r3, #112	@ 0x70
 8002796:	d87b      	bhi.n	8002890 <HAL_TIM_ConfigClockSource+0x16c>
 8002798:	2b60      	cmp	r3, #96	@ 0x60
 800279a:	d050      	beq.n	800283e <HAL_TIM_ConfigClockSource+0x11a>
 800279c:	2b60      	cmp	r3, #96	@ 0x60
 800279e:	d877      	bhi.n	8002890 <HAL_TIM_ConfigClockSource+0x16c>
 80027a0:	2b50      	cmp	r3, #80	@ 0x50
 80027a2:	d03c      	beq.n	800281e <HAL_TIM_ConfigClockSource+0xfa>
 80027a4:	2b50      	cmp	r3, #80	@ 0x50
 80027a6:	d873      	bhi.n	8002890 <HAL_TIM_ConfigClockSource+0x16c>
 80027a8:	2b40      	cmp	r3, #64	@ 0x40
 80027aa:	d058      	beq.n	800285e <HAL_TIM_ConfigClockSource+0x13a>
 80027ac:	2b40      	cmp	r3, #64	@ 0x40
 80027ae:	d86f      	bhi.n	8002890 <HAL_TIM_ConfigClockSource+0x16c>
 80027b0:	2b30      	cmp	r3, #48	@ 0x30
 80027b2:	d064      	beq.n	800287e <HAL_TIM_ConfigClockSource+0x15a>
 80027b4:	2b30      	cmp	r3, #48	@ 0x30
 80027b6:	d86b      	bhi.n	8002890 <HAL_TIM_ConfigClockSource+0x16c>
 80027b8:	2b20      	cmp	r3, #32
 80027ba:	d060      	beq.n	800287e <HAL_TIM_ConfigClockSource+0x15a>
 80027bc:	2b20      	cmp	r3, #32
 80027be:	d867      	bhi.n	8002890 <HAL_TIM_ConfigClockSource+0x16c>
 80027c0:	2b00      	cmp	r3, #0
 80027c2:	d05c      	beq.n	800287e <HAL_TIM_ConfigClockSource+0x15a>
 80027c4:	2b10      	cmp	r3, #16
 80027c6:	d05a      	beq.n	800287e <HAL_TIM_ConfigClockSource+0x15a>
 80027c8:	e062      	b.n	8002890 <HAL_TIM_ConfigClockSource+0x16c>
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	6818      	ldr	r0, [r3, #0]
 80027ce:	683b      	ldr	r3, [r7, #0]
 80027d0:	6899      	ldr	r1, [r3, #8]
 80027d2:	683b      	ldr	r3, [r7, #0]
 80027d4:	685a      	ldr	r2, [r3, #4]
 80027d6:	683b      	ldr	r3, [r7, #0]
 80027d8:	68db      	ldr	r3, [r3, #12]
 80027da:	f000 f968 	bl	8002aae <TIM_ETR_SetConfig>
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	681b      	ldr	r3, [r3, #0]
 80027e2:	689b      	ldr	r3, [r3, #8]
 80027e4:	60bb      	str	r3, [r7, #8]
 80027e6:	68bb      	ldr	r3, [r7, #8]
 80027e8:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80027ec:	60bb      	str	r3, [r7, #8]
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	68ba      	ldr	r2, [r7, #8]
 80027f4:	609a      	str	r2, [r3, #8]
 80027f6:	e04f      	b.n	8002898 <HAL_TIM_ConfigClockSource+0x174>
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	6818      	ldr	r0, [r3, #0]
 80027fc:	683b      	ldr	r3, [r7, #0]
 80027fe:	6899      	ldr	r1, [r3, #8]
 8002800:	683b      	ldr	r3, [r7, #0]
 8002802:	685a      	ldr	r2, [r3, #4]
 8002804:	683b      	ldr	r3, [r7, #0]
 8002806:	68db      	ldr	r3, [r3, #12]
 8002808:	f000 f951 	bl	8002aae <TIM_ETR_SetConfig>
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	681b      	ldr	r3, [r3, #0]
 8002810:	689a      	ldr	r2, [r3, #8]
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	681b      	ldr	r3, [r3, #0]
 8002816:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800281a:	609a      	str	r2, [r3, #8]
 800281c:	e03c      	b.n	8002898 <HAL_TIM_ConfigClockSource+0x174>
 800281e:	687b      	ldr	r3, [r7, #4]
 8002820:	6818      	ldr	r0, [r3, #0]
 8002822:	683b      	ldr	r3, [r7, #0]
 8002824:	6859      	ldr	r1, [r3, #4]
 8002826:	683b      	ldr	r3, [r7, #0]
 8002828:	68db      	ldr	r3, [r3, #12]
 800282a:	461a      	mov	r2, r3
 800282c:	f000 f8c8 	bl	80029c0 <TIM_TI1_ConfigInputStage>
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	2150      	movs	r1, #80	@ 0x50
 8002836:	4618      	mov	r0, r3
 8002838:	f000 f91f 	bl	8002a7a <TIM_ITRx_SetConfig>
 800283c:	e02c      	b.n	8002898 <HAL_TIM_ConfigClockSource+0x174>
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	6818      	ldr	r0, [r3, #0]
 8002842:	683b      	ldr	r3, [r7, #0]
 8002844:	6859      	ldr	r1, [r3, #4]
 8002846:	683b      	ldr	r3, [r7, #0]
 8002848:	68db      	ldr	r3, [r3, #12]
 800284a:	461a      	mov	r2, r3
 800284c:	f000 f8e6 	bl	8002a1c <TIM_TI2_ConfigInputStage>
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	2160      	movs	r1, #96	@ 0x60
 8002856:	4618      	mov	r0, r3
 8002858:	f000 f90f 	bl	8002a7a <TIM_ITRx_SetConfig>
 800285c:	e01c      	b.n	8002898 <HAL_TIM_ConfigClockSource+0x174>
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	6818      	ldr	r0, [r3, #0]
 8002862:	683b      	ldr	r3, [r7, #0]
 8002864:	6859      	ldr	r1, [r3, #4]
 8002866:	683b      	ldr	r3, [r7, #0]
 8002868:	68db      	ldr	r3, [r3, #12]
 800286a:	461a      	mov	r2, r3
 800286c:	f000 f8a8 	bl	80029c0 <TIM_TI1_ConfigInputStage>
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	681b      	ldr	r3, [r3, #0]
 8002874:	2140      	movs	r1, #64	@ 0x40
 8002876:	4618      	mov	r0, r3
 8002878:	f000 f8ff 	bl	8002a7a <TIM_ITRx_SetConfig>
 800287c:	e00c      	b.n	8002898 <HAL_TIM_ConfigClockSource+0x174>
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	681a      	ldr	r2, [r3, #0]
 8002882:	683b      	ldr	r3, [r7, #0]
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	4619      	mov	r1, r3
 8002888:	4610      	mov	r0, r2
 800288a:	f000 f8f6 	bl	8002a7a <TIM_ITRx_SetConfig>
 800288e:	e003      	b.n	8002898 <HAL_TIM_ConfigClockSource+0x174>
 8002890:	2301      	movs	r3, #1
 8002892:	73fb      	strb	r3, [r7, #15]
 8002894:	e000      	b.n	8002898 <HAL_TIM_ConfigClockSource+0x174>
 8002896:	bf00      	nop
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	2201      	movs	r2, #1
 800289c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	2200      	movs	r2, #0
 80028a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80028a8:	7bfb      	ldrb	r3, [r7, #15]
 80028aa:	4618      	mov	r0, r3
 80028ac:	3710      	adds	r7, #16
 80028ae:	46bd      	mov	sp, r7
 80028b0:	bd80      	pop	{r7, pc}

080028b2 <HAL_TIM_OC_DelayElapsedCallback>:
 80028b2:	b480      	push	{r7}
 80028b4:	b083      	sub	sp, #12
 80028b6:	af00      	add	r7, sp, #0
 80028b8:	6078      	str	r0, [r7, #4]
 80028ba:	bf00      	nop
 80028bc:	370c      	adds	r7, #12
 80028be:	46bd      	mov	sp, r7
 80028c0:	bc80      	pop	{r7}
 80028c2:	4770      	bx	lr

080028c4 <HAL_TIM_IC_CaptureCallback>:
 80028c4:	b480      	push	{r7}
 80028c6:	b083      	sub	sp, #12
 80028c8:	af00      	add	r7, sp, #0
 80028ca:	6078      	str	r0, [r7, #4]
 80028cc:	bf00      	nop
 80028ce:	370c      	adds	r7, #12
 80028d0:	46bd      	mov	sp, r7
 80028d2:	bc80      	pop	{r7}
 80028d4:	4770      	bx	lr

080028d6 <HAL_TIM_PWM_PulseFinishedCallback>:
 80028d6:	b480      	push	{r7}
 80028d8:	b083      	sub	sp, #12
 80028da:	af00      	add	r7, sp, #0
 80028dc:	6078      	str	r0, [r7, #4]
 80028de:	bf00      	nop
 80028e0:	370c      	adds	r7, #12
 80028e2:	46bd      	mov	sp, r7
 80028e4:	bc80      	pop	{r7}
 80028e6:	4770      	bx	lr

080028e8 <HAL_TIM_TriggerCallback>:
 80028e8:	b480      	push	{r7}
 80028ea:	b083      	sub	sp, #12
 80028ec:	af00      	add	r7, sp, #0
 80028ee:	6078      	str	r0, [r7, #4]
 80028f0:	bf00      	nop
 80028f2:	370c      	adds	r7, #12
 80028f4:	46bd      	mov	sp, r7
 80028f6:	bc80      	pop	{r7}
 80028f8:	4770      	bx	lr
	...

080028fc <TIM_Base_SetConfig>:
 80028fc:	b480      	push	{r7}
 80028fe:	b085      	sub	sp, #20
 8002900:	af00      	add	r7, sp, #0
 8002902:	6078      	str	r0, [r7, #4]
 8002904:	6039      	str	r1, [r7, #0]
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	60fb      	str	r3, [r7, #12]
 800290c:	687b      	ldr	r3, [r7, #4]
 800290e:	4a29      	ldr	r2, [pc, #164]	@ (80029b4 <TIM_Base_SetConfig+0xb8>)
 8002910:	4293      	cmp	r3, r2
 8002912:	d00b      	beq.n	800292c <TIM_Base_SetConfig+0x30>
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800291a:	d007      	beq.n	800292c <TIM_Base_SetConfig+0x30>
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	4a26      	ldr	r2, [pc, #152]	@ (80029b8 <TIM_Base_SetConfig+0xbc>)
 8002920:	4293      	cmp	r3, r2
 8002922:	d003      	beq.n	800292c <TIM_Base_SetConfig+0x30>
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	4a25      	ldr	r2, [pc, #148]	@ (80029bc <TIM_Base_SetConfig+0xc0>)
 8002928:	4293      	cmp	r3, r2
 800292a:	d108      	bne.n	800293e <TIM_Base_SetConfig+0x42>
 800292c:	68fb      	ldr	r3, [r7, #12]
 800292e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002932:	60fb      	str	r3, [r7, #12]
 8002934:	683b      	ldr	r3, [r7, #0]
 8002936:	685b      	ldr	r3, [r3, #4]
 8002938:	68fa      	ldr	r2, [r7, #12]
 800293a:	4313      	orrs	r3, r2
 800293c:	60fb      	str	r3, [r7, #12]
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	4a1c      	ldr	r2, [pc, #112]	@ (80029b4 <TIM_Base_SetConfig+0xb8>)
 8002942:	4293      	cmp	r3, r2
 8002944:	d00b      	beq.n	800295e <TIM_Base_SetConfig+0x62>
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800294c:	d007      	beq.n	800295e <TIM_Base_SetConfig+0x62>
 800294e:	687b      	ldr	r3, [r7, #4]
 8002950:	4a19      	ldr	r2, [pc, #100]	@ (80029b8 <TIM_Base_SetConfig+0xbc>)
 8002952:	4293      	cmp	r3, r2
 8002954:	d003      	beq.n	800295e <TIM_Base_SetConfig+0x62>
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	4a18      	ldr	r2, [pc, #96]	@ (80029bc <TIM_Base_SetConfig+0xc0>)
 800295a:	4293      	cmp	r3, r2
 800295c:	d108      	bne.n	8002970 <TIM_Base_SetConfig+0x74>
 800295e:	68fb      	ldr	r3, [r7, #12]
 8002960:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002964:	60fb      	str	r3, [r7, #12]
 8002966:	683b      	ldr	r3, [r7, #0]
 8002968:	68db      	ldr	r3, [r3, #12]
 800296a:	68fa      	ldr	r2, [r7, #12]
 800296c:	4313      	orrs	r3, r2
 800296e:	60fb      	str	r3, [r7, #12]
 8002970:	68fb      	ldr	r3, [r7, #12]
 8002972:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8002976:	683b      	ldr	r3, [r7, #0]
 8002978:	695b      	ldr	r3, [r3, #20]
 800297a:	4313      	orrs	r3, r2
 800297c:	60fb      	str	r3, [r7, #12]
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	68fa      	ldr	r2, [r7, #12]
 8002982:	601a      	str	r2, [r3, #0]
 8002984:	683b      	ldr	r3, [r7, #0]
 8002986:	689a      	ldr	r2, [r3, #8]
 8002988:	687b      	ldr	r3, [r7, #4]
 800298a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800298c:	683b      	ldr	r3, [r7, #0]
 800298e:	681a      	ldr	r2, [r3, #0]
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	629a      	str	r2, [r3, #40]	@ 0x28
 8002994:	687b      	ldr	r3, [r7, #4]
 8002996:	4a07      	ldr	r2, [pc, #28]	@ (80029b4 <TIM_Base_SetConfig+0xb8>)
 8002998:	4293      	cmp	r3, r2
 800299a:	d103      	bne.n	80029a4 <TIM_Base_SetConfig+0xa8>
 800299c:	683b      	ldr	r3, [r7, #0]
 800299e:	691a      	ldr	r2, [r3, #16]
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	2201      	movs	r2, #1
 80029a8:	615a      	str	r2, [r3, #20]
 80029aa:	bf00      	nop
 80029ac:	3714      	adds	r7, #20
 80029ae:	46bd      	mov	sp, r7
 80029b0:	bc80      	pop	{r7}
 80029b2:	4770      	bx	lr
 80029b4:	40012c00 	.word	0x40012c00
 80029b8:	40000400 	.word	0x40000400
 80029bc:	40000800 	.word	0x40000800

080029c0 <TIM_TI1_ConfigInputStage>:
 80029c0:	b480      	push	{r7}
 80029c2:	b087      	sub	sp, #28
 80029c4:	af00      	add	r7, sp, #0
 80029c6:	60f8      	str	r0, [r7, #12]
 80029c8:	60b9      	str	r1, [r7, #8]
 80029ca:	607a      	str	r2, [r7, #4]
 80029cc:	68fb      	ldr	r3, [r7, #12]
 80029ce:	6a1b      	ldr	r3, [r3, #32]
 80029d0:	617b      	str	r3, [r7, #20]
 80029d2:	68fb      	ldr	r3, [r7, #12]
 80029d4:	6a1b      	ldr	r3, [r3, #32]
 80029d6:	f023 0201 	bic.w	r2, r3, #1
 80029da:	68fb      	ldr	r3, [r7, #12]
 80029dc:	621a      	str	r2, [r3, #32]
 80029de:	68fb      	ldr	r3, [r7, #12]
 80029e0:	699b      	ldr	r3, [r3, #24]
 80029e2:	613b      	str	r3, [r7, #16]
 80029e4:	693b      	ldr	r3, [r7, #16]
 80029e6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80029ea:	613b      	str	r3, [r7, #16]
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	011b      	lsls	r3, r3, #4
 80029f0:	693a      	ldr	r2, [r7, #16]
 80029f2:	4313      	orrs	r3, r2
 80029f4:	613b      	str	r3, [r7, #16]
 80029f6:	697b      	ldr	r3, [r7, #20]
 80029f8:	f023 030a 	bic.w	r3, r3, #10
 80029fc:	617b      	str	r3, [r7, #20]
 80029fe:	697a      	ldr	r2, [r7, #20]
 8002a00:	68bb      	ldr	r3, [r7, #8]
 8002a02:	4313      	orrs	r3, r2
 8002a04:	617b      	str	r3, [r7, #20]
 8002a06:	68fb      	ldr	r3, [r7, #12]
 8002a08:	693a      	ldr	r2, [r7, #16]
 8002a0a:	619a      	str	r2, [r3, #24]
 8002a0c:	68fb      	ldr	r3, [r7, #12]
 8002a0e:	697a      	ldr	r2, [r7, #20]
 8002a10:	621a      	str	r2, [r3, #32]
 8002a12:	bf00      	nop
 8002a14:	371c      	adds	r7, #28
 8002a16:	46bd      	mov	sp, r7
 8002a18:	bc80      	pop	{r7}
 8002a1a:	4770      	bx	lr

08002a1c <TIM_TI2_ConfigInputStage>:
 8002a1c:	b480      	push	{r7}
 8002a1e:	b087      	sub	sp, #28
 8002a20:	af00      	add	r7, sp, #0
 8002a22:	60f8      	str	r0, [r7, #12]
 8002a24:	60b9      	str	r1, [r7, #8]
 8002a26:	607a      	str	r2, [r7, #4]
 8002a28:	68fb      	ldr	r3, [r7, #12]
 8002a2a:	6a1b      	ldr	r3, [r3, #32]
 8002a2c:	617b      	str	r3, [r7, #20]
 8002a2e:	68fb      	ldr	r3, [r7, #12]
 8002a30:	6a1b      	ldr	r3, [r3, #32]
 8002a32:	f023 0210 	bic.w	r2, r3, #16
 8002a36:	68fb      	ldr	r3, [r7, #12]
 8002a38:	621a      	str	r2, [r3, #32]
 8002a3a:	68fb      	ldr	r3, [r7, #12]
 8002a3c:	699b      	ldr	r3, [r3, #24]
 8002a3e:	613b      	str	r3, [r7, #16]
 8002a40:	693b      	ldr	r3, [r7, #16]
 8002a42:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002a46:	613b      	str	r3, [r7, #16]
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	031b      	lsls	r3, r3, #12
 8002a4c:	693a      	ldr	r2, [r7, #16]
 8002a4e:	4313      	orrs	r3, r2
 8002a50:	613b      	str	r3, [r7, #16]
 8002a52:	697b      	ldr	r3, [r7, #20]
 8002a54:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8002a58:	617b      	str	r3, [r7, #20]
 8002a5a:	68bb      	ldr	r3, [r7, #8]
 8002a5c:	011b      	lsls	r3, r3, #4
 8002a5e:	697a      	ldr	r2, [r7, #20]
 8002a60:	4313      	orrs	r3, r2
 8002a62:	617b      	str	r3, [r7, #20]
 8002a64:	68fb      	ldr	r3, [r7, #12]
 8002a66:	693a      	ldr	r2, [r7, #16]
 8002a68:	619a      	str	r2, [r3, #24]
 8002a6a:	68fb      	ldr	r3, [r7, #12]
 8002a6c:	697a      	ldr	r2, [r7, #20]
 8002a6e:	621a      	str	r2, [r3, #32]
 8002a70:	bf00      	nop
 8002a72:	371c      	adds	r7, #28
 8002a74:	46bd      	mov	sp, r7
 8002a76:	bc80      	pop	{r7}
 8002a78:	4770      	bx	lr

08002a7a <TIM_ITRx_SetConfig>:
 8002a7a:	b480      	push	{r7}
 8002a7c:	b085      	sub	sp, #20
 8002a7e:	af00      	add	r7, sp, #0
 8002a80:	6078      	str	r0, [r7, #4]
 8002a82:	6039      	str	r1, [r7, #0]
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	689b      	ldr	r3, [r3, #8]
 8002a88:	60fb      	str	r3, [r7, #12]
 8002a8a:	68fb      	ldr	r3, [r7, #12]
 8002a8c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002a90:	60fb      	str	r3, [r7, #12]
 8002a92:	683a      	ldr	r2, [r7, #0]
 8002a94:	68fb      	ldr	r3, [r7, #12]
 8002a96:	4313      	orrs	r3, r2
 8002a98:	f043 0307 	orr.w	r3, r3, #7
 8002a9c:	60fb      	str	r3, [r7, #12]
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	68fa      	ldr	r2, [r7, #12]
 8002aa2:	609a      	str	r2, [r3, #8]
 8002aa4:	bf00      	nop
 8002aa6:	3714      	adds	r7, #20
 8002aa8:	46bd      	mov	sp, r7
 8002aaa:	bc80      	pop	{r7}
 8002aac:	4770      	bx	lr

08002aae <TIM_ETR_SetConfig>:
 8002aae:	b480      	push	{r7}
 8002ab0:	b087      	sub	sp, #28
 8002ab2:	af00      	add	r7, sp, #0
 8002ab4:	60f8      	str	r0, [r7, #12]
 8002ab6:	60b9      	str	r1, [r7, #8]
 8002ab8:	607a      	str	r2, [r7, #4]
 8002aba:	603b      	str	r3, [r7, #0]
 8002abc:	68fb      	ldr	r3, [r7, #12]
 8002abe:	689b      	ldr	r3, [r3, #8]
 8002ac0:	617b      	str	r3, [r7, #20]
 8002ac2:	697b      	ldr	r3, [r7, #20]
 8002ac4:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002ac8:	617b      	str	r3, [r7, #20]
 8002aca:	683b      	ldr	r3, [r7, #0]
 8002acc:	021a      	lsls	r2, r3, #8
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	431a      	orrs	r2, r3
 8002ad2:	68bb      	ldr	r3, [r7, #8]
 8002ad4:	4313      	orrs	r3, r2
 8002ad6:	697a      	ldr	r2, [r7, #20]
 8002ad8:	4313      	orrs	r3, r2
 8002ada:	617b      	str	r3, [r7, #20]
 8002adc:	68fb      	ldr	r3, [r7, #12]
 8002ade:	697a      	ldr	r2, [r7, #20]
 8002ae0:	609a      	str	r2, [r3, #8]
 8002ae2:	bf00      	nop
 8002ae4:	371c      	adds	r7, #28
 8002ae6:	46bd      	mov	sp, r7
 8002ae8:	bc80      	pop	{r7}
 8002aea:	4770      	bx	lr

08002aec <HAL_TIMEx_MasterConfigSynchronization>:
 8002aec:	b480      	push	{r7}
 8002aee:	b085      	sub	sp, #20
 8002af0:	af00      	add	r7, sp, #0
 8002af2:	6078      	str	r0, [r7, #4]
 8002af4:	6039      	str	r1, [r7, #0]
 8002af6:	687b      	ldr	r3, [r7, #4]
 8002af8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002afc:	2b01      	cmp	r3, #1
 8002afe:	d101      	bne.n	8002b04 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002b00:	2302      	movs	r3, #2
 8002b02:	e046      	b.n	8002b92 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	2201      	movs	r2, #1
 8002b08:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	2202      	movs	r2, #2
 8002b10:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	685b      	ldr	r3, [r3, #4]
 8002b1a:	60fb      	str	r3, [r7, #12]
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	681b      	ldr	r3, [r3, #0]
 8002b20:	689b      	ldr	r3, [r3, #8]
 8002b22:	60bb      	str	r3, [r7, #8]
 8002b24:	68fb      	ldr	r3, [r7, #12]
 8002b26:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002b2a:	60fb      	str	r3, [r7, #12]
 8002b2c:	683b      	ldr	r3, [r7, #0]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	68fa      	ldr	r2, [r7, #12]
 8002b32:	4313      	orrs	r3, r2
 8002b34:	60fb      	str	r3, [r7, #12]
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	681b      	ldr	r3, [r3, #0]
 8002b3a:	68fa      	ldr	r2, [r7, #12]
 8002b3c:	605a      	str	r2, [r3, #4]
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	681b      	ldr	r3, [r3, #0]
 8002b42:	4a16      	ldr	r2, [pc, #88]	@ (8002b9c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8002b44:	4293      	cmp	r3, r2
 8002b46:	d00e      	beq.n	8002b66 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002b50:	d009      	beq.n	8002b66 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	681b      	ldr	r3, [r3, #0]
 8002b56:	4a12      	ldr	r2, [pc, #72]	@ (8002ba0 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8002b58:	4293      	cmp	r3, r2
 8002b5a:	d004      	beq.n	8002b66 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	4a10      	ldr	r2, [pc, #64]	@ (8002ba4 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8002b62:	4293      	cmp	r3, r2
 8002b64:	d10c      	bne.n	8002b80 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8002b66:	68bb      	ldr	r3, [r7, #8]
 8002b68:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002b6c:	60bb      	str	r3, [r7, #8]
 8002b6e:	683b      	ldr	r3, [r7, #0]
 8002b70:	685b      	ldr	r3, [r3, #4]
 8002b72:	68ba      	ldr	r2, [r7, #8]
 8002b74:	4313      	orrs	r3, r2
 8002b76:	60bb      	str	r3, [r7, #8]
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	68ba      	ldr	r2, [r7, #8]
 8002b7e:	609a      	str	r2, [r3, #8]
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	2201      	movs	r2, #1
 8002b84:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b88:	687b      	ldr	r3, [r7, #4]
 8002b8a:	2200      	movs	r2, #0
 8002b8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b90:	2300      	movs	r3, #0
 8002b92:	4618      	mov	r0, r3
 8002b94:	3714      	adds	r7, #20
 8002b96:	46bd      	mov	sp, r7
 8002b98:	bc80      	pop	{r7}
 8002b9a:	4770      	bx	lr
 8002b9c:	40012c00 	.word	0x40012c00
 8002ba0:	40000400 	.word	0x40000400
 8002ba4:	40000800 	.word	0x40000800

08002ba8 <HAL_TIMEx_CommutCallback>:
 8002ba8:	b480      	push	{r7}
 8002baa:	b083      	sub	sp, #12
 8002bac:	af00      	add	r7, sp, #0
 8002bae:	6078      	str	r0, [r7, #4]
 8002bb0:	bf00      	nop
 8002bb2:	370c      	adds	r7, #12
 8002bb4:	46bd      	mov	sp, r7
 8002bb6:	bc80      	pop	{r7}
 8002bb8:	4770      	bx	lr

08002bba <HAL_TIMEx_BreakCallback>:
 8002bba:	b480      	push	{r7}
 8002bbc:	b083      	sub	sp, #12
 8002bbe:	af00      	add	r7, sp, #0
 8002bc0:	6078      	str	r0, [r7, #4]
 8002bc2:	bf00      	nop
 8002bc4:	370c      	adds	r7, #12
 8002bc6:	46bd      	mov	sp, r7
 8002bc8:	bc80      	pop	{r7}
 8002bca:	4770      	bx	lr

08002bcc <memset>:
 8002bcc:	4603      	mov	r3, r0
 8002bce:	4402      	add	r2, r0
 8002bd0:	4293      	cmp	r3, r2
 8002bd2:	d100      	bne.n	8002bd6 <memset+0xa>
 8002bd4:	4770      	bx	lr
 8002bd6:	f803 1b01 	strb.w	r1, [r3], #1
 8002bda:	e7f9      	b.n	8002bd0 <memset+0x4>

08002bdc <__libc_init_array>:
 8002bdc:	b570      	push	{r4, r5, r6, lr}
 8002bde:	2600      	movs	r6, #0
 8002be0:	4d0c      	ldr	r5, [pc, #48]	@ (8002c14 <__libc_init_array+0x38>)
 8002be2:	4c0d      	ldr	r4, [pc, #52]	@ (8002c18 <__libc_init_array+0x3c>)
 8002be4:	1b64      	subs	r4, r4, r5
 8002be6:	10a4      	asrs	r4, r4, #2
 8002be8:	42a6      	cmp	r6, r4
 8002bea:	d109      	bne.n	8002c00 <__libc_init_array+0x24>
 8002bec:	f000 f81a 	bl	8002c24 <_init>
 8002bf0:	2600      	movs	r6, #0
 8002bf2:	4d0a      	ldr	r5, [pc, #40]	@ (8002c1c <__libc_init_array+0x40>)
 8002bf4:	4c0a      	ldr	r4, [pc, #40]	@ (8002c20 <__libc_init_array+0x44>)
 8002bf6:	1b64      	subs	r4, r4, r5
 8002bf8:	10a4      	asrs	r4, r4, #2
 8002bfa:	42a6      	cmp	r6, r4
 8002bfc:	d105      	bne.n	8002c0a <__libc_init_array+0x2e>
 8002bfe:	bd70      	pop	{r4, r5, r6, pc}
 8002c00:	f855 3b04 	ldr.w	r3, [r5], #4
 8002c04:	4798      	blx	r3
 8002c06:	3601      	adds	r6, #1
 8002c08:	e7ee      	b.n	8002be8 <__libc_init_array+0xc>
 8002c0a:	f855 3b04 	ldr.w	r3, [r5], #4
 8002c0e:	4798      	blx	r3
 8002c10:	3601      	adds	r6, #1
 8002c12:	e7f2      	b.n	8002bfa <__libc_init_array+0x1e>
 8002c14:	08002c74 	.word	0x08002c74
 8002c18:	08002c74 	.word	0x08002c74
 8002c1c:	08002c74 	.word	0x08002c74
 8002c20:	08002c78 	.word	0x08002c78

08002c24 <_init>:
 8002c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c26:	bf00      	nop
 8002c28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c2a:	bc08      	pop	{r3}
 8002c2c:	469e      	mov	lr, r3
 8002c2e:	4770      	bx	lr

08002c30 <_fini>:
 8002c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c32:	bf00      	nop
 8002c34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c36:	bc08      	pop	{r3}
 8002c38:	469e      	mov	lr, r3
 8002c3a:	4770      	bx	lr
